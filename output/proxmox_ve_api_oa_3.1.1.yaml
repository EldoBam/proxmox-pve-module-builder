openapi: 3.1.1
info:
  title: Proxmox VE
  summary: Module to access Proxmox VE Api
  description: Generated module to access all Proxmox VE Api Endpoints
  termsOfService: ""
  contact:
    name: Timo Wolf
    url: https://timo-wolf.de
    email: amna.wolf@gmail.com
  version: "0.5"
  licence:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
jsonSchemaDialect: https://spec.openapis.org/oas/3.1/dialect/base
paths:
  /access:
    get:
      description: Directory index.
      responses: ""
      summary: Directory index.
      operationId: getAccess
      tags:
      - access
    summary: access
  /access/acl:
    get:
      description: Get Access Control List (ACLs).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessAcl'
      summary: Get Access Control List (ACLs).
      operationId: getAccessAcl
      tags:
      - access
    summary: acl
    put:
      operationId: setAccessAcl
      requestBody:
        description: Update Access Control List (add or remove permissions).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessAcl-RB'
      tags:
      - access
      description: Update Access Control List (add or remove permissions).
      summary: Update Access Control List (add or remove permissions).
      responses:
        "200":
          description: OK
  /access/domains:
    get:
      description: Authentication domain index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDomains'
      summary: Authentication domain index.
      operationId: getAccessDomains
      tags:
      - access
    summary: domains
    post:
      operationId: newAccessDomains
      requestBody:
        description: Add an authentication server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessDomains-RB'
      tags:
      - access
      description: Add an authentication server.
      summary: Add an authentication server.
      responses:
        "200":
          description: OK
  /access/domains/{realm}:
    get:
      operationId: getAccessDomainsByRealm
      tags:
      - access
      description: Get auth server configuration.
      summary: Get auth server configuration.
      parameters:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
        schema:
          type: string
          format: pve-realm
      responses: ""
    summary: realm
    delete:
      operationId: removeAccessDomainsByRealm
      tags:
      - access
      description: Delete an authentication server.
      summary: Delete an authentication server.
      parameters:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
        schema:
          type: string
          format: pve-realm
      responses:
        "200":
          description: OK
    put:
      operationId: setAccessDomainsByRealm
      requestBody:
        description: Update authentication server settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessDomains-RB'
      tags:
      - access
      description: Update authentication server settings.
      summary: Update authentication server settings.
      parameters:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
        schema:
          type: string
          format: pve-realm
      responses:
        "200":
          description: OK
  /access/domains/{realm}/sync:
    post:
      operationId: newAccessDomainsSyncByRealm
      requestBody:
        description: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessDomainsSync-RB'
      tags:
      - access
      description: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
      summary: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
      parameters:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
        schema:
          type: string
          format: pve-realm
      responses: ""
    summary: sync
  /access/groups:
    get:
      description: Group index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroups-GET'
      summary: Group index.
      operationId: getAccessGroups
      tags:
      - access
    summary: groups
    post:
      operationId: newAccessGroups
      requestBody:
        description: Create new group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessGroups-RB'
      tags:
      - access
      description: Create new group.
      summary: Create new group.
      responses:
        "200":
          description: OK
  /access/groups/{groupid}:
    get:
      operationId: getAccessGroupsByGroupid
      tags:
      - access
      description: Get group configuration.
      summary: Get group configuration.
      parameters:
      - name: groupid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-groupid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroups'
    summary: groupid
    delete:
      operationId: removeAccessGroupsByGroupid
      tags:
      - access
      description: Delete group.
      summary: Delete group.
      parameters:
      - name: groupid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-groupid
      responses:
        "200":
          description: OK
    put:
      operationId: setAccessGroupsByGroupid
      requestBody:
        description: Update group data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessGroups-RB'
      tags:
      - access
      description: Update group data.
      summary: Update group data.
      parameters:
      - name: groupid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-groupid
      responses:
        "200":
          description: OK
  /access/openid:
    get:
      description: Directory index.
      responses: ""
      summary: Directory index.
      operationId: getAccessOpenid
      tags:
      - access
    summary: openid
  /access/openid/auth-url:
    post:
      operationId: newAccessOpenidAuthurl
      requestBody:
        description: Get the OpenId Authorization Url for the specified realm.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessOpenidAuthurl-RB'
      tags:
      - access
      description: Get the OpenId Authorization Url for the specified realm.
      summary: Get the OpenId Authorization Url for the specified realm.
      responses: ""
    summary: auth-url
  /access/openid/login:
    post:
      operationId: newAccessOpenidLogin
      requestBody:
        description: ' Verify OpenID authorization code and create a ticket.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessOpenidLogin-RB'
      tags:
      - access
      description: ' Verify OpenID authorization code and create a ticket.'
      summary: ' Verify OpenID authorization code and create a ticket.'
      responses: ""
    summary: login
  /access/password:
    put:
      operationId: setAccessPassword
      requestBody:
        description: Change user password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessPassword-RB'
      tags:
      - access
      description: Change user password.
      summary: Change user password.
      responses:
        "200":
          description: OK
    summary: password
  /access/permissions:
    get:
      operationId: getAccessPermissions
      requestBody:
        description: Retrieve effective permissions of given user/token.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessPermissions-RB'
      tags:
      - access
      description: Retrieve effective permissions of given user/token.
      summary: Retrieve effective permissions of given user/token.
      responses: ""
    summary: permissions
  /access/roles:
    get:
      description: Role index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRoles-GET'
      summary: Role index.
      operationId: getAccessRoles
      tags:
      - access
    summary: roles
    post:
      operationId: newAccessRoles
      requestBody:
        description: Create new role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessRoles-RB'
      tags:
      - access
      description: Create new role.
      summary: Create new role.
      responses:
        "200":
          description: OK
  /access/roles/{roleid}:
    get:
      operationId: getAccessRolesByRoleid
      tags:
      - access
      description: Get role configuration.
      summary: Get role configuration.
      parameters:
      - name: roleid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-roleid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRoles'
    summary: roleid
    delete:
      operationId: removeAccessRolesByRoleid
      tags:
      - access
      description: Delete role.
      summary: Delete role.
      parameters:
      - name: roleid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-roleid
      responses:
        "200":
          description: OK
    put:
      operationId: setAccessRolesByRoleid
      requestBody:
        description: Update an existing role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessRoles-RB'
      tags:
      - access
      description: Update an existing role.
      summary: Update an existing role.
      parameters:
      - name: roleid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-roleid
      responses:
        "200":
          description: OK
  /access/tfa:
    get:
      description: List TFA configurations of users.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET'
      summary: List TFA configurations of users.
      operationId: getAccessTfa
      tags:
      - access
    summary: tfa
  /access/tfa/{userid}:
    get:
      operationId: getAccessTfaByUserid
      tags:
      - access
      description: List TFA configurations of users.
      summary: List TFA configurations of users.
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET-AV'
    summary: userid
    post:
      operationId: newAccessTfaByUserid
      requestBody:
        description: Add a TFA entry for a user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessTfa-RB'
      tags:
      - access
      description: Add a TFA entry for a user.
      summary: Add a TFA entry for a user.
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa'
  /access/tfa/{userid}/{id}:
    get:
      operationId: getAccessTfaByUseridAndId
      tags:
      - access
      description: Fetch a requested TFA entry if present.
      summary: Fetch a requested TFA entry if present.
      parameters:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET'
    summary: id
    delete:
      operationId: removeAccessTfaByUseridAndId
      requestBody:
        description: Delete a TFA entry by ID.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-AccessTfa-RB'
      tags:
      - access
      description: Delete a TFA entry by ID.
      summary: Delete a TFA entry by ID.
      parameters:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
    put:
      operationId: setAccessTfaByUseridAndId
      requestBody:
        description: Add a TFA entry for a user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessTfa-RB'
      tags:
      - access
      description: Add a TFA entry for a user.
      summary: Add a TFA entry for a user.
      parameters:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
  /access/ticket:
    get:
      description: Dummy. Useful for formatters which want to provide a login page.
      responses:
        "200":
          description: OK
      summary: Dummy. Useful for formatters which want to provide a login page.
      operationId: getAccessTicket
      tags:
      - access
    summary: ticket
    post:
      operationId: newAccessTicket
      requestBody:
        description: Create or verify authentication ticket.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessTicket-RB'
      tags:
      - access
      description: Create or verify authentication ticket.
      summary: Create or verify authentication ticket.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTicket'
  /access/users:
    get:
      operationId: getAccessUsers
      requestBody:
        description: User index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessUsers-RB'
      tags:
      - access
      description: User index.
      summary: User index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsers-GET'
    summary: users
    post:
      operationId: newAccessUsers
      requestBody:
        description: Create new user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessUsers-RB'
      tags:
      - access
      description: Create new user.
      summary: Create new user.
      responses:
        "200":
          description: OK
  /access/users/{userid}:
    get:
      operationId: getAccessUsersByUserid
      tags:
      - access
      description: Get user configuration.
      summary: Get user configuration.
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsers'
    summary: userid
    delete:
      operationId: removeAccessUsersByUserid
      tags:
      - access
      description: Delete user.
      summary: Delete user.
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
    put:
      operationId: setAccessUsersByUserid
      requestBody:
        description: Update user configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessUsers-RB'
      tags:
      - access
      description: Update user configuration.
      summary: Update user configuration.
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
  /access/users/{userid}/tfa:
    get:
      operationId: getAccessUsersTfaByUserid
      requestBody:
        description: Get user TFA types (Personal and Realm).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessUsersTfa-RB'
      tags:
      - access
      description: Get user TFA types (Personal and Realm).
      summary: Get user TFA types (Personal and Realm).
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersTfa'
    summary: tfa
  /access/users/{userid}/token:
    get:
      operationId: getAccessUsersTokenByUserid
      tags:
      - access
      description: Get user API tokens.
      summary: Get user API tokens.
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-GET'
    summary: token
  /access/users/{userid}/token/{tokenid}:
    get:
      operationId: getAccessUsersTokenByUseridAndTokenid
      tags:
      - access
      description: Get specific API token information.
      summary: Get specific API token information.
      parameters:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken'
    summary: tokenid
    delete:
      operationId: removeAccessUsersTokenByUseridAndTokenid
      tags:
      - access
      description: Remove API token for a specific user.
      summary: Remove API token for a specific user.
      parameters:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
    put:
      operationId: setAccessUsersTokenByUseridAndTokenid
      requestBody:
        description: Update API token for a specific user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessUsersToken-RB'
      tags:
      - access
      description: Update API token for a specific user.
      summary: Update API token for a specific user.
      parameters:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-PUT'
    post:
      operationId: newAccessUsersTokenByUseridAndTokenid
      requestBody:
        description: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessUsersToken-RB'
      tags:
      - access
      description: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
      summary: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
      parameters:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-POST'
  /access/users/{userid}/unlock-tfa:
    put:
      operationId: setAccessUsersUnlocktfaByUserid
      tags:
      - access
      description: Unlock a user's TFA authentication.
      summary: Unlock a user's TFA authentication.
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersUnlocktfa'
    summary: unlock-tfa
  /cluster:
    get:
      description: Cluster index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      summary: Cluster index.
      operationId: getCluster
      tags:
      - cluster
    summary: cluster
  /cluster/acme:
    get:
      description: ACMEAccount index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcme'
      summary: ACMEAccount index.
      operationId: getClusterAcme
      tags:
      - cluster
    summary: acme
  /cluster/acme/account:
    get:
      description: ACMEAccount index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeAccount-GET'
      summary: ACMEAccount index.
      operationId: getClusterAcmeAccount
      tags:
      - cluster
    summary: account
    post:
      operationId: newClusterAcmeAccount
      requestBody:
        description: Register a new ACME account with CA.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterAcmeAccount-RB'
      tags:
      - cluster
      description: Register a new ACME account with CA.
      summary: Register a new ACME account with CA.
      responses: ""
  /cluster/acme/account/{name}:
    get:
      operationId: getClusterAcmeAccountByName
      tags:
      - cluster
      description: Return existing ACME account information.
      summary: Return existing ACME account information.
      parameters:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeAccount'
    summary: name
    delete:
      operationId: removeClusterAcmeAccountByName
      tags:
      - cluster
      description: Deactivate existing ACME account at CA.
      summary: Deactivate existing ACME account at CA.
      parameters:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
    put:
      operationId: setClusterAcmeAccountByName
      requestBody:
        description: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterAcmeAccount-RB'
      tags:
      - cluster
      description: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
      summary: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
      parameters:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
  /cluster/acme/challenge-schema:
    get:
      description: Get schema of ACME challenge types.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeChallengeschema'
      summary: Get schema of ACME challenge types.
      operationId: getClusterAcmeChallengeschema
      tags:
      - cluster
    summary: challenge-schema
  /cluster/acme/directories:
    get:
      description: Get named known ACME directory endpoints.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeDirectories'
      summary: Get named known ACME directory endpoints.
      operationId: getClusterAcmeDirectories
      tags:
      - cluster
    summary: directories
  /cluster/acme/meta:
    get:
      operationId: getClusterAcmeMeta
      requestBody:
        description: Retrieve ACME Directory Meta Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmeMeta-RB'
      tags:
      - cluster
      description: Retrieve ACME Directory Meta Information
      summary: Retrieve ACME Directory Meta Information
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeMeta'
    summary: meta
  /cluster/acme/plugins:
    get:
      operationId: getClusterAcmePlugins
      requestBody:
        description: ACME plugin index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmePlugins-RB'
      tags:
      - cluster
      description: ACME plugin index.
      summary: ACME plugin index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmePlugins'
    summary: plugins
    post:
      operationId: newClusterAcmePlugins
      requestBody:
        description: Add ACME plugin configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterAcmePlugins-RB'
      tags:
      - cluster
      description: Add ACME plugin configuration.
      summary: Add ACME plugin configuration.
      responses:
        "200":
          description: OK
  /cluster/acme/plugins/{id}:
    get:
      operationId: getClusterAcmePluginsById
      tags:
      - cluster
      description: Get ACME plugin configuration.
      summary: Get ACME plugin configuration.
      parameters:
      - name: id
        in: path
        description: Unique identifier for ACME plugin instance.
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
    summary: id
    delete:
      operationId: removeClusterAcmePluginsById
      tags:
      - cluster
      description: Delete ACME plugin configuration.
      summary: Delete ACME plugin configuration.
      parameters:
      - name: id
        in: path
        description: Unique identifier for ACME plugin instance.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterAcmePluginsById
      requestBody:
        description: Update ACME plugin configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterAcmePlugins-RB'
      tags:
      - cluster
      description: Update ACME plugin configuration.
      summary: Update ACME plugin configuration.
      parameters:
      - name: id
        in: path
        description: ACME Plugin ID name
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/acme/tos:
    get:
      operationId: getClusterAcmeTos
      requestBody:
        description: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmeTos-RB'
      tags:
      - cluster
      description: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
      summary: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
      responses: ""
    summary: tos
  /cluster/backup:
    get:
      description: List vzdump backup schedule.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackup'
      summary: List vzdump backup schedule.
      operationId: getClusterBackup
      tags:
      - cluster
    summary: backup
    post:
      operationId: newClusterBackup
      requestBody:
        description: Create new vzdump backup job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterBackup-RB'
      tags:
      - cluster
      description: Create new vzdump backup job.
      summary: Create new vzdump backup job.
      responses:
        "200":
          description: OK
  /cluster/backup-info:
    get:
      description: Index for backup info related endpoints
      responses: ""
      summary: Index for backup info related endpoints
      operationId: getClusterBackupinfo
      tags:
      - cluster
    summary: backup-info
  /cluster/backup-info/not-backed-up:
    get:
      description: Shows all guests which are not covered by any backup job.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackupinfoNotbackedup'
      summary: Shows all guests which are not covered by any backup job.
      operationId: getClusterBackupinfoNotbackedup
      tags:
      - cluster
    summary: not-backed-up
  /cluster/backup/{id}:
    get:
      operationId: getClusterBackupById
      tags:
      - cluster
      description: Read vzdump backup job definition.
      summary: Read vzdump backup job definition.
      parameters:
      - name: id
        in: path
        description: The job ID.
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: id
    delete:
      operationId: removeClusterBackupById
      tags:
      - cluster
      description: Delete vzdump backup job definition.
      summary: Delete vzdump backup job definition.
      parameters:
      - name: id
        in: path
        description: The job ID.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterBackupById
      requestBody:
        description: Update vzdump backup job definition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterBackup-RB'
      tags:
      - cluster
      description: Update vzdump backup job definition.
      summary: Update vzdump backup job definition.
      parameters:
      - name: id
        in: path
        description: The job ID.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /cluster/backup/{id}/included_volumes:
    get:
      operationId: getClusterBackupIncludedvolumesById
      tags:
      - cluster
      description: Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.
      summary: Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.
      parameters:
      - name: id
        in: path
        description: The job ID.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackupIncludedvolumes'
    summary: includedvolumes
  /cluster/ceph:
    get:
      description: Cluster ceph index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCeph'
      summary: Cluster ceph index.
      operationId: getClusterCeph
      tags:
      - cluster
    summary: ceph
  /cluster/ceph/flags:
    get:
      description: get the status of all ceph flags
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephFlags'
      summary: get the status of all ceph flags
      operationId: getClusterCephFlags
      tags:
      - cluster
    summary: flags
    put:
      operationId: setClusterCephFlags
      requestBody:
        description: Set/Unset multiple ceph flags at once.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterCephFlags-RB'
      tags:
      - cluster
      description: Set/Unset multiple ceph flags at once.
      summary: Set/Unset multiple ceph flags at once.
      responses: ""
  /cluster/ceph/flags/{flag}:
    get:
      operationId: getClusterCephFlagsByFlag
      tags:
      - cluster
      description: Get the status of a specific ceph flag.
      summary: Get the status of a specific ceph flag.
      parameters:
      - name: flag
        in: path
        description: The name of the flag name to get.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephFlags-GET'
    summary: flag
    put:
      operationId: setClusterCephFlagsByFlag
      requestBody:
        description: Set or clear (unset) a specific ceph flag
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterCephFlags-RB'
      tags:
      - cluster
      description: Set or clear (unset) a specific ceph flag
      summary: Set or clear (unset) a specific ceph flag
      parameters:
      - name: flag
        in: path
        description: The ceph flag to update
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /cluster/ceph/metadata:
    get:
      operationId: getClusterCephMetadata
      requestBody:
        description: Get ceph metadata.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterCephMetadata-RB'
      tags:
      - cluster
      description: Get ceph metadata.
      summary: Get ceph metadata.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephMetadata'
    summary: metadata
  /cluster/ceph/status:
    get:
      description: Get ceph status.
      responses: ""
      summary: Get ceph status.
      operationId: getClusterCephStatus
      tags:
      - cluster
    summary: status
  /cluster/config:
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfig'
      summary: Directory index.
      operationId: getClusterConfig
      tags:
      - cluster
    summary: config
    post:
      operationId: newClusterConfig
      requestBody:
        description: Generate new cluster configuration. If no links given, default to local IP address as link0.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfig-RB'
      tags:
      - cluster
      description: Generate new cluster configuration. If no links given, default to local IP address as link0.
      summary: Generate new cluster configuration. If no links given, default to local IP address as link0.
      responses: ""
  /cluster/config/apiversion:
    get:
      description: Return the version of the cluster join API available on this node.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigApiversion'
      summary: Return the version of the cluster join API available on this node.
      operationId: getClusterConfigApiversion
      tags:
      - cluster
    summary: apiversion
  /cluster/config/join:
    get:
      operationId: getClusterConfigJoin
      requestBody:
        description: Get information needed to join this cluster over the connected node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterConfigJoin-RB'
      tags:
      - cluster
      description: Get information needed to join this cluster over the connected node.
      summary: Get information needed to join this cluster over the connected node.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigJoin'
    summary: join
    post:
      operationId: newClusterConfigJoin
      requestBody:
        description: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfigJoin-RB'
      tags:
      - cluster
      description: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
      summary: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
      responses: ""
  /cluster/config/nodes:
    get:
      description: Corosync node list.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigNodes-GET'
      summary: Corosync node list.
      operationId: getClusterConfigNodes
      tags:
      - cluster
    summary: nodes
  /cluster/config/nodes/{node}:
    summary: node
    delete:
      operationId: removeClusterConfigNodesByNode
      tags:
      - cluster
      description: Removes a node from the cluster configuration.
      summary: Removes a node from the cluster configuration.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
    post:
      operationId: newClusterConfigNodesByNode
      requestBody:
        description: Adds a node to the cluster configuration. This call is for internal use.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfigNodes-RB'
      tags:
      - cluster
      description: Adds a node to the cluster configuration. This call is for internal use.
      summary: Adds a node to the cluster configuration. This call is for internal use.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigNodes'
  /cluster/config/qdevice:
    get:
      description: Get QDevice status
      responses: ""
      summary: Get QDevice status
      operationId: getClusterConfigQdevice
      tags:
      - cluster
    summary: qdevice
  /cluster/config/totem:
    get:
      description: Get corosync totem protocol settings.
      responses: ""
      summary: Get corosync totem protocol settings.
      operationId: getClusterConfigTotem
      tags:
      - cluster
    summary: totem
  /cluster/firewall:
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewall'
      summary: Directory index.
      operationId: getClusterFirewall
      tags:
      - cluster
    summary: firewall
  /cluster/firewall/aliases:
    get:
      description: List aliases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallAliases'
      summary: List aliases
      operationId: getClusterFirewallAliases
      tags:
      - cluster
    summary: aliases
    post:
      operationId: newClusterFirewallAliases
      requestBody:
        description: Create IP or Network Alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallAliases-RB'
      tags:
      - cluster
      description: Create IP or Network Alias.
      summary: Create IP or Network Alias.
      responses:
        "200":
          description: OK
  /cluster/firewall/aliases/{name}:
    get:
      operationId: getClusterFirewallAliasesByName
      tags:
      - cluster
      description: Read alias.
      summary: Read alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: name
    delete:
      operationId: removeClusterFirewallAliasesByName
      requestBody:
        description: Remove IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallAliases-RB'
      tags:
      - cluster
      description: Remove IP or Network alias.
      summary: Remove IP or Network alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterFirewallAliasesByName
      requestBody:
        description: Update IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallAliases-RB'
      tags:
      - cluster
      description: Update IP or Network alias.
      summary: Update IP or Network alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /cluster/firewall/groups:
    get:
      description: List security groups.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups-GET'
      summary: List security groups.
      operationId: getClusterFirewallGroups
      tags:
      - cluster
    summary: groups
    post:
      operationId: newClusterFirewallGroups
      requestBody:
        description: Create new security group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallGroups-RB'
      tags:
      - cluster
      description: Create new security group.
      summary: Create new security group.
      responses:
        "200":
          description: OK
  /cluster/firewall/groups/{group}:
    get:
      operationId: getClusterFirewallGroupsByGroup
      tags:
      - cluster
      description: List rules.
      summary: List rules.
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups-GET-AV'
    summary: group
    delete:
      operationId: removeClusterFirewallGroupsByGroup
      tags:
      - cluster
      description: Delete security group.
      summary: Delete security group.
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
    post:
      operationId: newClusterFirewallGroupsByGroup
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallGroups-RB'
      tags:
      - cluster
      description: Create new rule.
      summary: Create new rule.
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /cluster/firewall/groups/{group}/{pos}:
    get:
      operationId: getClusterFirewallGroupsByGroupAndPos
      tags:
      - cluster
      description: Get single rule data.
      summary: Get single rule data.
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups'
    summary: pos
    delete:
      operationId: removeClusterFirewallGroupsByGroupAndPos
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallGroups-RB'
      tags:
      - cluster
      description: Delete rule.
      summary: Delete rule.
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterFirewallGroupsByGroupAndPos
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallGroups-RB'
      tags:
      - cluster
      description: Modify rule data.
      summary: Modify rule data.
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
  /cluster/firewall/ipset:
    get:
      description: List IPSets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallIpset'
      summary: List IPSets
      operationId: getClusterFirewallIpset
      tags:
      - cluster
    summary: ipset
    post:
      operationId: newClusterFirewallIpset
      requestBody:
        description: Create new IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallIpset-RB'
      tags:
      - cluster
      description: Create new IPSet
      summary: Create new IPSet
      responses:
        "200":
          description: OK
  /cluster/firewall/ipset/{name}:
    get:
      operationId: getClusterFirewallIpsetByName
      tags:
      - cluster
      description: List IPSet content
      summary: List IPSet content
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallIpset-GET'
    summary: name
    delete:
      operationId: removeClusterFirewallIpsetByName
      requestBody:
        description: Delete IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallIpset-RB'
      tags:
      - cluster
      description: Delete IPSet
      summary: Delete IPSet
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
    post:
      operationId: newClusterFirewallIpsetByName
      requestBody:
        description: Add IP or Network to IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallIpset-RB'
      tags:
      - cluster
      description: Add IP or Network to IPSet.
      summary: Add IP or Network to IPSet.
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /cluster/firewall/ipset/{name}/{cidr}:
    get:
      operationId: getClusterFirewallIpsetByNameAndCidr
      tags:
      - cluster
      description: Read IP or Network settings from IPSet.
      summary: Read IP or Network settings from IPSet.
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: cidr
    delete:
      operationId: removeClusterFirewallIpsetByNameAndCidr
      requestBody:
        description: Remove IP or Network from IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallIpset-RB'
      tags:
      - cluster
      description: Remove IP or Network from IPSet.
      summary: Remove IP or Network from IPSet.
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterFirewallIpsetByNameAndCidr
      requestBody:
        description: Update IP or Network settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallIpset-RB'
      tags:
      - cluster
      description: Update IP or Network settings
      summary: Update IP or Network settings
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /cluster/firewall/macros:
    get:
      description: List available macros
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallMacros'
      summary: List available macros
      operationId: getClusterFirewallMacros
      tags:
      - cluster
    summary: macros
  /cluster/firewall/options:
    get:
      description: Get Firewall options.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallOptions'
      summary: Get Firewall options.
      operationId: getClusterFirewallOptions
      tags:
      - cluster
    summary: options
    put:
      operationId: setClusterFirewallOptions
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallOptions-RB'
      tags:
      - cluster
      description: Set Firewall options.
      summary: Set Firewall options.
      responses:
        "200":
          description: OK
  /cluster/firewall/refs:
    get:
      operationId: getClusterFirewallRefs
      requestBody:
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterFirewallRefs-RB'
      tags:
      - cluster
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRefs'
    summary: refs
  /cluster/firewall/rules:
    get:
      description: List rules.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRules-GET'
      summary: List rules.
      operationId: getClusterFirewallRules
      tags:
      - cluster
    summary: rules
    post:
      operationId: newClusterFirewallRules
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallRules-RB'
      tags:
      - cluster
      description: Create new rule.
      summary: Create new rule.
      responses:
        "200":
          description: OK
  /cluster/firewall/rules/{pos}:
    get:
      operationId: getClusterFirewallRulesByPos
      tags:
      - cluster
      description: Get single rule data.
      summary: Get single rule data.
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRules'
    summary: pos
    delete:
      operationId: removeClusterFirewallRulesByPos
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallRules-RB'
      tags:
      - cluster
      description: Delete rule.
      summary: Delete rule.
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterFirewallRulesByPos
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallRules-RB'
      tags:
      - cluster
      description: Modify rule data.
      summary: Modify rule data.
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
  /cluster/ha:
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHa'
      summary: Directory index.
      operationId: getClusterHa
      tags:
      - cluster
    summary: ha
  /cluster/ha/groups:
    get:
      description: Get HA groups.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaGroups'
      summary: Get HA groups.
      operationId: getClusterHaGroups
      tags:
      - cluster
    summary: groups
    post:
      operationId: newClusterHaGroups
      requestBody:
        description: Create a new HA group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaGroups-RB'
      tags:
      - cluster
      description: Create a new HA group.
      summary: Create a new HA group.
      responses:
        "200":
          description: OK
  /cluster/ha/groups/{group}:
    get:
      operationId: getClusterHaGroupsByGroup
      tags:
      - cluster
      description: Read ha group configuration.
      summary: Read ha group configuration.
      parameters:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
    summary: group
    delete:
      operationId: removeClusterHaGroupsByGroup
      tags:
      - cluster
      description: Delete ha group configuration.
      summary: Delete ha group configuration.
      parameters:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterHaGroupsByGroup
      requestBody:
        description: Update ha group configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterHaGroups-RB'
      tags:
      - cluster
      description: Update ha group configuration.
      summary: Update ha group configuration.
      parameters:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/ha/resources:
    get:
      operationId: getClusterHaResources
      requestBody:
        description: List HA resources.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterHaResources-RB'
      tags:
      - cluster
      description: List HA resources.
      summary: List HA resources.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaResources-GET'
    summary: resources
    post:
      operationId: newClusterHaResources
      requestBody:
        description: Create a new HA resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResources-RB'
      tags:
      - cluster
      description: Create a new HA resource.
      summary: Create a new HA resource.
      responses:
        "200":
          description: OK
  /cluster/ha/resources/{sid}:
    get:
      operationId: getClusterHaResourcesBySid
      tags:
      - cluster
      description: Read resource configuration.
      summary: Read resource configuration.
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaResources'
    summary: sid
    delete:
      operationId: removeClusterHaResourcesBySid
      tags:
      - cluster
      description: Delete resource configuration.
      summary: Delete resource configuration.
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterHaResourcesBySid
      requestBody:
        description: Update resource configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterHaResources-RB'
      tags:
      - cluster
      description: Update resource configuration.
      summary: Update resource configuration.
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      responses:
        "200":
          description: OK
  /cluster/ha/resources/{sid}/migrate:
    post:
      operationId: newClusterHaResourcesMigrateBySid
      requestBody:
        description: Request resource migration (online) to another node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResourcesMigrate-RB'
      tags:
      - cluster
      description: Request resource migration (online) to another node.
      summary: Request resource migration (online) to another node.
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      responses:
        "200":
          description: OK
    summary: migrate
  /cluster/ha/resources/{sid}/relocate:
    post:
      operationId: newClusterHaResourcesRelocateBySid
      requestBody:
        description: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResourcesRelocate-RB'
      tags:
      - cluster
      description: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
      summary: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      responses:
        "200":
          description: OK
    summary: relocate
  /cluster/ha/status:
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaStatus'
      summary: Directory index.
      operationId: getClusterHaStatus
      tags:
      - cluster
    summary: status
  /cluster/ha/status/current:
    get:
      description: Get HA manger status.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaStatusCurrent'
      summary: Get HA manger status.
      operationId: getClusterHaStatusCurrent
      tags:
      - cluster
    summary: current
  /cluster/ha/status/manager_status:
    get:
      description: Get full HA manger status, including LRM status.
      responses: ""
      summary: Get full HA manger status, including LRM status.
      operationId: getClusterHaStatusManagerstatus
      tags:
      - cluster
    summary: managerstatus
  /cluster/jobs:
    get:
      description: Index for jobs related endpoints.
      responses: ""
      summary: Index for jobs related endpoints.
      operationId: getClusterJobs
      tags:
      - cluster
    summary: jobs
  /cluster/jobs/realm-sync:
    get:
      description: List configured realm-sync-jobs.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterJobsRealmsync'
      summary: List configured realm-sync-jobs.
      operationId: getClusterJobsRealmsync
      tags:
      - cluster
    summary: realm-sync
  /cluster/jobs/realm-sync/{id}:
    get:
      operationId: getClusterJobsRealmsyncById
      tags:
      - cluster
      description: Read realm-sync job definition.
      summary: Read realm-sync job definition.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
    summary: id
    delete:
      operationId: removeClusterJobsRealmsyncById
      tags:
      - cluster
      description: Delete realm-sync job definition.
      summary: Delete realm-sync job definition.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterJobsRealmsyncById
      requestBody:
        description: Update realm-sync job definition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterJobsRealmsync-RB'
      tags:
      - cluster
      description: Update realm-sync job definition.
      summary: Update realm-sync job definition.
      parameters:
      - name: id
        in: path
        description: The ID of the job.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    post:
      operationId: newClusterJobsRealmsyncById
      requestBody:
        description: Create new realm-sync job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterJobsRealmsync-RB'
      tags:
      - cluster
      description: Create new realm-sync job.
      summary: Create new realm-sync job.
      parameters:
      - name: id
        in: path
        description: The ID of the job.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/jobs/schedule-analyze:
    get:
      operationId: getClusterJobsScheduleanalyze
      requestBody:
        description: Returns a list of future schedule runtimes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterJobsScheduleanalyze-RB'
      tags:
      - cluster
      description: Returns a list of future schedule runtimes.
      summary: Returns a list of future schedule runtimes.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterJobsScheduleanalyze'
    summary: schedule-analyze
  /cluster/log:
    get:
      operationId: getClusterLog
      requestBody:
        description: Read cluster log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterLog-RB'
      tags:
      - cluster
      description: Read cluster log
      summary: Read cluster log
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterLog'
    summary: log
  /cluster/mapping:
    get:
      description: List resource types.
      responses: ""
      summary: List resource types.
      operationId: getClusterMapping
      tags:
      - cluster
    summary: mapping
  /cluster/mapping/dir:
    get:
      operationId: getClusterMappingDir
      requestBody:
        description: List directory mapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMappingDir-RB'
      tags:
      - cluster
      description: List directory mapping
      summary: List directory mapping
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMappingDir'
    summary: dir
    post:
      operationId: newClusterMappingDir
      requestBody:
        description: Create a new directory mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMappingDir-RB'
      tags:
      - cluster
      description: Create a new directory mapping.
      summary: Create a new directory mapping.
      responses:
        "200":
          description: OK
  /cluster/mapping/dir/{id}:
    get:
      operationId: getClusterMappingDirById
      tags:
      - cluster
      description: Get directory mapping.
      summary: Get directory mapping.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
    summary: id
    delete:
      operationId: removeClusterMappingDirById
      tags:
      - cluster
      description: Remove directory mapping.
      summary: Remove directory mapping.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterMappingDirById
      requestBody:
        description: Update a directory mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMappingDir-RB'
      tags:
      - cluster
      description: Update a directory mapping.
      summary: Update a directory mapping.
      parameters:
      - name: id
        in: path
        description: The ID of the directory mapping
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/mapping/pci:
    get:
      operationId: getClusterMappingPci
      requestBody:
        description: List PCI Hardware Mapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMappingPci-RB'
      tags:
      - cluster
      description: List PCI Hardware Mapping
      summary: List PCI Hardware Mapping
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMappingPci'
    summary: pci
    post:
      operationId: newClusterMappingPci
      requestBody:
        description: Create a new hardware mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMappingPci-RB'
      tags:
      - cluster
      description: Create a new hardware mapping.
      summary: Create a new hardware mapping.
      responses:
        "200":
          description: OK
  /cluster/mapping/pci/{id}:
    get:
      operationId: getClusterMappingPciById
      tags:
      - cluster
      description: Get PCI Mapping.
      summary: Get PCI Mapping.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
    summary: id
    delete:
      operationId: removeClusterMappingPciById
      tags:
      - cluster
      description: Remove Hardware Mapping.
      summary: Remove Hardware Mapping.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterMappingPciById
      requestBody:
        description: Update a hardware mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMappingPci-RB'
      tags:
      - cluster
      description: Update a hardware mapping.
      summary: Update a hardware mapping.
      parameters:
      - name: id
        in: path
        description: The ID of the logical PCI mapping.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/mapping/usb:
    get:
      operationId: getClusterMappingUsb
      requestBody:
        description: List USB Hardware Mappings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMappingUsb-RB'
      tags:
      - cluster
      description: List USB Hardware Mappings
      summary: List USB Hardware Mappings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMappingUsb'
    summary: usb
    post:
      operationId: newClusterMappingUsb
      requestBody:
        description: Create a new hardware mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMappingUsb-RB'
      tags:
      - cluster
      description: Create a new hardware mapping.
      summary: Create a new hardware mapping.
      responses:
        "200":
          description: OK
  /cluster/mapping/usb/{id}:
    get:
      operationId: getClusterMappingUsbById
      tags:
      - cluster
      description: Get USB Mapping.
      summary: Get USB Mapping.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
    summary: id
    delete:
      operationId: removeClusterMappingUsbById
      tags:
      - cluster
      description: Remove Hardware Mapping.
      summary: Remove Hardware Mapping.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterMappingUsbById
      requestBody:
        description: Update a hardware mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMappingUsb-RB'
      tags:
      - cluster
      description: Update a hardware mapping.
      summary: Update a hardware mapping.
      parameters:
      - name: id
        in: path
        description: The ID of the logical USB mapping.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/metrics:
    get:
      description: Metrics index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetrics'
      summary: Metrics index.
      operationId: getClusterMetrics
      tags:
      - cluster
    summary: metrics
  /cluster/metrics/export:
    get:
      operationId: getClusterMetricsExport
      requestBody:
        description: Retrieve metrics of the cluster.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMetricsExport-RB'
      tags:
      - cluster
      description: Retrieve metrics of the cluster.
      summary: Retrieve metrics of the cluster.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsExport'
    summary: export
  /cluster/metrics/server:
    get:
      description: List configured metric servers.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsServer'
      summary: List configured metric servers.
      operationId: getClusterMetricsServer
      tags:
      - cluster
    summary: server
  /cluster/metrics/server/{id}:
    get:
      operationId: getClusterMetricsServerById
      tags:
      - cluster
      description: Read metric server configuration.
      summary: Read metric server configuration.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses: ""
    summary: id
    delete:
      operationId: removeClusterMetricsServerById
      tags:
      - cluster
      description: Remove Metric server.
      summary: Remove Metric server.
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterMetricsServerById
      requestBody:
        description: Update metric server configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMetricsServer-RB'
      tags:
      - cluster
      description: Update metric server configuration.
      summary: Update metric server configuration.
      parameters:
      - name: id
        in: path
        description: The ID of the entry.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    post:
      operationId: newClusterMetricsServerById
      requestBody:
        description: Create a new external metric server config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMetricsServer-RB'
      tags:
      - cluster
      description: Create a new external metric server config
      summary: Create a new external metric server config
      parameters:
      - name: id
        in: path
        description: The ID of the entry.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/nextid:
    get:
      operationId: getClusterNextid
      requestBody:
        description: Get next free VMID. Pass a VMID to assert that its free (at time of check).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterNextid-RB'
      tags:
      - cluster
      description: Get next free VMID. Pass a VMID to assert that its free (at time of check).
      summary: Get next free VMID. Pass a VMID to assert that its free (at time of check).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNextid'
    summary: nextid
  /cluster/notifications:
    get:
      description: Index for notification-related API endpoints.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotifications'
      summary: Index for notification-related API endpoints.
      operationId: getClusterNotifications
      tags:
      - cluster
    summary: notifications
  /cluster/notifications/endpoints:
    get:
      description: Index for all available endpoint types.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpoints'
      summary: Index for all available endpoint types.
      operationId: getClusterNotificationsEndpoints
      tags:
      - cluster
    summary: endpoints
  /cluster/notifications/endpoints/gotify:
    get:
      description: Returns a list of all gotify endpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsGotify-GET'
      summary: Returns a list of all gotify endpoints
      operationId: getClusterNotificationsEndpointsGotify
      tags:
      - cluster
    summary: gotify
    post:
      operationId: newClusterNotificationsEndpointsGotify
      requestBody:
        description: Create a new gotify endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsGotify-RB'
      tags:
      - cluster
      description: Create a new gotify endpoint
      summary: Create a new gotify endpoint
      responses:
        "200":
          description: OK
  /cluster/notifications/endpoints/gotify/{name}:
    get:
      operationId: getClusterNotificationsEndpointsGotifyByName
      tags:
      - cluster
      description: Return a specific gotify endpoint
      summary: Return a specific gotify endpoint
      parameters:
      - name: name
        in: path
        description: Name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsGotify'
    summary: name
    delete:
      operationId: removeClusterNotificationsEndpointsGotifyByName
      tags:
      - cluster
      description: Remove gotify endpoint
      summary: Remove gotify endpoint
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterNotificationsEndpointsGotifyByName
      requestBody:
        description: Update existing gotify endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsGotify-RB'
      tags:
      - cluster
      description: Update existing gotify endpoint
      summary: Update existing gotify endpoint
      parameters:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/notifications/endpoints/sendmail:
    get:
      description: Returns a list of all sendmail endpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSendmail-GET'
      summary: Returns a list of all sendmail endpoints
      operationId: getClusterNotificationsEndpointsSendmail
      tags:
      - cluster
    summary: sendmail
    post:
      operationId: newClusterNotificationsEndpointsSendmail
      requestBody:
        description: Create a new sendmail endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsSendmail-RB'
      tags:
      - cluster
      description: Create a new sendmail endpoint
      summary: Create a new sendmail endpoint
      responses:
        "200":
          description: OK
  /cluster/notifications/endpoints/sendmail/{name}:
    get:
      operationId: getClusterNotificationsEndpointsSendmailByName
      tags:
      - cluster
      description: Return a specific sendmail endpoint
      summary: Return a specific sendmail endpoint
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSendmail'
    summary: name
    delete:
      operationId: removeClusterNotificationsEndpointsSendmailByName
      tags:
      - cluster
      description: Remove sendmail endpoint
      summary: Remove sendmail endpoint
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterNotificationsEndpointsSendmailByName
      requestBody:
        description: Update existing sendmail endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsSendmail-RB'
      tags:
      - cluster
      description: Update existing sendmail endpoint
      summary: Update existing sendmail endpoint
      parameters:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/notifications/endpoints/smtp:
    get:
      description: Returns a list of all smtp endpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSmtp-GET'
      summary: Returns a list of all smtp endpoints
      operationId: getClusterNotificationsEndpointsSmtp
      tags:
      - cluster
    summary: smtp
    post:
      operationId: newClusterNotificationsEndpointsSmtp
      requestBody:
        description: Create a new smtp endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsSmtp-RB'
      tags:
      - cluster
      description: Create a new smtp endpoint
      summary: Create a new smtp endpoint
      responses:
        "200":
          description: OK
  /cluster/notifications/endpoints/smtp/{name}:
    get:
      operationId: getClusterNotificationsEndpointsSmtpByName
      tags:
      - cluster
      description: Return a specific smtp endpoint
      summary: Return a specific smtp endpoint
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSmtp'
    summary: name
    delete:
      operationId: removeClusterNotificationsEndpointsSmtpByName
      tags:
      - cluster
      description: Remove smtp endpoint
      summary: Remove smtp endpoint
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterNotificationsEndpointsSmtpByName
      requestBody:
        description: Update existing smtp endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsSmtp-RB'
      tags:
      - cluster
      description: Update existing smtp endpoint
      summary: Update existing smtp endpoint
      parameters:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/notifications/endpoints/webhook:
    get:
      description: Returns a list of all webhook endpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsWebhook-GET'
      summary: Returns a list of all webhook endpoints
      operationId: getClusterNotificationsEndpointsWebhook
      tags:
      - cluster
    summary: webhook
    post:
      operationId: newClusterNotificationsEndpointsWebhook
      requestBody:
        description: Create a new webhook endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsWebhook-RB'
      tags:
      - cluster
      description: Create a new webhook endpoint
      summary: Create a new webhook endpoint
      responses:
        "200":
          description: OK
  /cluster/notifications/endpoints/webhook/{name}:
    get:
      operationId: getClusterNotificationsEndpointsWebhookByName
      tags:
      - cluster
      description: Return a specific webhook endpoint
      summary: Return a specific webhook endpoint
      parameters:
      - name: name
        in: path
        description: Name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsWebhook'
    summary: name
    delete:
      operationId: removeClusterNotificationsEndpointsWebhookByName
      tags:
      - cluster
      description: Remove webhook endpoint
      summary: Remove webhook endpoint
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterNotificationsEndpointsWebhookByName
      requestBody:
        description: Update existing webhook endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsWebhook-RB'
      tags:
      - cluster
      description: Update existing webhook endpoint
      summary: Update existing webhook endpoint
      parameters:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/notifications/matcher-field-values:
    get:
      description: Returns known notification metadata fields and their known values
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatcherfieldvalues'
      summary: Returns known notification metadata fields and their known values
      operationId: getClusterNotificationsMatcherfieldvalues
      tags:
      - cluster
    summary: matcher-field-values
  /cluster/notifications/matcher-fields:
    get:
      description: Returns known notification metadata fields
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatcherfields'
      summary: Returns known notification metadata fields
      operationId: getClusterNotificationsMatcherfields
      tags:
      - cluster
    summary: matcher-fields
  /cluster/notifications/matchers:
    get:
      description: Returns a list of all matchers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatchers-GET'
      summary: Returns a list of all matchers
      operationId: getClusterNotificationsMatchers
      tags:
      - cluster
    summary: matchers
    post:
      operationId: newClusterNotificationsMatchers
      requestBody:
        description: Create a new matcher
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsMatchers-RB'
      tags:
      - cluster
      description: Create a new matcher
      summary: Create a new matcher
      responses:
        "200":
          description: OK
  /cluster/notifications/matchers/{name}:
    get:
      operationId: getClusterNotificationsMatchersByName
      tags:
      - cluster
      description: Return a specific matcher
      summary: Return a specific matcher
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatchers'
    summary: name
    delete:
      operationId: removeClusterNotificationsMatchersByName
      tags:
      - cluster
      description: Remove matcher
      summary: Remove matcher
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterNotificationsMatchersByName
      requestBody:
        description: Update existing matcher
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsMatchers-RB'
      tags:
      - cluster
      description: Update existing matcher
      summary: Update existing matcher
      parameters:
      - name: name
        in: path
        description: Name of the matcher.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
  /cluster/notifications/targets:
    get:
      description: Returns a list of all entities that can be used as notification targets.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsTargets'
      summary: Returns a list of all entities that can be used as notification targets.
      operationId: getClusterNotificationsTargets
      tags:
      - cluster
    summary: targets
  /cluster/notifications/targets/{name}/test:
    post:
      operationId: newClusterNotificationsTargetsTestByName
      tags:
      - cluster
      description: Send a test notification to a provided target.
      summary: Send a test notification to a provided target.
      parameters:
      - name: name
        in: path
        description: Name of the target.
        required: true
        schema:
          type: string
          format: pve-configid
      responses:
        "200":
          description: OK
    summary: test
  /cluster/options:
    get:
      description: Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.
      responses: ""
      summary: Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.
      operationId: getClusterOptions
      tags:
      - cluster
    summary: options
    put:
      operationId: setClusterOptions
      requestBody:
        description: Set datacenter options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterOptions-RB'
      tags:
      - cluster
      description: Set datacenter options.
      summary: Set datacenter options.
      responses:
        "200":
          description: OK
  /cluster/replication:
    get:
      description: List replication jobs.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterReplication'
      summary: List replication jobs.
      operationId: getClusterReplication
      tags:
      - cluster
    summary: replication
    post:
      operationId: newClusterReplication
      requestBody:
        description: Create a new replication job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterReplication-RB'
      tags:
      - cluster
      description: Create a new replication job
      summary: Create a new replication job
      responses:
        "200":
          description: OK
  /cluster/replication/{id}:
    get:
      operationId: getClusterReplicationById
      tags:
      - cluster
      description: Read replication job configuration.
      summary: Read replication job configuration.
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      responses: ""
    summary: id
    delete:
      operationId: removeClusterReplicationById
      requestBody:
        description: Mark replication job for removal.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterReplication-RB'
      tags:
      - cluster
      description: Mark replication job for removal.
      summary: Mark replication job for removal.
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterReplicationById
      requestBody:
        description: Update replication job configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterReplication-RB'
      tags:
      - cluster
      description: Update replication job configuration.
      summary: Update replication job configuration.
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      responses:
        "200":
          description: OK
  /cluster/resources:
    get:
      operationId: getClusterResources
      requestBody:
        description: Resources index (cluster wide).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterResources-RB'
      tags:
      - cluster
      description: Resources index (cluster wide).
      summary: Resources index (cluster wide).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResources'
    summary: resources
  /cluster/sdn:
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdn'
      summary: Directory index.
      operationId: getClusterSdn
      tags:
      - cluster
    summary: sdn
    put:
      description: Apply sdn controller changes && reload.
      responses: ""
      summary: Apply sdn controller changes && reload.
      operationId: setClusterSdn
      tags:
      - cluster
  /cluster/sdn/controllers:
    get:
      operationId: getClusterSdnControllers
      requestBody:
        description: SDN controllers index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnControllers-RB'
      tags:
      - cluster
      description: SDN controllers index.
      summary: SDN controllers index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnControllers'
    summary: controllers
    post:
      operationId: newClusterSdnControllers
      requestBody:
        description: Create a new sdn controller object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnControllers-RB'
      tags:
      - cluster
      description: Create a new sdn controller object.
      summary: Create a new sdn controller object.
      responses:
        "200":
          description: OK
  /cluster/sdn/controllers/{controller}:
    get:
      operationId: getClusterSdnControllersByController
      requestBody:
        description: Read sdn controller configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnControllers-RB'
      tags:
      - cluster
      description: Read sdn controller configuration.
      summary: Read sdn controller configuration.
      parameters:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-controller-id
      responses: ""
    summary: controller
    delete:
      operationId: removeClusterSdnControllersByController
      tags:
      - cluster
      description: Delete sdn controller object configuration.
      summary: Delete sdn controller object configuration.
      parameters:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-controller-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterSdnControllersByController
      requestBody:
        description: Update sdn controller object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnControllers-RB'
      tags:
      - cluster
      description: Update sdn controller object configuration.
      summary: Update sdn controller object configuration.
      parameters:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-controller-id
      responses:
        "200":
          description: OK
  /cluster/sdn/dns:
    get:
      operationId: getClusterSdnDns
      requestBody:
        description: SDN dns index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnDns-RB'
      tags:
      - cluster
      description: SDN dns index.
      summary: SDN dns index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnDns'
    summary: dns
    post:
      operationId: newClusterSdnDns
      requestBody:
        description: Create a new sdn dns object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnDns-RB'
      tags:
      - cluster
      description: Create a new sdn dns object.
      summary: Create a new sdn dns object.
      responses:
        "200":
          description: OK
  /cluster/sdn/dns/{dns}:
    get:
      operationId: getClusterSdnDnsByDns
      tags:
      - cluster
      description: Read sdn dns configuration.
      summary: Read sdn dns configuration.
      parameters:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-dns-id
      responses: ""
    summary: dns
    delete:
      operationId: removeClusterSdnDnsByDns
      tags:
      - cluster
      description: Delete sdn dns object configuration.
      summary: Delete sdn dns object configuration.
      parameters:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-dns-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterSdnDnsByDns
      requestBody:
        description: Update sdn dns object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnDns-RB'
      tags:
      - cluster
      description: Update sdn dns object configuration.
      summary: Update sdn dns object configuration.
      parameters:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-dns-id
      responses:
        "200":
          description: OK
  /cluster/sdn/ipams:
    get:
      operationId: getClusterSdnIpams
      requestBody:
        description: SDN ipams index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnIpams-RB'
      tags:
      - cluster
      description: SDN ipams index.
      summary: SDN ipams index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnIpams'
    summary: ipams
    post:
      operationId: newClusterSdnIpams
      requestBody:
        description: Create a new sdn ipam object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnIpams-RB'
      tags:
      - cluster
      description: Create a new sdn ipam object.
      summary: Create a new sdn ipam object.
      responses:
        "200":
          description: OK
  /cluster/sdn/ipams/{ipam}:
    get:
      operationId: getClusterSdnIpamsByIpam
      tags:
      - cluster
      description: Read sdn ipam configuration.
      summary: Read sdn ipam configuration.
      parameters:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-ipam-id
      responses: ""
    summary: ipam
    delete:
      operationId: removeClusterSdnIpamsByIpam
      tags:
      - cluster
      description: Delete sdn ipam object configuration.
      summary: Delete sdn ipam object configuration.
      parameters:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-ipam-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterSdnIpamsByIpam
      requestBody:
        description: Update sdn ipam object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnIpams-RB'
      tags:
      - cluster
      description: Update sdn ipam object configuration.
      summary: Update sdn ipam object configuration.
      parameters:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-ipam-id
      responses:
        "200":
          description: OK
  /cluster/sdn/ipams/{ipam}/status:
    get:
      operationId: getClusterSdnIpamsStatusByIpam
      tags:
      - cluster
      description: List PVE IPAM Entries
      summary: List PVE IPAM Entries
      parameters:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-ipam-id
      responses: ""
    summary: status
  /cluster/sdn/vnets:
    get:
      operationId: getClusterSdnVnets
      requestBody:
        description: SDN vnets index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnets-RB'
      tags:
      - cluster
      description: SDN vnets index.
      summary: SDN vnets index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnets'
    summary: vnets
    post:
      operationId: newClusterSdnVnets
      requestBody:
        description: Create a new sdn vnet object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnets-RB'
      tags:
      - cluster
      description: Create a new sdn vnet object.
      summary: Create a new sdn vnet object.
      responses:
        "200":
          description: OK
  /cluster/sdn/vnets/{vnet}:
    get:
      operationId: getClusterSdnVnetsByVnet
      requestBody:
        description: Read sdn vnet configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnets-RB'
      tags:
      - cluster
      description: Read sdn vnet configuration.
      summary: Read sdn vnet configuration.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses: ""
    summary: vnet
    delete:
      operationId: removeClusterSdnVnetsByVnet
      tags:
      - cluster
      description: Delete sdn vnet object configuration.
      summary: Delete sdn vnet object configuration.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterSdnVnetsByVnet
      requestBody:
        description: Update sdn vnet object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnets-RB'
      tags:
      - cluster
      description: Update sdn vnet object configuration.
      summary: Update sdn vnet object configuration.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
  /cluster/sdn/vnets/{vnet}/firewall:
    get:
      operationId: getClusterSdnVnetsFirewallByVnet
      tags:
      - cluster
      description: Directory index.
      summary: Directory index.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewall'
    summary: firewall
  /cluster/sdn/vnets/{vnet}/firewall/options:
    get:
      operationId: getClusterSdnVnetsFirewallOptionsByVnet
      tags:
      - cluster
      description: Get vnet firewall options.
      summary: Get vnet firewall options.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallOptions'
    summary: options
    put:
      operationId: setClusterSdnVnetsFirewallOptionsByVnet
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsFirewallOptions-RB'
      tags:
      - cluster
      description: Set Firewall options.
      summary: Set Firewall options.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
  /cluster/sdn/vnets/{vnet}/firewall/rules:
    get:
      operationId: getClusterSdnVnetsFirewallRulesByVnet
      tags:
      - cluster
      description: List rules.
      summary: List rules.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallRules-GET'
    summary: rules
    post:
      operationId: newClusterSdnVnetsFirewallRulesByVnet
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsFirewallRules-RB'
      tags:
      - cluster
      description: Create new rule.
      summary: Create new rule.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
  /cluster/sdn/vnets/{vnet}/firewall/rules/{pos}:
    get:
      operationId: getClusterSdnVnetsFirewallRulesByVnetAndPos
      tags:
      - cluster
      description: Get single rule data.
      summary: Get single rule data.
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallRules'
    summary: pos
    delete:
      operationId: removeClusterSdnVnetsFirewallRulesByVnetAndPos
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterSdnVnetsFirewallRules-RB'
      tags:
      - cluster
      description: Delete rule.
      summary: Delete rule.
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterSdnVnetsFirewallRulesByVnetAndPos
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsFirewallRules-RB'
      tags:
      - cluster
      description: Modify rule data.
      summary: Modify rule data.
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
  /cluster/sdn/vnets/{vnet}/ips:
    summary: ips
    delete:
      operationId: removeClusterSdnVnetsIpsByVnet
      requestBody:
        description: Delete IP Mappings in a VNet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterSdnVnetsIps-RB'
      tags:
      - cluster
      description: Delete IP Mappings in a VNet
      summary: Delete IP Mappings in a VNet
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterSdnVnetsIpsByVnet
      requestBody:
        description: Update IP Mapping in a VNet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsIps-RB'
      tags:
      - cluster
      description: Update IP Mapping in a VNet
      summary: Update IP Mapping in a VNet
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
    post:
      operationId: newClusterSdnVnetsIpsByVnet
      requestBody:
        description: Create IP Mapping in a VNet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsIps-RB'
      tags:
      - cluster
      description: Create IP Mapping in a VNet
      summary: Create IP Mapping in a VNet
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
  /cluster/sdn/vnets/{vnet}/subnets:
    get:
      operationId: getClusterSdnVnetsSubnetsByVnet
      requestBody:
        description: SDN subnets index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnetsSubnets-RB'
      tags:
      - cluster
      description: SDN subnets index.
      summary: SDN subnets index.
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsSubnets'
    summary: subnets
    post:
      operationId: newClusterSdnVnetsSubnetsByVnet
      requestBody:
        description: Create a new sdn subnet object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsSubnets-RB'
      tags:
      - cluster
      description: Create a new sdn subnet object.
      summary: Create a new sdn subnet object.
      parameters:
      - name: vnet
        in: path
        description: associated vnet
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /cluster/sdn/vnets/{vnet}/subnets/{subnet}:
    get:
      operationId: getClusterSdnVnetsSubnetsByVnetAndSubnet
      requestBody:
        description: Read sdn subnet configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnetsSubnets-RB'
      tags:
      - cluster
      description: Read sdn subnet configuration.
      summary: Read sdn subnet configuration.
      parameters:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-subnet-id
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses: ""
    summary: subnet
    delete:
      operationId: removeClusterSdnVnetsSubnetsByVnetAndSubnet
      tags:
      - cluster
      description: Delete sdn subnet object configuration.
      summary: Delete sdn subnet object configuration.
      parameters:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-subnet-id
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterSdnVnetsSubnetsByVnetAndSubnet
      requestBody:
        description: Update sdn subnet object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsSubnets-RB'
      tags:
      - cluster
      description: Update sdn subnet object configuration.
      summary: Update sdn subnet object configuration.
      parameters:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-subnet-id
      - name: vnet
        in: path
        description: associated vnet
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /cluster/sdn/zones:
    get:
      operationId: getClusterSdnZones
      requestBody:
        description: SDN zones index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnZones-RB'
      tags:
      - cluster
      description: SDN zones index.
      summary: SDN zones index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnZones'
    summary: zones
    post:
      operationId: newClusterSdnZones
      requestBody:
        description: Create a new sdn zone object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnZones-RB'
      tags:
      - cluster
      description: Create a new sdn zone object.
      summary: Create a new sdn zone object.
      responses:
        "200":
          description: OK
  /cluster/sdn/zones/{zone}:
    get:
      operationId: getClusterSdnZonesByZone
      requestBody:
        description: Read sdn zone configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnZones-RB'
      tags:
      - cluster
      description: Read sdn zone configuration.
      summary: Read sdn zone configuration.
      parameters:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      responses: ""
    summary: zone
    delete:
      operationId: removeClusterSdnZonesByZone
      tags:
      - cluster
      description: Delete sdn zone object configuration.
      summary: Delete sdn zone object configuration.
      parameters:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      responses:
        "200":
          description: OK
    put:
      operationId: setClusterSdnZonesByZone
      requestBody:
        description: Update sdn zone object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnZones-RB'
      tags:
      - cluster
      description: Update sdn zone object configuration.
      summary: Update sdn zone object configuration.
      parameters:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      responses:
        "200":
          description: OK
  /cluster/status:
    get:
      description: Get cluster status information.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
      summary: Get cluster status information.
      operationId: getClusterStatus
      tags:
      - cluster
    summary: status
  /cluster/tasks:
    get:
      description: List recent tasks (cluster wide).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterTasks'
      summary: List recent tasks (cluster wide).
      operationId: getClusterTasks
      tags:
      - cluster
    summary: tasks
  /nodes:
    get:
      description: Cluster node index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nodes'
      summary: Cluster node index.
      operationId: getNodes
      tags:
      - nodes
    summary: nodes
  /nodes/{node}:
    get:
      operationId: getNodesByNode
      tags:
      - nodes
      description: Node index.
      summary: Node index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nodes-GET'
    summary: node
  /nodes/{node}/aplinfo:
    get:
      operationId: getNodesAplinfoByNode
      tags:
      - nodes
      description: Get list of appliances.
      summary: Get list of appliances.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAplinfo'
    summary: aplinfo
    post:
      operationId: newNodesAplinfoByNode
      requestBody:
        description: Download appliance templates.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAplinfo-RB'
      tags:
      - nodes
      description: Download appliance templates.
      summary: Download appliance templates.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/apt:
    get:
      operationId: getNodesAptByNode
      tags:
      - nodes
      description: Directory index for apt (Advanced Package Tool).
      summary: Directory index for apt (Advanced Package Tool).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesApt'
    summary: apt
  /nodes/{node}/apt/changelog:
    get:
      operationId: getNodesAptChangelogByNode
      requestBody:
        description: Get package changelogs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesAptChangelog-RB'
      tags:
      - nodes
      description: Get package changelogs.
      summary: Get package changelogs.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: changelog
  /nodes/{node}/apt/repositories:
    get:
      operationId: getNodesAptRepositoriesByNode
      tags:
      - nodes
      description: Get APT repository information.
      summary: Get APT repository information.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptRepositories'
    summary: repositories
    post:
      operationId: newNodesAptRepositoriesByNode
      requestBody:
        description: Change the properties of a repository. Currently only allows enabling/disabling.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAptRepositories-RB'
      tags:
      - nodes
      description: Change the properties of a repository. Currently only allows enabling/disabling.
      summary: Change the properties of a repository. Currently only allows enabling/disabling.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesAptRepositoriesByNode
      requestBody:
        description: Add a standard repository to the configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesAptRepositories-RB'
      tags:
      - nodes
      description: Add a standard repository to the configuration
      summary: Add a standard repository to the configuration
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/apt/update:
    get:
      operationId: getNodesAptUpdateByNode
      tags:
      - nodes
      description: List available updates.
      summary: List available updates.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptUpdate'
    summary: update
    post:
      operationId: newNodesAptUpdateByNode
      requestBody:
        description: This is used to resynchronize the package index files from their sources (apt-get update).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAptUpdate-RB'
      tags:
      - nodes
      description: This is used to resynchronize the package index files from their sources (apt-get update).
      summary: This is used to resynchronize the package index files from their sources (apt-get update).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/apt/versions:
    get:
      operationId: getNodesAptVersionsByNode
      tags:
      - nodes
      description: Get package information for important Proxmox packages.
      summary: Get package information for important Proxmox packages.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptVersions'
    summary: versions
  /nodes/{node}/capabilities:
    get:
      operationId: getNodesCapabilitiesByNode
      tags:
      - nodes
      description: Node capabilities index.
      summary: Node capabilities index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilities'
    summary: capabilities
  /nodes/{node}/capabilities/qemu:
    get:
      operationId: getNodesCapabilitiesQemuByNode
      tags:
      - nodes
      description: QEMU capabilities index.
      summary: QEMU capabilities index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemu'
    summary: qemu
  /nodes/{node}/capabilities/qemu/cpu:
    get:
      operationId: getNodesCapabilitiesQemuCpuByNode
      tags:
      - nodes
      description: List all custom and default CPU models.
      summary: List all custom and default CPU models.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemuCpu'
    summary: cpu
  /nodes/{node}/capabilities/qemu/machines:
    get:
      operationId: getNodesCapabilitiesQemuMachinesByNode
      tags:
      - nodes
      description: Get available QEMU/KVM machine types.
      summary: Get available QEMU/KVM machine types.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemuMachines'
    summary: machines
  /nodes/{node}/ceph:
    get:
      operationId: getNodesCephByNode
      tags:
      - nodes
      description: Directory index.
      summary: Directory index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCeph'
    summary: ceph
  /nodes/{node}/ceph/cfg:
    get:
      operationId: getNodesCephCfgByNode
      tags:
      - nodes
      description: Directory index.
      summary: Directory index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCfg'
    summary: cfg
  /nodes/{node}/ceph/cfg/db:
    get:
      operationId: getNodesCephCfgDbByNode
      tags:
      - nodes
      description: Get the Ceph configuration database.
      summary: Get the Ceph configuration database.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCfgDb'
    summary: db
  /nodes/{node}/ceph/cfg/raw:
    get:
      operationId: getNodesCephCfgRawByNode
      tags:
      - nodes
      description: Get the Ceph configuration file.
      summary: Get the Ceph configuration file.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: raw
  /nodes/{node}/ceph/cfg/value:
    get:
      operationId: getNodesCephCfgValueByNode
      requestBody:
        description: Get configured values from either the config file or config DB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephCfgValue-RB'
      tags:
      - nodes
      description: Get configured values from either the config file or config DB.
      summary: Get configured values from either the config file or config DB.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: value
  /nodes/{node}/ceph/cmd-safety:
    get:
      operationId: getNodesCephCmdsafetyByNode
      requestBody:
        description: Heuristical check if it is safe to perform an action.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephCmdsafety-RB'
      tags:
      - nodes
      description: Heuristical check if it is safe to perform an action.
      summary: Heuristical check if it is safe to perform an action.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCmdsafety'
    summary: cmd-safety
  /nodes/{node}/ceph/crush:
    get:
      operationId: getNodesCephCrushByNode
      tags:
      - nodes
      description: Get OSD crush map
      summary: Get OSD crush map
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: crush
  /nodes/{node}/ceph/fs:
    get:
      operationId: getNodesCephFsByNode
      tags:
      - nodes
      description: Directory index.
      summary: Directory index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephFs'
    summary: fs
  /nodes/{node}/ceph/fs/{name}:
    post:
      operationId: newNodesCephFsByNodeAndName
      requestBody:
        description: Create a Ceph filesystem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephFs-RB'
      tags:
      - nodes
      description: Create a Ceph filesystem
      summary: Create a Ceph filesystem
      parameters:
      - name: name
        in: path
        description: The ceph filesystem name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: name
  /nodes/{node}/ceph/init:
    post:
      operationId: newNodesCephInitByNode
      requestBody:
        description: Create initial ceph default configuration and setup symlinks.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephInit-RB'
      tags:
      - nodes
      description: Create initial ceph default configuration and setup symlinks.
      summary: Create initial ceph default configuration and setup symlinks.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
    summary: init
  /nodes/{node}/ceph/log:
    get:
      operationId: getNodesCephLogByNode
      requestBody:
        description: Read ceph log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephLog-RB'
      tags:
      - nodes
      description: Read ceph log
      summary: Read ceph log
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephLog'
    summary: log
  /nodes/{node}/ceph/mds:
    get:
      operationId: getNodesCephMdsByNode
      tags:
      - nodes
      description: MDS directory index.
      summary: MDS directory index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMds'
    summary: mds
  /nodes/{node}/ceph/mds/{name}:
    summary: name
    delete:
      operationId: removeNodesCephMdsByNodeAndName
      tags:
      - nodes
      description: Destroy Ceph Metadata Server
      summary: Destroy Ceph Metadata Server
      parameters:
      - name: name
        in: path
        description: The name (ID) of the mds
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    post:
      operationId: newNodesCephMdsByNodeAndName
      requestBody:
        description: Create Ceph Metadata Server (MDS)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephMds-RB'
      tags:
      - nodes
      description: Create Ceph Metadata Server (MDS)
      summary: Create Ceph Metadata Server (MDS)
      parameters:
      - name: name
        in: path
        description: The ID for the mds, when omitted the same as the nodename
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/ceph/mgr:
    get:
      operationId: getNodesCephMgrByNode
      tags:
      - nodes
      description: MGR directory index.
      summary: MGR directory index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMgr'
    summary: mgr
  /nodes/{node}/ceph/mgr/{id}:
    summary: id
    delete:
      operationId: removeNodesCephMgrByNodeAndId
      tags:
      - nodes
      description: Destroy Ceph Manager.
      summary: Destroy Ceph Manager.
      parameters:
      - name: id
        in: path
        description: The ID of the manager
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    post:
      operationId: newNodesCephMgrByNodeAndId
      tags:
      - nodes
      description: Create Ceph Manager
      summary: Create Ceph Manager
      parameters:
      - name: id
        in: path
        description: The ID for the manager, when omitted the same as the nodename
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/ceph/mon:
    get:
      operationId: getNodesCephMonByNode
      tags:
      - nodes
      description: Get Ceph monitor list.
      summary: Get Ceph monitor list.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMon'
    summary: mon
  /nodes/{node}/ceph/mon/{monid}:
    summary: monid
    delete:
      operationId: removeNodesCephMonByNodeAndMonid
      tags:
      - nodes
      description: Destroy Ceph Monitor and Manager.
      summary: Destroy Ceph Monitor and Manager.
      parameters:
      - name: monid
        in: path
        description: Monitor ID
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    post:
      operationId: newNodesCephMonByNodeAndMonid
      requestBody:
        description: Create Ceph Monitor and Manager
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephMon-RB'
      tags:
      - nodes
      description: Create Ceph Monitor and Manager
      summary: Create Ceph Monitor and Manager
      parameters:
      - name: monid
        in: path
        description: The ID for the monitor, when omitted the same as the nodename
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/ceph/osd:
    get:
      operationId: getNodesCephOsdByNode
      tags:
      - nodes
      description: Get Ceph osd list/tree.
      summary: Get Ceph osd list/tree.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: osd
    post:
      operationId: newNodesCephOsdByNode
      requestBody:
        description: Create OSD
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephOsd-RB'
      tags:
      - nodes
      description: Create OSD
      summary: Create OSD
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/ceph/osd/{osdid}:
    get:
      operationId: getNodesCephOsdByNodeAndOsdid
      tags:
      - nodes
      description: OSD index.
      summary: OSD index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsd'
    summary: osdid
    delete:
      operationId: removeNodesCephOsdByNodeAndOsdid
      requestBody:
        description: Destroy OSD
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCephOsd-RB'
      tags:
      - nodes
      description: Destroy OSD
      summary: Destroy OSD
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      responses: ""
  /nodes/{node}/ceph/osd/{osdid}/in:
    post:
      operationId: newNodesCephOsdInByNodeAndOsdid
      tags:
      - nodes
      description: ceph osd in
      summary: ceph osd in
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
    summary: in
  /nodes/{node}/ceph/osd/{osdid}/lv-info:
    get:
      operationId: getNodesCephOsdLvinfoByNodeAndOsdid
      requestBody:
        description: Get OSD volume details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephOsdLvinfo-RB'
      tags:
      - nodes
      description: Get OSD volume details
      summary: Get OSD volume details
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsdLvinfo'
    summary: lv-info
  /nodes/{node}/ceph/osd/{osdid}/metadata:
    get:
      operationId: getNodesCephOsdMetadataByNodeAndOsdid
      tags:
      - nodes
      description: Get OSD details
      summary: Get OSD details
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsdMetadata'
    summary: metadata
  /nodes/{node}/ceph/osd/{osdid}/out:
    post:
      operationId: newNodesCephOsdOutByNodeAndOsdid
      tags:
      - nodes
      description: ceph osd out
      summary: ceph osd out
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
    summary: out
  /nodes/{node}/ceph/osd/{osdid}/scrub:
    post:
      operationId: newNodesCephOsdScrubByNodeAndOsdid
      requestBody:
        description: Instruct the OSD to scrub.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephOsdScrub-RB'
      tags:
      - nodes
      description: Instruct the OSD to scrub.
      summary: Instruct the OSD to scrub.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
    summary: scrub
  /nodes/{node}/ceph/pool:
    get:
      operationId: getNodesCephPoolByNode
      tags:
      - nodes
      description: List all pools and their settings (which are settable by the POST/PUT endpoints).
      summary: List all pools and their settings (which are settable by the POST/PUT endpoints).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPool'
    summary: pool
    post:
      operationId: newNodesCephPoolByNode
      requestBody:
        description: Create Ceph pool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephPool-RB'
      tags:
      - nodes
      description: Create Ceph pool
      summary: Create Ceph pool
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/ceph/pool/{name}:
    get:
      operationId: getNodesCephPoolByNodeAndName
      tags:
      - nodes
      description: Pool index.
      summary: Pool index.
      parameters:
      - name: name
        in: path
        description: The name of the pool.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPool-GET'
    summary: name
    delete:
      operationId: removeNodesCephPoolByNodeAndName
      requestBody:
        description: Destroy pool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCephPool-RB'
      tags:
      - nodes
      description: Destroy pool
      summary: Destroy pool
      parameters:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    put:
      operationId: setNodesCephPoolByNodeAndName
      requestBody:
        description: Change POOL settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesCephPool-RB'
      tags:
      - nodes
      description: Change POOL settings
      summary: Change POOL settings
      parameters:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/ceph/pool/{name}/status:
    get:
      operationId: getNodesCephPoolStatusByNodeAndName
      requestBody:
        description: Show the current pool status.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephPoolStatus-RB'
      tags:
      - nodes
      description: Show the current pool status.
      summary: Show the current pool status.
      parameters:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPoolStatus'
    summary: status
  /nodes/{node}/ceph/restart:
    post:
      operationId: newNodesCephRestartByNode
      requestBody:
        description: Restart ceph services.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephRestart-RB'
      tags:
      - nodes
      description: Restart ceph services.
      summary: Restart ceph services.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: restart
  /nodes/{node}/ceph/rules:
    get:
      operationId: getNodesCephRulesByNode
      tags:
      - nodes
      description: List ceph rules.
      summary: List ceph rules.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephRules'
    summary: rules
  /nodes/{node}/ceph/start:
    post:
      operationId: newNodesCephStartByNode
      requestBody:
        description: Start ceph services.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephStart-RB'
      tags:
      - nodes
      description: Start ceph services.
      summary: Start ceph services.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: start
  /nodes/{node}/ceph/status:
    get:
      operationId: getNodesCephStatusByNode
      tags:
      - nodes
      description: Get ceph status.
      summary: Get ceph status.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: status
  /nodes/{node}/ceph/stop:
    post:
      operationId: newNodesCephStopByNode
      requestBody:
        description: Stop ceph services.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephStop-RB'
      tags:
      - nodes
      description: Stop ceph services.
      summary: Stop ceph services.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: stop
  /nodes/{node}/certificates:
    get:
      operationId: getNodesCertificatesByNode
      tags:
      - nodes
      description: Node index.
      summary: Node index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificates'
    summary: certificates
  /nodes/{node}/certificates/acme:
    get:
      operationId: getNodesCertificatesAcmeByNode
      tags:
      - nodes
      description: ACME index.
      summary: ACME index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesAcme'
    summary: acme
  /nodes/{node}/certificates/acme/certificate:
    summary: certificate
    delete:
      operationId: removeNodesCertificatesAcmeCertificateByNode
      tags:
      - nodes
      description: Revoke existing certificate from CA.
      summary: Revoke existing certificate from CA.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    put:
      operationId: setNodesCertificatesAcmeCertificateByNode
      requestBody:
        description: Renew existing certificate from CA.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesCertificatesAcmeCertificate-RB'
      tags:
      - nodes
      description: Renew existing certificate from CA.
      summary: Renew existing certificate from CA.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    post:
      operationId: newNodesCertificatesAcmeCertificateByNode
      requestBody:
        description: Order a new certificate from ACME-compatible CA.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCertificatesAcmeCertificate-RB'
      tags:
      - nodes
      description: Order a new certificate from ACME-compatible CA.
      summary: Order a new certificate from ACME-compatible CA.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/certificates/custom:
    summary: custom
    delete:
      operationId: removeNodesCertificatesCustomByNode
      requestBody:
        description: DELETE custom certificate chain and key.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCertificatesCustom-RB'
      tags:
      - nodes
      description: DELETE custom certificate chain and key.
      summary: DELETE custom certificate chain and key.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
    post:
      operationId: newNodesCertificatesCustomByNode
      requestBody:
        description: Upload or update custom certificate chain and key.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCertificatesCustom-RB'
      tags:
      - nodes
      description: Upload or update custom certificate chain and key.
      summary: Upload or update custom certificate chain and key.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesCustom'
  /nodes/{node}/certificates/info:
    get:
      operationId: getNodesCertificatesInfoByNode
      tags:
      - nodes
      description: Get information about node's certificates.
      summary: Get information about node's certificates.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesInfo'
    summary: info
  /nodes/{node}/config:
    get:
      operationId: getNodesConfigByNode
      requestBody:
        description: Get node configuration options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesConfig-RB'
      tags:
      - nodes
      description: Get node configuration options.
      summary: Get node configuration options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesConfig'
    summary: config
    put:
      operationId: setNodesConfigByNode
      requestBody:
        description: Set node configuration options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesConfig-RB'
      tags:
      - nodes
      description: Set node configuration options.
      summary: Set node configuration options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/disks:
    get:
      operationId: getNodesDisksByNode
      tags:
      - nodes
      description: Node index.
      summary: Node index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisks'
    summary: disks
  /nodes/{node}/disks/directory:
    get:
      operationId: getNodesDisksDirectoryByNode
      tags:
      - nodes
      description: PVE Managed Directory storages.
      summary: PVE Managed Directory storages.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksDirectory'
    summary: directory
    post:
      operationId: newNodesDisksDirectoryByNode
      requestBody:
        description: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksDirectory-RB'
      tags:
      - nodes
      description: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
      summary: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/disks/directory/{name}:
    delete:
      operationId: removeNodesDisksDirectoryByNodeAndName
      requestBody:
        description: Unmounts the storage and removes the mount unit.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksDirectory-RB'
      tags:
      - nodes
      description: Unmounts the storage and removes the mount unit.
      summary: Unmounts the storage and removes the mount unit.
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: name
  /nodes/{node}/disks/initgpt:
    post:
      operationId: newNodesDisksInitgptByNode
      requestBody:
        description: Initialize Disk with GPT
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksInitgpt-RB'
      tags:
      - nodes
      description: Initialize Disk with GPT
      summary: Initialize Disk with GPT
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: initgpt
  /nodes/{node}/disks/list:
    get:
      operationId: getNodesDisksListByNode
      requestBody:
        description: List local disks.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesDisksList-RB'
      tags:
      - nodes
      description: List local disks.
      summary: List local disks.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksList'
    summary: list
  /nodes/{node}/disks/lvm:
    get:
      operationId: getNodesDisksLvmByNode
      tags:
      - nodes
      description: List LVM Volume Groups
      summary: List LVM Volume Groups
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksLvm'
    summary: lvm
    post:
      operationId: newNodesDisksLvmByNode
      requestBody:
        description: Create an LVM Volume Group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksLvm-RB'
      tags:
      - nodes
      description: Create an LVM Volume Group
      summary: Create an LVM Volume Group
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/disks/lvm/{name}:
    delete:
      operationId: removeNodesDisksLvmByNodeAndName
      requestBody:
        description: Remove an LVM Volume Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksLvm-RB'
      tags:
      - nodes
      description: Remove an LVM Volume Group.
      summary: Remove an LVM Volume Group.
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: name
  /nodes/{node}/disks/lvmthin:
    get:
      operationId: getNodesDisksLvmthinByNode
      tags:
      - nodes
      description: List LVM thinpools
      summary: List LVM thinpools
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksLvmthin'
    summary: lvmthin
    post:
      operationId: newNodesDisksLvmthinByNode
      requestBody:
        description: Create an LVM thinpool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksLvmthin-RB'
      tags:
      - nodes
      description: Create an LVM thinpool
      summary: Create an LVM thinpool
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/disks/lvmthin/{name}:
    delete:
      operationId: removeNodesDisksLvmthinByNodeAndName
      requestBody:
        description: Remove an LVM thin pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksLvmthin-RB'
      tags:
      - nodes
      description: Remove an LVM thin pool.
      summary: Remove an LVM thin pool.
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: name
  /nodes/{node}/disks/smart:
    get:
      operationId: getNodesDisksSmartByNode
      requestBody:
        description: Get SMART Health of a disk.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesDisksSmart-RB'
      tags:
      - nodes
      description: Get SMART Health of a disk.
      summary: Get SMART Health of a disk.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksSmart'
    summary: smart
  /nodes/{node}/disks/wipedisk:
    put:
      operationId: setNodesDisksWipediskByNode
      requestBody:
        description: Wipe a disk or partition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesDisksWipedisk-RB'
      tags:
      - nodes
      description: Wipe a disk or partition.
      summary: Wipe a disk or partition.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: wipedisk
  /nodes/{node}/disks/zfs:
    get:
      operationId: getNodesDisksZfsByNode
      tags:
      - nodes
      description: List Zpools.
      summary: List Zpools.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksZfs-GET'
    summary: zfs
    post:
      operationId: newNodesDisksZfsByNode
      requestBody:
        description: Create a ZFS pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksZfs-RB'
      tags:
      - nodes
      description: Create a ZFS pool.
      summary: Create a ZFS pool.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/disks/zfs/{name}:
    get:
      operationId: getNodesDisksZfsByNodeAndName
      tags:
      - nodes
      description: Get details about a zpool.
      summary: Get details about a zpool.
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksZfs'
    summary: name
    delete:
      operationId: removeNodesDisksZfsByNodeAndName
      requestBody:
        description: Destroy a ZFS pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksZfs-RB'
      tags:
      - nodes
      description: Destroy a ZFS pool.
      summary: Destroy a ZFS pool.
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/dns:
    get:
      operationId: getNodesDnsByNode
      tags:
      - nodes
      description: Read DNS settings.
      summary: Read DNS settings.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDns'
    summary: dns
    put:
      operationId: setNodesDnsByNode
      requestBody:
        description: Write DNS settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesDns-RB'
      tags:
      - nodes
      description: Write DNS settings.
      summary: Write DNS settings.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/execute:
    post:
      operationId: newNodesExecuteByNode
      requestBody:
        description: Execute multiple commands in order, root only.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesExecute-RB'
      tags:
      - nodes
      description: Execute multiple commands in order, root only.
      summary: Execute multiple commands in order, root only.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesExecute'
    summary: execute
  /nodes/{node}/firewall:
    get:
      operationId: getNodesFirewallByNode
      tags:
      - nodes
      description: Directory index.
      summary: Directory index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewall'
    summary: firewall
  /nodes/{node}/firewall/log:
    get:
      operationId: getNodesFirewallLogByNode
      requestBody:
        description: Read firewall log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesFirewallLog-RB'
      tags:
      - nodes
      description: Read firewall log
      summary: Read firewall log
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallLog'
    summary: log
  /nodes/{node}/firewall/options:
    get:
      operationId: getNodesFirewallOptionsByNode
      tags:
      - nodes
      description: Get host firewall options.
      summary: Get host firewall options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallOptions'
    summary: options
    put:
      operationId: setNodesFirewallOptionsByNode
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesFirewallOptions-RB'
      tags:
      - nodes
      description: Set Firewall options.
      summary: Set Firewall options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/firewall/rules:
    get:
      operationId: getNodesFirewallRulesByNode
      tags:
      - nodes
      description: List rules.
      summary: List rules.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallRules-GET'
    summary: rules
    post:
      operationId: newNodesFirewallRulesByNode
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesFirewallRules-RB'
      tags:
      - nodes
      description: Create new rule.
      summary: Create new rule.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/firewall/rules/{pos}:
    get:
      operationId: getNodesFirewallRulesByNodeAndPos
      tags:
      - nodes
      description: Get single rule data.
      summary: Get single rule data.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallRules'
    summary: pos
    delete:
      operationId: removeNodesFirewallRulesByNodeAndPos
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesFirewallRules-RB'
      tags:
      - nodes
      description: Delete rule.
      summary: Delete rule.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesFirewallRulesByNodeAndPos
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesFirewallRules-RB'
      tags:
      - nodes
      description: Modify rule data.
      summary: Modify rule data.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      responses:
        "200":
          description: OK
  /nodes/{node}/hardware:
    get:
      operationId: getNodesHardwareByNode
      tags:
      - nodes
      description: Index of hardware types
      summary: Index of hardware types
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardware'
    summary: hardware
  /nodes/{node}/hardware/pci:
    get:
      operationId: getNodesHardwarePciByNode
      requestBody:
        description: List local PCI devices.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesHardwarePci-RB'
      tags:
      - nodes
      description: List local PCI devices.
      summary: List local PCI devices.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePci'
    summary: pci
  /nodes/{node}/hardware/pci/{pci-id-or-mapping}:
    get:
      operationId: getNodesHardwarePciByNodeAndPciidormapping
      tags:
      - nodes
      description: Index of available pci methods
      summary: Index of available pci methods
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pci-id-or-mapping
        in: path
        description: 
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePci-GET'
    summary: pci-id-or-mapping
  /nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev:
    get:
      operationId: getNodesHardwarePciMdevByNodeAndPciidormapping
      tags:
      - nodes
      description: List mediated device types for given PCI device.
      summary: List mediated device types for given PCI device.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pci-id-or-mapping
        in: path
        description: The PCI ID or mapping to list the mdev types for.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePciMdev'
    summary: mdev
  /nodes/{node}/hardware/usb:
    get:
      operationId: getNodesHardwareUsbByNode
      tags:
      - nodes
      description: List local USB devices.
      summary: List local USB devices.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwareUsb'
    summary: usb
  /nodes/{node}/hosts:
    get:
      operationId: getNodesHostsByNode
      tags:
      - nodes
      description: Get the content of /etc/hosts.
      summary: Get the content of /etc/hosts.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHosts'
    summary: hosts
    post:
      operationId: newNodesHostsByNode
      requestBody:
        description: Write /etc/hosts.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesHosts-RB'
      tags:
      - nodes
      description: Write /etc/hosts.
      summary: Write /etc/hosts.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/journal:
    get:
      operationId: getNodesJournalByNode
      requestBody:
        description: Read Journal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesJournal-RB'
      tags:
      - nodes
      description: Read Journal
      summary: Read Journal
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: journal
  /nodes/{node}/lxc:
    get:
      operationId: getNodesLxcByNode
      tags:
      - nodes
      description: LXC container index (per node).
      summary: LXC container index (per node).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxc'
    summary: lxc
    post:
      operationId: newNodesLxcByNode
      requestBody:
        description: Create or restore a container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxc-RB'
      tags:
      - nodes
      description: Create or restore a container.
      summary: Create or restore a container.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/lxc/{vmid}:
    get:
      operationId: getNodesLxcByNodeAndVmid
      tags:
      - nodes
      description: Directory index
      summary: Directory index
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: vmid
    delete:
      operationId: removeNodesLxcByNodeAndVmid
      requestBody:
        description: Destroy the container (also delete all uses files).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxc-RB'
      tags:
      - nodes
      description: Destroy the container (also delete all uses files).
      summary: Destroy the container (also delete all uses files).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
  /nodes/{node}/lxc/{vmid}/clone:
    post:
      operationId: newNodesLxcCloneByNodeAndVmid
      requestBody:
        description: Create a container clone/copy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcClone-RB'
      tags:
      - nodes
      description: Create a container clone/copy
      summary: Create a container clone/copy
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: clone
  /nodes/{node}/lxc/{vmid}/config:
    get:
      operationId: getNodesLxcConfigByNodeAndVmid
      requestBody:
        description: Get container configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcConfig-RB'
      tags:
      - nodes
      description: Get container configuration.
      summary: Get container configuration.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcConfig'
    summary: config
    put:
      operationId: setNodesLxcConfigByNodeAndVmid
      requestBody:
        description: Set container options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcConfig-RB'
      tags:
      - nodes
      description: Set container options.
      summary: Set container options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/feature:
    get:
      operationId: getNodesLxcFeatureByNodeAndVmid
      requestBody:
        description: Check if feature for virtual machine is available.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFeature-RB'
      tags:
      - nodes
      description: Check if feature for virtual machine is available.
      summary: Check if feature for virtual machine is available.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFeature'
    summary: feature
  /nodes/{node}/lxc/{vmid}/firewall:
    get:
      operationId: getNodesLxcFirewallByNodeAndVmid
      tags:
      - nodes
      description: Directory index.
      summary: Directory index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewall'
    summary: firewall
  /nodes/{node}/lxc/{vmid}/firewall/aliases:
    get:
      operationId: getNodesLxcFirewallAliasesByNodeAndVmid
      tags:
      - nodes
      description: List aliases
      summary: List aliases
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallAliases'
    summary: aliases
    post:
      operationId: newNodesLxcFirewallAliasesByNodeAndVmid
      requestBody:
        description: Create IP or Network Alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallAliases-RB'
      tags:
      - nodes
      description: Create IP or Network Alias.
      summary: Create IP or Network Alias.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/firewall/aliases/{name}:
    get:
      operationId: getNodesLxcFirewallAliasesByNodeAndVmidAndName
      tags:
      - nodes
      description: Read alias.
      summary: Read alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: name
    delete:
      operationId: removeNodesLxcFirewallAliasesByNodeAndVmidAndName
      requestBody:
        description: Remove IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallAliases-RB'
      tags:
      - nodes
      description: Remove IP or Network alias.
      summary: Remove IP or Network alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesLxcFirewallAliasesByNodeAndVmidAndName
      requestBody:
        description: Update IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallAliases-RB'
      tags:
      - nodes
      description: Update IP or Network alias.
      summary: Update IP or Network alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/firewall/ipset:
    get:
      operationId: getNodesLxcFirewallIpsetByNodeAndVmid
      tags:
      - nodes
      description: List IPSets
      summary: List IPSets
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallIpset'
    summary: ipset
    post:
      operationId: newNodesLxcFirewallIpsetByNodeAndVmid
      requestBody:
        description: Create new IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallIpset-RB'
      tags:
      - nodes
      description: Create new IPSet
      summary: Create new IPSet
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/firewall/ipset/{name}:
    get:
      operationId: getNodesLxcFirewallIpsetByNodeAndVmidAndName
      tags:
      - nodes
      description: List IPSet content
      summary: List IPSet content
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallIpset-GET'
    summary: name
    delete:
      operationId: removeNodesLxcFirewallIpsetByNodeAndVmidAndName
      requestBody:
        description: Delete IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallIpset-RB'
      tags:
      - nodes
      description: Delete IPSet
      summary: Delete IPSet
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    post:
      operationId: newNodesLxcFirewallIpsetByNodeAndVmidAndName
      requestBody:
        description: Add IP or Network to IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallIpset-RB'
      tags:
      - nodes
      description: Add IP or Network to IPSet.
      summary: Add IP or Network to IPSet.
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}:
    get:
      operationId: getNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      tags:
      - nodes
      description: Read IP or Network settings from IPSet.
      summary: Read IP or Network settings from IPSet.
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: cidr
    delete:
      operationId: removeNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      requestBody:
        description: Remove IP or Network from IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallIpset-RB'
      tags:
      - nodes
      description: Remove IP or Network from IPSet.
      summary: Remove IP or Network from IPSet.
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      requestBody:
        description: Update IP or Network settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallIpset-RB'
      tags:
      - nodes
      description: Update IP or Network settings
      summary: Update IP or Network settings
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/firewall/log:
    get:
      operationId: getNodesLxcFirewallLogByNodeAndVmid
      requestBody:
        description: Read firewall log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFirewallLog-RB'
      tags:
      - nodes
      description: Read firewall log
      summary: Read firewall log
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallLog'
    summary: log
  /nodes/{node}/lxc/{vmid}/firewall/options:
    get:
      operationId: getNodesLxcFirewallOptionsByNodeAndVmid
      tags:
      - nodes
      description: Get VM firewall options.
      summary: Get VM firewall options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallOptions'
    summary: options
    put:
      operationId: setNodesLxcFirewallOptionsByNodeAndVmid
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallOptions-RB'
      tags:
      - nodes
      description: Set Firewall options.
      summary: Set Firewall options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/firewall/refs:
    get:
      operationId: getNodesLxcFirewallRefsByNodeAndVmid
      requestBody:
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFirewallRefs-RB'
      tags:
      - nodes
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRefs'
    summary: refs
  /nodes/{node}/lxc/{vmid}/firewall/rules:
    get:
      operationId: getNodesLxcFirewallRulesByNodeAndVmid
      tags:
      - nodes
      description: List rules.
      summary: List rules.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRules-GET'
    summary: rules
    post:
      operationId: newNodesLxcFirewallRulesByNodeAndVmid
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallRules-RB'
      tags:
      - nodes
      description: Create new rule.
      summary: Create new rule.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/firewall/rules/{pos}:
    get:
      operationId: getNodesLxcFirewallRulesByNodeAndVmidAndPos
      tags:
      - nodes
      description: Get single rule data.
      summary: Get single rule data.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRules'
    summary: pos
    delete:
      operationId: removeNodesLxcFirewallRulesByNodeAndVmidAndPos
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallRules-RB'
      tags:
      - nodes
      description: Delete rule.
      summary: Delete rule.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesLxcFirewallRulesByNodeAndVmidAndPos
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallRules-RB'
      tags:
      - nodes
      description: Modify rule data.
      summary: Modify rule data.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/interfaces:
    get:
      operationId: getNodesLxcInterfacesByNodeAndVmid
      tags:
      - nodes
      description: Get IP addresses of the specified container interface.
      summary: Get IP addresses of the specified container interface.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcInterfaces'
    summary: interfaces
  /nodes/{node}/lxc/{vmid}/migrate:
    post:
      operationId: newNodesLxcMigrateByNodeAndVmid
      requestBody:
        description: Migrate the container to another node. Creates a new migration task.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMigrate-RB'
      tags:
      - nodes
      description: Migrate the container to another node. Creates a new migration task.
      summary: Migrate the container to another node. Creates a new migration task.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: migrate
  /nodes/{node}/lxc/{vmid}/move_volume:
    post:
      operationId: newNodesLxcMovevolumeByNodeAndVmid
      requestBody:
        description: Move a rootfs-/mp-volume to a different storage or to a different container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMovevolume-RB'
      tags:
      - nodes
      description: Move a rootfs-/mp-volume to a different storage or to a different container.
      summary: Move a rootfs-/mp-volume to a different storage or to a different container.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: movevolume
  /nodes/{node}/lxc/{vmid}/mtunnel:
    post:
      operationId: newNodesLxcMtunnelByNodeAndVmid
      requestBody:
        description: Migration tunnel endpoint - only for internal use by CT migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMtunnel-RB'
      tags:
      - nodes
      description: Migration tunnel endpoint - only for internal use by CT migration.
      summary: Migration tunnel endpoint - only for internal use by CT migration.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: mtunnel
  /nodes/{node}/lxc/{vmid}/mtunnelwebsocket:
    get:
      operationId: getNodesLxcMtunnelwebsocketByNodeAndVmid
      requestBody:
        description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcMtunnelwebsocket-RB'
      tags:
      - nodes
      description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      summary: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcMtunnelwebsocket'
    summary: mtunnelwebsocket
  /nodes/{node}/lxc/{vmid}/pending:
    get:
      operationId: getNodesLxcPendingByNodeAndVmid
      tags:
      - nodes
      description: Get container configuration, including pending changes.
      summary: Get container configuration, including pending changes.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcPending'
    summary: pending
  /nodes/{node}/lxc/{vmid}/remote_migrate:
    post:
      operationId: newNodesLxcRemotemigrateByNodeAndVmid
      requestBody:
        description: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcRemotemigrate-RB'
      tags:
      - nodes
      description: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
      summary: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: remotemigrate
  /nodes/{node}/lxc/{vmid}/resize:
    put:
      operationId: setNodesLxcResizeByNodeAndVmid
      requestBody:
        description: Resize a container mount point.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcResize-RB'
      tags:
      - nodes
      description: Resize a container mount point.
      summary: Resize a container mount point.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: resize
  /nodes/{node}/lxc/{vmid}/rrd:
    get:
      operationId: getNodesLxcRrdByNodeAndVmid
      requestBody:
        description: Read VM RRD statistics (returns PNG)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcRrd-RB'
      tags:
      - nodes
      description: Read VM RRD statistics (returns PNG)
      summary: Read VM RRD statistics (returns PNG)
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcRrd'
    summary: rrd
  /nodes/{node}/lxc/{vmid}/rrddata:
    get:
      operationId: getNodesLxcRrddataByNodeAndVmid
      requestBody:
        description: Read VM RRD statistics
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcRrddata-RB'
      tags:
      - nodes
      description: Read VM RRD statistics
      summary: Read VM RRD statistics
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcRrddata'
    summary: rrddata
  /nodes/{node}/lxc/{vmid}/snapshot:
    get:
      operationId: getNodesLxcSnapshotByNodeAndVmid
      tags:
      - nodes
      description: List all snapshots.
      summary: List all snapshots.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcSnapshot'
    summary: snapshot
    post:
      operationId: newNodesLxcSnapshotByNodeAndVmid
      requestBody:
        description: Snapshot a container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSnapshot-RB'
      tags:
      - nodes
      description: Snapshot a container.
      summary: Snapshot a container.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}:
    get:
      operationId: getNodesLxcSnapshotByNodeAndVmidAndSnapname
      tags:
      - nodes
      description: ""
      summary: ""
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcSnapshot-GET'
    summary: snapname
    delete:
      operationId: removeNodesLxcSnapshotByNodeAndVmidAndSnapname
      requestBody:
        description: Delete a LXC snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcSnapshot-RB'
      tags:
      - nodes
      description: Delete a LXC snapshot.
      summary: Delete a LXC snapshot.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config:
    get:
      operationId: getNodesLxcSnapshotConfigByNodeAndVmidAndSnapname
      tags:
      - nodes
      description: Get snapshot configuration
      summary: Get snapshot configuration
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: config
    put:
      operationId: setNodesLxcSnapshotConfigByNodeAndVmidAndSnapname
      requestBody:
        description: Update snapshot metadata.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcSnapshotConfig-RB'
      tags:
      - nodes
      description: Update snapshot metadata.
      summary: Update snapshot metadata.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback:
    post:
      operationId: newNodesLxcSnapshotRollbackByNodeAndVmidAndSnapname
      requestBody:
        description: Rollback LXC state to specified snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSnapshotRollback-RB'
      tags:
      - nodes
      description: Rollback LXC state to specified snapshot.
      summary: Rollback LXC state to specified snapshot.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: rollback
  /nodes/{node}/lxc/{vmid}/spiceproxy:
    post:
      operationId: newNodesLxcSpiceproxyByNodeAndVmid
      requestBody:
        description: Returns a SPICE configuration to connect to the CT.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSpiceproxy-RB'
      tags:
      - nodes
      description: Returns a SPICE configuration to connect to the CT.
      summary: Returns a SPICE configuration to connect to the CT.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: spiceproxy
  /nodes/{node}/lxc/{vmid}/status:
    get:
      operationId: getNodesLxcStatusByNodeAndVmid
      tags:
      - nodes
      description: Directory index
      summary: Directory index
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: status
  /nodes/{node}/lxc/{vmid}/status/current:
    get:
      operationId: getNodesLxcStatusCurrentByNodeAndVmid
      tags:
      - nodes
      description: Get virtual machine status.
      summary: Get virtual machine status.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcStatusCurrent'
    summary: current
  /nodes/{node}/lxc/{vmid}/status/reboot:
    post:
      operationId: newNodesLxcStatusRebootByNodeAndVmid
      requestBody:
        description: Reboot the container by shutting it down, and starting it again. Applies pending changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusReboot-RB'
      tags:
      - nodes
      description: Reboot the container by shutting it down, and starting it again. Applies pending changes.
      summary: Reboot the container by shutting it down, and starting it again. Applies pending changes.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: reboot
  /nodes/{node}/lxc/{vmid}/status/resume:
    post:
      operationId: newNodesLxcStatusResumeByNodeAndVmid
      tags:
      - nodes
      description: Resume the container.
      summary: Resume the container.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: resume
  /nodes/{node}/lxc/{vmid}/status/shutdown:
    post:
      operationId: newNodesLxcStatusShutdownByNodeAndVmid
      requestBody:
        description: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusShutdown-RB'
      tags:
      - nodes
      description: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
      summary: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: shutdown
  /nodes/{node}/lxc/{vmid}/status/start:
    post:
      operationId: newNodesLxcStatusStartByNodeAndVmid
      requestBody:
        description: Start the container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusStart-RB'
      tags:
      - nodes
      description: Start the container.
      summary: Start the container.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: start
  /nodes/{node}/lxc/{vmid}/status/stop:
    post:
      operationId: newNodesLxcStatusStopByNodeAndVmid
      requestBody:
        description: Stop the container. This will abruptly stop all processes running in the container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusStop-RB'
      tags:
      - nodes
      description: Stop the container. This will abruptly stop all processes running in the container.
      summary: Stop the container. This will abruptly stop all processes running in the container.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: stop
  /nodes/{node}/lxc/{vmid}/status/suspend:
    post:
      operationId: newNodesLxcStatusSuspendByNodeAndVmid
      tags:
      - nodes
      description: Suspend the container. This is experimental.
      summary: Suspend the container. This is experimental.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: suspend
  /nodes/{node}/lxc/{vmid}/template:
    post:
      operationId: newNodesLxcTemplateByNodeAndVmid
      tags:
      - nodes
      description: Create a Template.
      summary: Create a Template.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    summary: template
  /nodes/{node}/lxc/{vmid}/termproxy:
    post:
      operationId: newNodesLxcTermproxyByNodeAndVmid
      tags:
      - nodes
      description: Creates a TCP proxy connection.
      summary: Creates a TCP proxy connection.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: termproxy
  /nodes/{node}/lxc/{vmid}/vncproxy:
    post:
      operationId: newNodesLxcVncproxyByNodeAndVmid
      requestBody:
        description: Creates a TCP VNC proxy connections.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcVncproxy-RB'
      tags:
      - nodes
      description: Creates a TCP VNC proxy connections.
      summary: Creates a TCP VNC proxy connections.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: vncproxy
  /nodes/{node}/lxc/{vmid}/vncwebsocket:
    get:
      operationId: getNodesLxcVncwebsocketByNodeAndVmid
      requestBody:
        description: Opens a weksocket for VNC traffic.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcVncwebsocket-RB'
      tags:
      - nodes
      description: Opens a weksocket for VNC traffic.
      summary: Opens a weksocket for VNC traffic.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcVncwebsocket'
    summary: vncwebsocket
  /nodes/{node}/migrateall:
    post:
      operationId: newNodesMigrateallByNode
      requestBody:
        description: Migrate all VMs and Containers.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesMigrateall-RB'
      tags:
      - nodes
      description: Migrate all VMs and Containers.
      summary: Migrate all VMs and Containers.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: migrateall
  /nodes/{node}/netstat:
    get:
      operationId: getNodesNetstatByNode
      tags:
      - nodes
      description: Read tap/vm network device interface counters
      summary: Read tap/vm network device interface counters
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetstat'
    summary: netstat
  /nodes/{node}/network:
    get:
      operationId: getNodesNetworkByNode
      requestBody:
        description: List available networks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesNetwork-RB'
      tags:
      - nodes
      description: List available networks
      summary: List available networks
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetwork-GET'
    summary: network
    delete:
      operationId: removeNodesNetworkByNode
      tags:
      - nodes
      description: Revert network configuration changes.
      summary: Revert network configuration changes.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesNetworkByNode
      tags:
      - nodes
      description: Reload network configuration
      summary: Reload network configuration
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    post:
      operationId: newNodesNetworkByNode
      requestBody:
        description: Create network device configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesNetwork-RB'
      tags:
      - nodes
      description: Create network device configuration
      summary: Create network device configuration
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/network/{iface}:
    get:
      operationId: getNodesNetworkByNodeAndIface
      tags:
      - nodes
      description: Read network device configuration
      summary: Read network device configuration
      parameters:
      - name: iface
        in: path
        description: Network interface name.
        required: true
        schema:
          type: string
          format: pve-iface
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetwork'
    summary: iface
    delete:
      operationId: removeNodesNetworkByNodeAndIface
      tags:
      - nodes
      description: Delete network device configuration
      summary: Delete network device configuration
      parameters:
      - name: iface
        in: path
        description: Network interface name.
        required: true
        schema:
          type: string
          format: pve-iface
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesNetworkByNodeAndIface
      requestBody:
        description: Update network device configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesNetwork-RB'
      tags:
      - nodes
      description: Update network device configuration
      summary: Update network device configuration
      parameters:
      - name: iface
        in: path
        description: Network interface name.
        required: true
        schema:
          type: string
          format: pve-iface
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu:
    get:
      operationId: getNodesQemuByNode
      requestBody:
        description: Virtual machine index (per node).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemu-RB'
      tags:
      - nodes
      description: Virtual machine index (per node).
      summary: Virtual machine index (per node).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemu'
    summary: qemu
    post:
      operationId: newNodesQemuByNode
      requestBody:
        description: Create or restore a virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemu-RB'
      tags:
      - nodes
      description: Create or restore a virtual machine.
      summary: Create or restore a virtual machine.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
  /nodes/{node}/qemu/{vmid}:
    get:
      operationId: getNodesQemuByNodeAndVmid
      tags:
      - nodes
      description: Directory index
      summary: Directory index
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: vmid
    delete:
      operationId: removeNodesQemuByNodeAndVmid
      requestBody:
        description: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemu-RB'
      tags:
      - nodes
      description: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
      summary: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
  /nodes/{node}/qemu/{vmid}/agent:
    get:
      operationId: getNodesQemuAgentByNodeAndVmid
      tags:
      - nodes
      description: QEMU Guest Agent command index.
      summary: QEMU Guest Agent command index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgent'
    summary: agent
    post:
      operationId: newNodesQemuAgentByNodeAndVmid
      requestBody:
        description: Execute QEMU Guest Agent commands.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgent-RB'
      tags:
      - nodes
      description: Execute QEMU Guest Agent commands.
      summary: Execute QEMU Guest Agent commands.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
  /nodes/{node}/qemu/{vmid}/agent/exec:
    post:
      operationId: newNodesQemuAgentExecByNodeAndVmid
      requestBody:
        description: Executes the given command in the vm via the guest-agent and returns an object with the pid.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentExec-RB'
      tags:
      - nodes
      description: Executes the given command in the vm via the guest-agent and returns an object with the pid.
      summary: Executes the given command in the vm via the guest-agent and returns an object with the pid.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentExec'
    summary: exec
  /nodes/{node}/qemu/{vmid}/agent/exec-status:
    get:
      operationId: getNodesQemuAgentExecstatusByNodeAndVmid
      requestBody:
        description: Gets the status of the given pid started by the guest-agent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuAgentExecstatus-RB'
      tags:
      - nodes
      description: Gets the status of the given pid started by the guest-agent
      summary: Gets the status of the given pid started by the guest-agent
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentExecstatus'
    summary: exec-status
  /nodes/{node}/qemu/{vmid}/agent/file-read:
    get:
      operationId: getNodesQemuAgentFilereadByNodeAndVmid
      requestBody:
        description: Reads the given file via guest agent. Is limited to 16777216 bytes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuAgentFileread-RB'
      tags:
      - nodes
      description: Reads the given file via guest agent. Is limited to 16777216 bytes.
      summary: Reads the given file via guest agent. Is limited to 16777216 bytes.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentFileread'
    summary: file-read
  /nodes/{node}/qemu/{vmid}/agent/file-write:
    post:
      operationId: newNodesQemuAgentFilewriteByNodeAndVmid
      requestBody:
        description: Writes the given file via guest agent.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentFilewrite-RB'
      tags:
      - nodes
      description: Writes the given file via guest agent.
      summary: Writes the given file via guest agent.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    summary: file-write
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze:
    post:
      operationId: newNodesQemuAgentFsfreezefreezeByNodeAndVmid
      tags:
      - nodes
      description: Execute fsfreeze-freeze.
      summary: Execute fsfreeze-freeze.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: fsfreeze-freeze
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-status:
    post:
      operationId: newNodesQemuAgentFsfreezestatusByNodeAndVmid
      tags:
      - nodes
      description: Execute fsfreeze-status.
      summary: Execute fsfreeze-status.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: fsfreeze-status
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw:
    post:
      operationId: newNodesQemuAgentFsfreezethawByNodeAndVmid
      tags:
      - nodes
      description: Execute fsfreeze-thaw.
      summary: Execute fsfreeze-thaw.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: fsfreeze-thaw
  /nodes/{node}/qemu/{vmid}/agent/fstrim:
    post:
      operationId: newNodesQemuAgentFstrimByNodeAndVmid
      tags:
      - nodes
      description: Execute fstrim.
      summary: Execute fstrim.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: fstrim
  /nodes/{node}/qemu/{vmid}/agent/get-fsinfo:
    get:
      operationId: getNodesQemuAgentGetfsinfoByNodeAndVmid
      tags:
      - nodes
      description: Execute get-fsinfo.
      summary: Execute get-fsinfo.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-fsinfo
  /nodes/{node}/qemu/{vmid}/agent/get-host-name:
    get:
      operationId: getNodesQemuAgentGethostnameByNodeAndVmid
      tags:
      - nodes
      description: Execute get-host-name.
      summary: Execute get-host-name.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-host-name
  /nodes/{node}/qemu/{vmid}/agent/get-memory-block-info:
    get:
      operationId: getNodesQemuAgentGetmemoryblockinfoByNodeAndVmid
      tags:
      - nodes
      description: Execute get-memory-block-info.
      summary: Execute get-memory-block-info.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-memory-block-info
  /nodes/{node}/qemu/{vmid}/agent/get-memory-blocks:
    get:
      operationId: getNodesQemuAgentGetmemoryblocksByNodeAndVmid
      tags:
      - nodes
      description: Execute get-memory-blocks.
      summary: Execute get-memory-blocks.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-memory-blocks
  /nodes/{node}/qemu/{vmid}/agent/get-osinfo:
    get:
      operationId: getNodesQemuAgentGetosinfoByNodeAndVmid
      tags:
      - nodes
      description: Execute get-osinfo.
      summary: Execute get-osinfo.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-osinfo
  /nodes/{node}/qemu/{vmid}/agent/get-time:
    get:
      operationId: getNodesQemuAgentGettimeByNodeAndVmid
      tags:
      - nodes
      description: Execute get-time.
      summary: Execute get-time.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-time
  /nodes/{node}/qemu/{vmid}/agent/get-timezone:
    get:
      operationId: getNodesQemuAgentGettimezoneByNodeAndVmid
      tags:
      - nodes
      description: Execute get-timezone.
      summary: Execute get-timezone.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-timezone
  /nodes/{node}/qemu/{vmid}/agent/get-users:
    get:
      operationId: getNodesQemuAgentGetusersByNodeAndVmid
      tags:
      - nodes
      description: Execute get-users.
      summary: Execute get-users.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-users
  /nodes/{node}/qemu/{vmid}/agent/get-vcpus:
    get:
      operationId: getNodesQemuAgentGetvcpusByNodeAndVmid
      tags:
      - nodes
      description: Execute get-vcpus.
      summary: Execute get-vcpus.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: get-vcpus
  /nodes/{node}/qemu/{vmid}/agent/info:
    get:
      operationId: getNodesQemuAgentInfoByNodeAndVmid
      tags:
      - nodes
      description: Execute info.
      summary: Execute info.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: info
  /nodes/{node}/qemu/{vmid}/agent/network-get-interfaces:
    get:
      operationId: getNodesQemuAgentNetworkgetinterfacesByNodeAndVmid
      tags:
      - nodes
      description: Execute network-get-interfaces.
      summary: Execute network-get-interfaces.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: network-get-interfaces
  /nodes/{node}/qemu/{vmid}/agent/ping:
    post:
      operationId: newNodesQemuAgentPingByNodeAndVmid
      tags:
      - nodes
      description: Execute ping.
      summary: Execute ping.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: ping
  /nodes/{node}/qemu/{vmid}/agent/set-user-password:
    post:
      operationId: newNodesQemuAgentSetuserpasswordByNodeAndVmid
      requestBody:
        description: Sets the password for the given user to the given password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentSetuserpassword-RB'
      tags:
      - nodes
      description: Sets the password for the given user to the given password
      summary: Sets the password for the given user to the given password
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: set-user-password
  /nodes/{node}/qemu/{vmid}/agent/shutdown:
    post:
      operationId: newNodesQemuAgentShutdownByNodeAndVmid
      tags:
      - nodes
      description: Execute shutdown.
      summary: Execute shutdown.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: shutdown
  /nodes/{node}/qemu/{vmid}/agent/suspend-disk:
    post:
      operationId: newNodesQemuAgentSuspenddiskByNodeAndVmid
      tags:
      - nodes
      description: Execute suspend-disk.
      summary: Execute suspend-disk.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: suspend-disk
  /nodes/{node}/qemu/{vmid}/agent/suspend-hybrid:
    post:
      operationId: newNodesQemuAgentSuspendhybridByNodeAndVmid
      tags:
      - nodes
      description: Execute suspend-hybrid.
      summary: Execute suspend-hybrid.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: suspend-hybrid
  /nodes/{node}/qemu/{vmid}/agent/suspend-ram:
    post:
      operationId: newNodesQemuAgentSuspendramByNodeAndVmid
      tags:
      - nodes
      description: Execute suspend-ram.
      summary: Execute suspend-ram.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: suspend-ram
  /nodes/{node}/qemu/{vmid}/clone:
    post:
      operationId: newNodesQemuCloneByNodeAndVmid
      requestBody:
        description: Create a copy of virtual machine/template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuClone-RB'
      tags:
      - nodes
      description: Create a copy of virtual machine/template.
      summary: Create a copy of virtual machine/template.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: clone
  /nodes/{node}/qemu/{vmid}/cloudinit:
    get:
      operationId: getNodesQemuCloudinitByNodeAndVmid
      tags:
      - nodes
      description: Get the cloudinit configuration with both current and pending values.
      summary: Get the cloudinit configuration with both current and pending values.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuCloudinit'
    summary: cloudinit
    put:
      operationId: setNodesQemuCloudinitByNodeAndVmid
      tags:
      - nodes
      description: Regenerate and change cloudinit config drive.
      summary: Regenerate and change cloudinit config drive.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/cloudinit/dump:
    get:
      operationId: getNodesQemuCloudinitDumpByNodeAndVmid
      requestBody:
        description: Get automatically generated cloudinit config.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuCloudinitDump-RB'
      tags:
      - nodes
      description: Get automatically generated cloudinit config.
      summary: Get automatically generated cloudinit config.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: dump
  /nodes/{node}/qemu/{vmid}/config:
    get:
      operationId: getNodesQemuConfigByNodeAndVmid
      requestBody:
        description: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuConfig-RB'
      tags:
      - nodes
      description: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
      summary: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuConfig'
    summary: config
    post:
      operationId: newNodesQemuConfigByNodeAndVmid
      requestBody:
        description: Set virtual machine options (asynchronous API).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuConfig-RB'
      tags:
      - nodes
      description: Set virtual machine options (asynchronous API).
      summary: Set virtual machine options (asynchronous API).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    put:
      operationId: setNodesQemuConfigByNodeAndVmid
      requestBody:
        description: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuConfig-RB'
      tags:
      - nodes
      description: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
      summary: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/feature:
    get:
      operationId: getNodesQemuFeatureByNodeAndVmid
      requestBody:
        description: Check if feature for virtual machine is available.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFeature-RB'
      tags:
      - nodes
      description: Check if feature for virtual machine is available.
      summary: Check if feature for virtual machine is available.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFeature'
    summary: feature
  /nodes/{node}/qemu/{vmid}/firewall:
    get:
      operationId: getNodesQemuFirewallByNodeAndVmid
      tags:
      - nodes
      description: Directory index.
      summary: Directory index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewall'
    summary: firewall
  /nodes/{node}/qemu/{vmid}/firewall/aliases:
    get:
      operationId: getNodesQemuFirewallAliasesByNodeAndVmid
      tags:
      - nodes
      description: List aliases
      summary: List aliases
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallAliases'
    summary: aliases
    post:
      operationId: newNodesQemuFirewallAliasesByNodeAndVmid
      requestBody:
        description: Create IP or Network Alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallAliases-RB'
      tags:
      - nodes
      description: Create IP or Network Alias.
      summary: Create IP or Network Alias.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/firewall/aliases/{name}:
    get:
      operationId: getNodesQemuFirewallAliasesByNodeAndVmidAndName
      tags:
      - nodes
      description: Read alias.
      summary: Read alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: name
    delete:
      operationId: removeNodesQemuFirewallAliasesByNodeAndVmidAndName
      requestBody:
        description: Remove IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallAliases-RB'
      tags:
      - nodes
      description: Remove IP or Network alias.
      summary: Remove IP or Network alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesQemuFirewallAliasesByNodeAndVmidAndName
      requestBody:
        description: Update IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallAliases-RB'
      tags:
      - nodes
      description: Update IP or Network alias.
      summary: Update IP or Network alias.
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/firewall/ipset:
    get:
      operationId: getNodesQemuFirewallIpsetByNodeAndVmid
      tags:
      - nodes
      description: List IPSets
      summary: List IPSets
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallIpset'
    summary: ipset
    post:
      operationId: newNodesQemuFirewallIpsetByNodeAndVmid
      requestBody:
        description: Create new IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallIpset-RB'
      tags:
      - nodes
      description: Create new IPSet
      summary: Create new IPSet
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/firewall/ipset/{name}:
    get:
      operationId: getNodesQemuFirewallIpsetByNodeAndVmidAndName
      tags:
      - nodes
      description: List IPSet content
      summary: List IPSet content
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallIpset-GET'
    summary: name
    delete:
      operationId: removeNodesQemuFirewallIpsetByNodeAndVmidAndName
      requestBody:
        description: Delete IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallIpset-RB'
      tags:
      - nodes
      description: Delete IPSet
      summary: Delete IPSet
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    post:
      operationId: newNodesQemuFirewallIpsetByNodeAndVmidAndName
      requestBody:
        description: Add IP or Network to IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallIpset-RB'
      tags:
      - nodes
      description: Add IP or Network to IPSet.
      summary: Add IP or Network to IPSet.
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}:
    get:
      operationId: getNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      tags:
      - nodes
      description: Read IP or Network settings from IPSet.
      summary: Read IP or Network settings from IPSet.
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: cidr
    delete:
      operationId: removeNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      requestBody:
        description: Remove IP or Network from IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallIpset-RB'
      tags:
      - nodes
      description: Remove IP or Network from IPSet.
      summary: Remove IP or Network from IPSet.
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      requestBody:
        description: Update IP or Network settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallIpset-RB'
      tags:
      - nodes
      description: Update IP or Network settings
      summary: Update IP or Network settings
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/firewall/log:
    get:
      operationId: getNodesQemuFirewallLogByNodeAndVmid
      requestBody:
        description: Read firewall log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFirewallLog-RB'
      tags:
      - nodes
      description: Read firewall log
      summary: Read firewall log
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallLog'
    summary: log
  /nodes/{node}/qemu/{vmid}/firewall/options:
    get:
      operationId: getNodesQemuFirewallOptionsByNodeAndVmid
      tags:
      - nodes
      description: Get VM firewall options.
      summary: Get VM firewall options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallOptions'
    summary: options
    put:
      operationId: setNodesQemuFirewallOptionsByNodeAndVmid
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallOptions-RB'
      tags:
      - nodes
      description: Set Firewall options.
      summary: Set Firewall options.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/firewall/refs:
    get:
      operationId: getNodesQemuFirewallRefsByNodeAndVmid
      requestBody:
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFirewallRefs-RB'
      tags:
      - nodes
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRefs'
    summary: refs
  /nodes/{node}/qemu/{vmid}/firewall/rules:
    get:
      operationId: getNodesQemuFirewallRulesByNodeAndVmid
      tags:
      - nodes
      description: List rules.
      summary: List rules.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRules-GET'
    summary: rules
    post:
      operationId: newNodesQemuFirewallRulesByNodeAndVmid
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallRules-RB'
      tags:
      - nodes
      description: Create new rule.
      summary: Create new rule.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/firewall/rules/{pos}:
    get:
      operationId: getNodesQemuFirewallRulesByNodeAndVmidAndPos
      tags:
      - nodes
      description: Get single rule data.
      summary: Get single rule data.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRules'
    summary: pos
    delete:
      operationId: removeNodesQemuFirewallRulesByNodeAndVmidAndPos
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallRules-RB'
      tags:
      - nodes
      description: Delete rule.
      summary: Delete rule.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesQemuFirewallRulesByNodeAndVmidAndPos
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallRules-RB'
      tags:
      - nodes
      description: Modify rule data.
      summary: Modify rule data.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/migrate:
    get:
      operationId: getNodesQemuMigrateByNodeAndVmid
      requestBody:
        description: Get preconditions for migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuMigrate-RB'
      tags:
      - nodes
      description: Get preconditions for migration.
      summary: Get preconditions for migration.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuMigrate'
    summary: migrate
    post:
      operationId: newNodesQemuMigrateByNodeAndVmid
      requestBody:
        description: Migrate virtual machine. Creates a new migration task.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMigrate-RB'
      tags:
      - nodes
      description: Migrate virtual machine. Creates a new migration task.
      summary: Migrate virtual machine. Creates a new migration task.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
  /nodes/{node}/qemu/{vmid}/monitor:
    post:
      operationId: newNodesQemuMonitorByNodeAndVmid
      requestBody:
        description: Execute QEMU monitor commands.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMonitor-RB'
      tags:
      - nodes
      description: Execute QEMU monitor commands.
      summary: Execute QEMU monitor commands.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: monitor
  /nodes/{node}/qemu/{vmid}/move_disk:
    post:
      operationId: newNodesQemuMovediskByNodeAndVmid
      requestBody:
        description: Move volume to different storage or to a different VM.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMovedisk-RB'
      tags:
      - nodes
      description: Move volume to different storage or to a different VM.
      summary: Move volume to different storage or to a different VM.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: movedisk
  /nodes/{node}/qemu/{vmid}/mtunnel:
    post:
      operationId: newNodesQemuMtunnelByNodeAndVmid
      requestBody:
        description: Migration tunnel endpoint - only for internal use by VM migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMtunnel-RB'
      tags:
      - nodes
      description: Migration tunnel endpoint - only for internal use by VM migration.
      summary: Migration tunnel endpoint - only for internal use by VM migration.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: mtunnel
  /nodes/{node}/qemu/{vmid}/mtunnelwebsocket:
    get:
      operationId: getNodesQemuMtunnelwebsocketByNodeAndVmid
      requestBody:
        description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuMtunnelwebsocket-RB'
      tags:
      - nodes
      description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      summary: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuMtunnelwebsocket'
    summary: mtunnelwebsocket
  /nodes/{node}/qemu/{vmid}/pending:
    get:
      operationId: getNodesQemuPendingByNodeAndVmid
      tags:
      - nodes
      description: Get the virtual machine configuration with both current and pending values.
      summary: Get the virtual machine configuration with both current and pending values.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuPending'
    summary: pending
  /nodes/{node}/qemu/{vmid}/remote_migrate:
    post:
      operationId: newNodesQemuRemotemigrateByNodeAndVmid
      requestBody:
        description: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuRemotemigrate-RB'
      tags:
      - nodes
      description: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
      summary: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: remotemigrate
  /nodes/{node}/qemu/{vmid}/resize:
    put:
      operationId: setNodesQemuResizeByNodeAndVmid
      requestBody:
        description: Extend volume size.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuResize-RB'
      tags:
      - nodes
      description: Extend volume size.
      summary: Extend volume size.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: resize
  /nodes/{node}/qemu/{vmid}/rrd:
    get:
      operationId: getNodesQemuRrdByNodeAndVmid
      requestBody:
        description: Read VM RRD statistics (returns PNG)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuRrd-RB'
      tags:
      - nodes
      description: Read VM RRD statistics (returns PNG)
      summary: Read VM RRD statistics (returns PNG)
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuRrd'
    summary: rrd
  /nodes/{node}/qemu/{vmid}/rrddata:
    get:
      operationId: getNodesQemuRrddataByNodeAndVmid
      requestBody:
        description: Read VM RRD statistics
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuRrddata-RB'
      tags:
      - nodes
      description: Read VM RRD statistics
      summary: Read VM RRD statistics
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuRrddata'
    summary: rrddata
  /nodes/{node}/qemu/{vmid}/sendkey:
    put:
      operationId: setNodesQemuSendkeyByNodeAndVmid
      requestBody:
        description: Send key event to virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuSendkey-RB'
      tags:
      - nodes
      description: Send key event to virtual machine.
      summary: Send key event to virtual machine.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    summary: sendkey
  /nodes/{node}/qemu/{vmid}/snapshot:
    get:
      operationId: getNodesQemuSnapshotByNodeAndVmid
      tags:
      - nodes
      description: List all snapshots.
      summary: List all snapshots.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuSnapshot'
    summary: snapshot
    post:
      operationId: newNodesQemuSnapshotByNodeAndVmid
      requestBody:
        description: Snapshot a VM.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSnapshot-RB'
      tags:
      - nodes
      description: Snapshot a VM.
      summary: Snapshot a VM.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}:
    get:
      operationId: getNodesQemuSnapshotByNodeAndVmidAndSnapname
      tags:
      - nodes
      description: ""
      summary: ""
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuSnapshot-GET'
    summary: snapname
    delete:
      operationId: removeNodesQemuSnapshotByNodeAndVmidAndSnapname
      requestBody:
        description: Delete a VM snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuSnapshot-RB'
      tags:
      - nodes
      description: Delete a VM snapshot.
      summary: Delete a VM snapshot.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config:
    get:
      operationId: getNodesQemuSnapshotConfigByNodeAndVmidAndSnapname
      tags:
      - nodes
      description: Get snapshot configuration
      summary: Get snapshot configuration
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: config
    put:
      operationId: setNodesQemuSnapshotConfigByNodeAndVmidAndSnapname
      requestBody:
        description: Update snapshot metadata.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuSnapshotConfig-RB'
      tags:
      - nodes
      description: Update snapshot metadata.
      summary: Update snapshot metadata.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback:
    post:
      operationId: newNodesQemuSnapshotRollbackByNodeAndVmidAndSnapname
      requestBody:
        description: Rollback VM state to specified snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSnapshotRollback-RB'
      tags:
      - nodes
      description: Rollback VM state to specified snapshot.
      summary: Rollback VM state to specified snapshot.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: rollback
  /nodes/{node}/qemu/{vmid}/spiceproxy:
    post:
      operationId: newNodesQemuSpiceproxyByNodeAndVmid
      requestBody:
        description: Returns a SPICE configuration to connect to the VM.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSpiceproxy-RB'
      tags:
      - nodes
      description: Returns a SPICE configuration to connect to the VM.
      summary: Returns a SPICE configuration to connect to the VM.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: spiceproxy
  /nodes/{node}/qemu/{vmid}/status:
    get:
      operationId: getNodesQemuStatusByNodeAndVmid
      tags:
      - nodes
      description: Directory index
      summary: Directory index
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: status
  /nodes/{node}/qemu/{vmid}/status/current:
    get:
      operationId: getNodesQemuStatusCurrentByNodeAndVmid
      tags:
      - nodes
      description: Get virtual machine status.
      summary: Get virtual machine status.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuStatusCurrent'
    summary: current
  /nodes/{node}/qemu/{vmid}/status/reboot:
    post:
      operationId: newNodesQemuStatusRebootByNodeAndVmid
      requestBody:
        description: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusReboot-RB'
      tags:
      - nodes
      description: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
      summary: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: reboot
  /nodes/{node}/qemu/{vmid}/status/reset:
    post:
      operationId: newNodesQemuStatusResetByNodeAndVmid
      requestBody:
        description: Reset virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusReset-RB'
      tags:
      - nodes
      description: Reset virtual machine.
      summary: Reset virtual machine.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: reset
  /nodes/{node}/qemu/{vmid}/status/resume:
    post:
      operationId: newNodesQemuStatusResumeByNodeAndVmid
      requestBody:
        description: Resume virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusResume-RB'
      tags:
      - nodes
      description: Resume virtual machine.
      summary: Resume virtual machine.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: resume
  /nodes/{node}/qemu/{vmid}/status/shutdown:
    post:
      operationId: newNodesQemuStatusShutdownByNodeAndVmid
      requestBody:
        description: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusShutdown-RB'
      tags:
      - nodes
      description: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
      summary: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: shutdown
  /nodes/{node}/qemu/{vmid}/status/start:
    post:
      operationId: newNodesQemuStatusStartByNodeAndVmid
      requestBody:
        description: Start virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusStart-RB'
      tags:
      - nodes
      description: Start virtual machine.
      summary: Start virtual machine.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: start
  /nodes/{node}/qemu/{vmid}/status/stop:
    post:
      operationId: newNodesQemuStatusStopByNodeAndVmid
      requestBody:
        description: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusStop-RB'
      tags:
      - nodes
      description: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
      summary: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: stop
  /nodes/{node}/qemu/{vmid}/status/suspend:
    post:
      operationId: newNodesQemuStatusSuspendByNodeAndVmid
      requestBody:
        description: Suspend virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusSuspend-RB'
      tags:
      - nodes
      description: Suspend virtual machine.
      summary: Suspend virtual machine.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: suspend
  /nodes/{node}/qemu/{vmid}/template:
    post:
      operationId: newNodesQemuTemplateByNodeAndVmid
      requestBody:
        description: Create a Template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuTemplate-RB'
      tags:
      - nodes
      description: Create a Template.
      summary: Create a Template.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: template
  /nodes/{node}/qemu/{vmid}/termproxy:
    post:
      operationId: newNodesQemuTermproxyByNodeAndVmid
      requestBody:
        description: Creates a TCP proxy connections.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuTermproxy-RB'
      tags:
      - nodes
      description: Creates a TCP proxy connections.
      summary: Creates a TCP proxy connections.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: termproxy
  /nodes/{node}/qemu/{vmid}/unlink:
    put:
      operationId: setNodesQemuUnlinkByNodeAndVmid
      requestBody:
        description: Unlink/delete disk images.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuUnlink-RB'
      tags:
      - nodes
      description: Unlink/delete disk images.
      summary: Unlink/delete disk images.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
    summary: unlink
  /nodes/{node}/qemu/{vmid}/vncproxy:
    post:
      operationId: newNodesQemuVncproxyByNodeAndVmid
      requestBody:
        description: Creates a TCP VNC proxy connections.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuVncproxy-RB'
      tags:
      - nodes
      description: Creates a TCP VNC proxy connections.
      summary: Creates a TCP VNC proxy connections.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses: ""
    summary: vncproxy
  /nodes/{node}/qemu/{vmid}/vncwebsocket:
    get:
      operationId: getNodesQemuVncwebsocketByNodeAndVmid
      requestBody:
        description: Opens a weksocket for VNC traffic.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuVncwebsocket-RB'
      tags:
      - nodes
      description: Opens a weksocket for VNC traffic.
      summary: Opens a weksocket for VNC traffic.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuVncwebsocket'
    summary: vncwebsocket
  /nodes/{node}/query-url-metadata:
    get:
      operationId: getNodesQueryurlmetadataByNode
      requestBody:
        description: 'Query metadata of an URL: file size, file name and mime type.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQueryurlmetadata-RB'
      tags:
      - nodes
      description: 'Query metadata of an URL: file size, file name and mime type.'
      summary: 'Query metadata of an URL: file size, file name and mime type.'
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQueryurlmetadata'
    summary: query-url-metadata
  /nodes/{node}/replication:
    get:
      operationId: getNodesReplicationByNode
      requestBody:
        description: List status of all replication jobs on this node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesReplication-RB'
      tags:
      - nodes
      description: List status of all replication jobs on this node.
      summary: List status of all replication jobs on this node.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplication'
    summary: replication
  /nodes/{node}/replication/{id}:
    get:
      operationId: getNodesReplicationByNodeAndId
      tags:
      - nodes
      description: Directory index.
      summary: Directory index.
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplication-GET'
    summary: id
  /nodes/{node}/replication/{id}/log:
    get:
      operationId: getNodesReplicationLogByNodeAndId
      requestBody:
        description: Read replication job log.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesReplicationLog-RB'
      tags:
      - nodes
      description: Read replication job log.
      summary: Read replication job log.
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplicationLog'
    summary: log
  /nodes/{node}/replication/{id}/schedule_now:
    post:
      operationId: newNodesReplicationSchedulenowByNodeAndId
      tags:
      - nodes
      description: Schedule replication job to start as soon as possible.
      summary: Schedule replication job to start as soon as possible.
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: schedulenow
  /nodes/{node}/replication/{id}/status:
    get:
      operationId: getNodesReplicationStatusByNodeAndId
      tags:
      - nodes
      description: Get replication job status.
      summary: Get replication job status.
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: status
  /nodes/{node}/report:
    get:
      operationId: getNodesReportByNode
      tags:
      - nodes
      description: Gather various systems information about a node
      summary: Gather various systems information about a node
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: report
  /nodes/{node}/rrd:
    get:
      operationId: getNodesRrdByNode
      requestBody:
        description: Read node RRD statistics (returns PNG)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesRrd-RB'
      tags:
      - nodes
      description: Read node RRD statistics (returns PNG)
      summary: Read node RRD statistics (returns PNG)
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesRrd'
    summary: rrd
  /nodes/{node}/rrddata:
    get:
      operationId: getNodesRrddataByNode
      requestBody:
        description: Read node RRD statistics
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesRrddata-RB'
      tags:
      - nodes
      description: Read node RRD statistics
      summary: Read node RRD statistics
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesRrddata'
    summary: rrddata
  /nodes/{node}/scan:
    get:
      operationId: getNodesScanByNode
      tags:
      - nodes
      description: Index of available scan methods
      summary: Index of available scan methods
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScan'
    summary: scan
  /nodes/{node}/scan/cifs:
    get:
      operationId: getNodesScanCifsByNode
      requestBody:
        description: Scan remote CIFS server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanCifs-RB'
      tags:
      - nodes
      description: Scan remote CIFS server.
      summary: Scan remote CIFS server.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanCifs'
    summary: cifs
  /nodes/{node}/scan/glusterfs:
    get:
      operationId: getNodesScanGlusterfsByNode
      requestBody:
        description: Scan remote GlusterFS server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanGlusterfs-RB'
      tags:
      - nodes
      description: Scan remote GlusterFS server.
      summary: Scan remote GlusterFS server.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanGlusterfs'
    summary: glusterfs
  /nodes/{node}/scan/iscsi:
    get:
      operationId: getNodesScanIscsiByNode
      requestBody:
        description: Scan remote iSCSI server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanIscsi-RB'
      tags:
      - nodes
      description: Scan remote iSCSI server.
      summary: Scan remote iSCSI server.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanIscsi'
    summary: iscsi
  /nodes/{node}/scan/lvm:
    get:
      operationId: getNodesScanLvmByNode
      tags:
      - nodes
      description: List local LVM volume groups.
      summary: List local LVM volume groups.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanLvm'
    summary: lvm
  /nodes/{node}/scan/lvmthin:
    get:
      operationId: getNodesScanLvmthinByNode
      requestBody:
        description: List local LVM Thin Pools.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanLvmthin-RB'
      tags:
      - nodes
      description: List local LVM Thin Pools.
      summary: List local LVM Thin Pools.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanLvmthin'
    summary: lvmthin
  /nodes/{node}/scan/nfs:
    get:
      operationId: getNodesScanNfsByNode
      requestBody:
        description: Scan remote NFS server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanNfs-RB'
      tags:
      - nodes
      description: Scan remote NFS server.
      summary: Scan remote NFS server.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanNfs'
    summary: nfs
  /nodes/{node}/scan/pbs:
    get:
      operationId: getNodesScanPbsByNode
      requestBody:
        description: Scan remote Proxmox Backup Server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanPbs-RB'
      tags:
      - nodes
      description: Scan remote Proxmox Backup Server.
      summary: Scan remote Proxmox Backup Server.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanPbs'
    summary: pbs
  /nodes/{node}/scan/zfs:
    get:
      operationId: getNodesScanZfsByNode
      tags:
      - nodes
      description: Scan zfs pool list on local node.
      summary: Scan zfs pool list on local node.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanZfs'
    summary: zfs
  /nodes/{node}/sdn:
    get:
      operationId: getNodesSdnByNode
      tags:
      - nodes
      description: SDN index.
      summary: SDN index.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdn'
    summary: sdn
  /nodes/{node}/sdn/zones:
    get:
      operationId: getNodesSdnZonesByNode
      tags:
      - nodes
      description: Get status for all zones.
      summary: Get status for all zones.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdnZones'
    summary: zones
  /nodes/{node}/sdn/zones/{zone}:
    get:
      operationId: getNodesSdnZonesByNodeAndZone
      tags:
      - nodes
      description: ""
      summary: ""
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      responses: ""
    summary: zone
  /nodes/{node}/sdn/zones/{zone}/content:
    get:
      operationId: getNodesSdnZonesContentByNodeAndZone
      tags:
      - nodes
      description: List zone content.
      summary: List zone content.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdnZonesContent'
    summary: content
  /nodes/{node}/services:
    get:
      operationId: getNodesServicesByNode
      tags:
      - nodes
      description: Service list.
      summary: Service list.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesServices'
    summary: services
  /nodes/{node}/services/{service}:
    get:
      operationId: getNodesServicesByNodeAndService
      tags:
      - nodes
      description: Directory index
      summary: Directory index
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: service
  /nodes/{node}/services/{service}/reload:
    post:
      operationId: newNodesServicesReloadByNodeAndService
      tags:
      - nodes
      description: Reload service. Falls back to restart if service cannot be reloaded.
      summary: Reload service. Falls back to restart if service cannot be reloaded.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: reload
  /nodes/{node}/services/{service}/restart:
    post:
      operationId: newNodesServicesRestartByNodeAndService
      tags:
      - nodes
      description: Hard restart service. Use reload if you want to reduce interruptions.
      summary: Hard restart service. Use reload if you want to reduce interruptions.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: restart
  /nodes/{node}/services/{service}/start:
    post:
      operationId: newNodesServicesStartByNodeAndService
      tags:
      - nodes
      description: Start service.
      summary: Start service.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: start
  /nodes/{node}/services/{service}/state:
    get:
      operationId: getNodesServicesStateByNodeAndService
      tags:
      - nodes
      description: Read service properties
      summary: Read service properties
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: state
  /nodes/{node}/services/{service}/stop:
    post:
      operationId: newNodesServicesStopByNodeAndService
      tags:
      - nodes
      description: Stop service.
      summary: Stop service.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      responses: ""
    summary: stop
  /nodes/{node}/spiceshell:
    post:
      operationId: newNodesSpiceshellByNode
      requestBody:
        description: Creates a SPICE shell.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSpiceshell-RB'
      tags:
      - nodes
      description: Creates a SPICE shell.
      summary: Creates a SPICE shell.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: spiceshell
  /nodes/{node}/startall:
    post:
      operationId: newNodesStartallByNode
      requestBody:
        description: Start all VMs and containers located on this node (by default only those with onboot=1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStartall-RB'
      tags:
      - nodes
      description: Start all VMs and containers located on this node (by default only those with onboot=1).
      summary: Start all VMs and containers located on this node (by default only those with onboot=1).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: startall
  /nodes/{node}/status:
    get:
      operationId: getNodesStatusByNode
      tags:
      - nodes
      description: Read node status
      summary: Read node status
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStatus'
    summary: status
    post:
      operationId: newNodesStatusByNode
      requestBody:
        description: Reboot or shutdown a node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStatus-RB'
      tags:
      - nodes
      description: Reboot or shutdown a node.
      summary: Reboot or shutdown a node.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/stopall:
    post:
      operationId: newNodesStopallByNode
      requestBody:
        description: Stop all VMs and Containers.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStopall-RB'
      tags:
      - nodes
      description: Stop all VMs and Containers.
      summary: Stop all VMs and Containers.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: stopall
  /nodes/{node}/storage:
    get:
      operationId: getNodesStorageByNode
      requestBody:
        description: Get status for all datastores.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorage-RB'
      tags:
      - nodes
      description: Get status for all datastores.
      summary: Get status for all datastores.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorage'
    summary: storage
  /nodes/{node}/storage/{storage}:
    get:
      operationId: getNodesStorageByNodeAndStorage
      tags:
      - nodes
      description: ""
      summary: ""
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses: ""
    summary: storage
  /nodes/{node}/storage/{storage}/content:
    get:
      operationId: getNodesStorageContentByNodeAndStorage
      requestBody:
        description: List storage content.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageContent-RB'
      tags:
      - nodes
      description: List storage content.
      summary: List storage content.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageContent-GET'
    summary: content
    post:
      operationId: newNodesStorageContentByNodeAndStorage
      requestBody:
        description: Allocate disk images.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageContent-RB'
      tags:
      - nodes
      description: Allocate disk images.
      summary: Allocate disk images.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses: ""
  /nodes/{node}/storage/{storage}/content/{volume}:
    get:
      operationId: getNodesStorageContentByNodeAndStorageAndVolume
      tags:
      - nodes
      description: Get volume attributes
      summary: Get volume attributes
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: volume
        in: path
        description: Volume identifier
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageContent'
    summary: volume
    delete:
      operationId: removeNodesStorageContentByNodeAndStorageAndVolume
      requestBody:
        description: Delete volume
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesStorageContent-RB'
      tags:
      - nodes
      description: Delete volume
      summary: Delete volume
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: volume
        in: path
        description: Volume identifier
        required: true
        schema:
          type: string
          format: 
      responses: ""
    put:
      operationId: setNodesStorageContentByNodeAndStorageAndVolume
      requestBody:
        description: Update volume attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesStorageContent-RB'
      tags:
      - nodes
      description: Update volume attributes
      summary: Update volume attributes
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: volume
        in: path
        description: Volume identifier
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
    post:
      operationId: newNodesStorageContentByNodeAndStorageAndVolume
      requestBody:
        description: Copy a volume. This is experimental code - do not use.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageContent-RB'
      tags:
      - nodes
      description: Copy a volume. This is experimental code - do not use.
      summary: Copy a volume. This is experimental code - do not use.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: volume
        in: path
        description: Source volume identifier
        required: true
        schema:
          type: string
          format: 
      responses: ""
  /nodes/{node}/storage/{storage}/download-url:
    post:
      operationId: newNodesStorageDownloadurlByNodeAndStorage
      requestBody:
        description: Download templates, ISO images, OVAs and VM images by using an URL.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageDownloadurl-RB'
      tags:
      - nodes
      description: Download templates, ISO images, OVAs and VM images by using an URL.
      summary: Download templates, ISO images, OVAs and VM images by using an URL.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses: ""
    summary: download-url
  /nodes/{node}/storage/{storage}/file-restore/download:
    get:
      operationId: getNodesStorageFilerestoreDownloadByNodeAndStorage
      requestBody:
        description: Extract a file or directory (as zip archive) from a PBS backup.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageFilerestoreDownload-RB'
      tags:
      - nodes
      description: Extract a file or directory (as zip archive) from a PBS backup.
      summary: Extract a file or directory (as zip archive) from a PBS backup.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageFilerestoreDownload'
    summary: download
  /nodes/{node}/storage/{storage}/file-restore/list:
    get:
      operationId: getNodesStorageFilerestoreListByNodeAndStorage
      requestBody:
        description: List files and directories for single file restore under the given path.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageFilerestoreList-RB'
      tags:
      - nodes
      description: List files and directories for single file restore under the given path.
      summary: List files and directories for single file restore under the given path.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageFilerestoreList'
    summary: list
  /nodes/{node}/storage/{storage}/import-metadata:
    get:
      operationId: getNodesStorageImportmetadataByNodeAndStorage
      requestBody:
        description: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageImportmetadata-RB'
      tags:
      - nodes
      description: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
      summary: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageImportmetadata'
    summary: import-metadata
  /nodes/{node}/storage/{storage}/prunebackups:
    get:
      operationId: getNodesStoragePrunebackupsByNodeAndStorage
      requestBody:
        description: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStoragePrunebackups-RB'
      tags:
      - nodes
      description: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
      summary: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStoragePrunebackups'
    summary: prunebackups
    delete:
      operationId: removeNodesStoragePrunebackupsByNodeAndStorage
      requestBody:
        description: Prune backups. Only those using the standard naming scheme are considered.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesStoragePrunebackups-RB'
      tags:
      - nodes
      description: Prune backups. Only those using the standard naming scheme are considered.
      summary: Prune backups. Only those using the standard naming scheme are considered.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses: ""
  /nodes/{node}/storage/{storage}/rrd:
    get:
      operationId: getNodesStorageRrdByNodeAndStorage
      requestBody:
        description: Read storage RRD statistics (returns PNG).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageRrd-RB'
      tags:
      - nodes
      description: Read storage RRD statistics (returns PNG).
      summary: Read storage RRD statistics (returns PNG).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageRrd'
    summary: rrd
  /nodes/{node}/storage/{storage}/rrddata:
    get:
      operationId: getNodesStorageRrddataByNodeAndStorage
      requestBody:
        description: Read storage RRD statistics.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageRrddata-RB'
      tags:
      - nodes
      description: Read storage RRD statistics.
      summary: Read storage RRD statistics.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageRrddata'
    summary: rrddata
  /nodes/{node}/storage/{storage}/status:
    get:
      operationId: getNodesStorageStatusByNodeAndStorage
      tags:
      - nodes
      description: Read storage status.
      summary: Read storage status.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses: ""
    summary: status
  /nodes/{node}/storage/{storage}/upload:
    post:
      operationId: newNodesStorageUploadByNodeAndStorage
      requestBody:
        description: Upload templates, ISO images, OVAs and VM images.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageUpload-RB'
      tags:
      - nodes
      description: Upload templates, ISO images, OVAs and VM images.
      summary: Upload templates, ISO images, OVAs and VM images.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses: ""
    summary: upload
  /nodes/{node}/subscription:
    get:
      operationId: getNodesSubscriptionByNode
      tags:
      - nodes
      description: Read subscription info.
      summary: Read subscription info.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSubscription'
    summary: subscription
    delete:
      operationId: removeNodesSubscriptionByNode
      tags:
      - nodes
      description: Delete subscription key of this node.
      summary: Delete subscription key of this node.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
    put:
      operationId: setNodesSubscriptionByNode
      requestBody:
        description: Set subscription key.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesSubscription-RB'
      tags:
      - nodes
      description: Set subscription key.
      summary: Set subscription key.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
    post:
      operationId: newNodesSubscriptionByNode
      requestBody:
        description: Update subscription info.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSubscription-RB'
      tags:
      - nodes
      description: Update subscription info.
      summary: Update subscription info.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/suspendall:
    post:
      operationId: newNodesSuspendallByNode
      requestBody:
        description: Suspend all VMs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSuspendall-RB'
      tags:
      - nodes
      description: Suspend all VMs.
      summary: Suspend all VMs.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: suspendall
  /nodes/{node}/syslog:
    get:
      operationId: getNodesSyslogByNode
      requestBody:
        description: Read system log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesSyslog-RB'
      tags:
      - nodes
      description: Read system log
      summary: Read system log
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSyslog'
    summary: syslog
  /nodes/{node}/tasks:
    get:
      operationId: getNodesTasksByNode
      requestBody:
        description: Read task list for one node (finished tasks).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesTasks-RB'
      tags:
      - nodes
      description: Read task list for one node (finished tasks).
      summary: Read task list for one node (finished tasks).
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasks'
    summary: tasks
  /nodes/{node}/tasks/{upid}:
    get:
      operationId: getNodesTasksByNodeAndUpid
      tags:
      - nodes
      description: ""
      summary: ""
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: upid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasks-GET'
    summary: upid
    delete:
      operationId: removeNodesTasksByNodeAndUpid
      tags:
      - nodes
      description: Stop a task.
      summary: Stop a task.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: upid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
  /nodes/{node}/tasks/{upid}/log:
    get:
      operationId: getNodesTasksLogByNodeAndUpid
      requestBody:
        description: Read task log.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesTasksLog-RB'
      tags:
      - nodes
      description: Read task log.
      summary: Read task log.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: upid
        in: path
        description: The task's unique ID.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasksLog'
    summary: log
  /nodes/{node}/tasks/{upid}/status:
    get:
      operationId: getNodesTasksStatusByNodeAndUpid
      tags:
      - nodes
      description: Read task status.
      summary: Read task status.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: upid
        in: path
        description: The task's unique ID.
        required: true
        schema:
          type: string
          format: 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasksStatus'
    summary: status
  /nodes/{node}/termproxy:
    post:
      operationId: newNodesTermproxyByNode
      requestBody:
        description: Creates a VNC Shell proxy.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesTermproxy-RB'
      tags:
      - nodes
      description: Creates a VNC Shell proxy.
      summary: Creates a VNC Shell proxy.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: termproxy
  /nodes/{node}/time:
    get:
      operationId: getNodesTimeByNode
      tags:
      - nodes
      description: Read server time and time zone settings.
      summary: Read server time and time zone settings.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTime'
    summary: time
    put:
      operationId: setNodesTimeByNode
      requestBody:
        description: Set time zone.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesTime-RB'
      tags:
      - nodes
      description: Set time zone.
      summary: Set time zone.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
  /nodes/{node}/version:
    get:
      operationId: getNodesVersionByNode
      tags:
      - nodes
      description: API version details
      summary: API version details
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVersion'
    summary: version
  /nodes/{node}/vncshell:
    post:
      operationId: newNodesVncshellByNode
      requestBody:
        description: Creates a VNC Shell proxy.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesVncshell-RB'
      tags:
      - nodes
      description: Creates a VNC Shell proxy.
      summary: Creates a VNC Shell proxy.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: vncshell
  /nodes/{node}/vncwebsocket:
    get:
      operationId: getNodesVncwebsocketByNode
      requestBody:
        description: Opens a websocket for VNC traffic.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVncwebsocket-RB'
      tags:
      - nodes
      description: Opens a websocket for VNC traffic.
      summary: Opens a websocket for VNC traffic.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVncwebsocket'
    summary: vncwebsocket
  /nodes/{node}/vzdump:
    post:
      operationId: newNodesVzdumpByNode
      requestBody:
        description: Create backup.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesVzdump-RB'
      tags:
      - nodes
      description: Create backup.
      summary: Create backup.
      parameters:
      - name: node
        in: path
        description: Only run if executed on this node.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: vzdump
  /nodes/{node}/vzdump/defaults:
    get:
      operationId: getNodesVzdumpDefaultsByNode
      requestBody:
        description: Get the currently configured vzdump defaults.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVzdumpDefaults-RB'
      tags:
      - nodes
      description: Get the currently configured vzdump defaults.
      summary: Get the currently configured vzdump defaults.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVzdumpDefaults'
    summary: defaults
  /nodes/{node}/vzdump/extractconfig:
    get:
      operationId: getNodesVzdumpExtractconfigByNode
      requestBody:
        description: Extract configuration from vzdump backup archive.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVzdumpExtractconfig-RB'
      tags:
      - nodes
      description: Extract configuration from vzdump backup archive.
      summary: Extract configuration from vzdump backup archive.
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: extractconfig
  /nodes/{node}/wakeonlan:
    post:
      operationId: newNodesWakeonlanByNode
      tags:
      - nodes
      description: Try to wake a node via 'wake on LAN' network packet.
      summary: Try to wake a node via 'wake on LAN' network packet.
      parameters:
      - name: node
        in: path
        description: target node for wake on LAN packet
        required: true
        schema:
          type: string
          format: pve-node
      responses: ""
    summary: wakeonlan
  /pools:
    get:
      operationId: getPools
      requestBody:
        description: List pools or get pool configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Pools-RB'
      tags:
      - pools
      description: List pools or get pool configuration.
      summary: List pools or get pool configuration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pools-GET'
    summary: pools
    delete:
      operationId: removePools
      requestBody:
        description: Delete pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-Pools-RB'
      tags:
      - pools
      description: Delete pool.
      summary: Delete pool.
      responses:
        "200":
          description: OK
    put:
      operationId: setPools
      requestBody:
        description: Update pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Pools-RB'
      tags:
      - pools
      description: Update pool.
      summary: Update pool.
      responses:
        "200":
          description: OK
    post:
      operationId: newPools
      requestBody:
        description: Create new pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-Pools-RB'
      tags:
      - pools
      description: Create new pool.
      summary: Create new pool.
      responses:
        "200":
          description: OK
  /pools/{poolid}:
    get:
      operationId: getPoolsByPoolid
      requestBody:
        description: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Pools-RB'
      tags:
      - pools
      description: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
      summary: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
      parameters:
      - name: poolid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-poolid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pools'
    summary: poolid
    delete:
      operationId: removePoolsByPoolid
      tags:
      - pools
      description: Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').
      summary: Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').
      parameters:
      - name: poolid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-poolid
      responses:
        "200":
          description: OK
    put:
      operationId: setPoolsByPoolid
      requestBody:
        description: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Pools-RB'
      tags:
      - pools
      description: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
      summary: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
      parameters:
      - name: poolid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-poolid
      responses:
        "200":
          description: OK
  /storage:
    get:
      operationId: getStorage
      requestBody:
        description: Storage index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Storage-RB'
      tags:
      - storage
      description: Storage index.
      summary: Storage index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage-GET'
    summary: storage
    post:
      operationId: newStorage
      requestBody:
        description: Create a new storage.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-Storage-RB'
      tags:
      - storage
      description: Create a new storage.
      summary: Create a new storage.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
  /storage/{storage}:
    get:
      operationId: getStorageByStorage
      tags:
      - storage
      description: Read storage configuration.
      summary: Read storage configuration.
      parameters:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses: ""
    summary: storage
    delete:
      operationId: removeStorageByStorage
      tags:
      - storage
      description: Delete storage configuration.
      summary: Delete storage configuration.
      parameters:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
    put:
      operationId: setStorageByStorage
      requestBody:
        description: Update storage configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Storage-RB'
      tags:
      - storage
      description: Update storage configuration.
      summary: Update storage configuration.
      parameters:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage-PUT'
  /version:
    get:
      description: API version details, including some parts of the global datacenter config.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      summary: API version details, including some parts of the global datacenter config.
      operationId: getVersion
      tags:
      - version
    summary: version
components:
  schemas:
    POST-AccessUsersToken-RB:
      type: object
      properties:
        expire:
          type: integer
        privsep:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
        tokenid:
          pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
          type: string
        userid:
          maxLength: 64
          type: string
    PUT-AccessUsers-RB:
      type: object
      properties:
        append:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        email:
          maxLength: 254
          type: string
        comment:
          maxLength: 2048
          type: string
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        groups:
          type: string
        firstname:
          maxLength: 1024
          type: string
        lastname:
          maxLength: 1024
          type: string
        userid:
          maxLength: 64
          type: string
        expire:
          type: integer
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
    NodesScanCifs:
      type: array
      items:
        type: object
        properties:
          share:
            type: string
          description:
            type: string
    PUT-NodesLxcConfig-RB:
      type: object
      properties:
        cpulimit:
          type: number
          maximum: 8192
        memory:
          type: integer
          minimum: 16
        cpuunits:
          type: integer
          maximum: 500000
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        rootfs:
          type: string
        searchdomain:
          type: string
        unprivileged:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        swap:
          type: integer
        debug:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
        delete:
          type: string
        nameserver:
          type: string
        startup:
          type: string
        tty:
          type: integer
          maximum: 6
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        dev[n]:
          type: string
        hookscript:
          type: string
        onboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        hostname:
          maxLength: 255
          type: string
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
        description:
          maxLength: 8192
          type: string
        revert:
          type: string
        cores:
          minimum: 1
          type: integer
          maximum: 8192
        net[n]:
          type: string
        protection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        timezone:
          type: string
        unused[n]:
          type: string
        mp[n]:
          type: string
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        console:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 40
          type: string
        features:
          type: string
        tags:
          type: string
    ClusterSdnIpams:
      type: array
      items:
        type: object
        properties:
          ipam:
            type: string
          type:
            type: string
    GET-NodesStorageRrd-RB:
      type: object
      properties:
        ds:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
        storage:
          type: string
        node:
          type: string
    POST-NodesQemuMigrate-RB:
      type: object
      properties:
        targetstorage:
          type: string
        migration_type:
          type: string
          enum:
          - secure
          - insecure
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        online:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        migration_network:
          type: string
        bwlimit:
          type: integer
          minimum: "0"
        with-local-disks:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        target:
          type: string
        node:
          type: string
    NodesCephOsdLvinfo:
      type: object
      properties:
        lv_name:
          type: string
        lv_path:
          type: string
        vg_name:
          type: string
        lv_uuid:
          type: string
        lv_size:
          type: integer
        creation_time:
          type: string
    GET-NodesLxcVncwebsocket-RB:
      type: object
      properties:
        port:
          minimum: 5900
          type: integer
          maximum: 5999
        vncticket:
          maxLength: 512
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    GET-NodesQemuFirewallLog-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        start:
          type: integer
        until:
          type: integer
        limit:
          type: integer
        since:
          type: integer
        node:
          type: string
    NodesQemuFirewallRules:
      type: object
      properties:
        macro:
          type: string
        action:
          type: string
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          type: string
        type:
          type: string
        comment:
          type: string
        dport:
          type: string
        enable:
          type: integer
        ipversion:
          type: integer
        source:
          type: string
        iface:
          type: string
        icmp-type:
          type: string
        sport:
          type: string
    POST-NodesLxcStatusStop-RB:
      type: object
      properties:
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        overrule-shutdown:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    GET-NodesLxcFeature-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        feature:
          type: string
          enum:
          - snapshot
          - clone
          - copy
        node:
          type: string
    ClusterNotificationsEndpoints:
      type: array
      items:
        type: object
        properties: {}
    NodesQemuConfig:
      type: object
      properties:
        balloon:
          type: integer
        tdf:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tags:
          type: string
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        net[n]:
          type: string
        protection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        onboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        audio0:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        numa[n]:
          type: string
        machine:
          type: string
        scsi[n]:
          type: string
        hostpci[n]:
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        efidisk0:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        smbios1:
          maxLength: 512
          type: string
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        smp:
          type: integer
          minimum: 1
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        vcpus:
          type: integer
          minimum: 1
        cpulimit:
          type: number
          maximum: 128
        virtiofs[n]:
          type: string
        sata[n]:
          type: string
        freeze:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          type: string
        ciuser:
          type: string
        virtio[n]:
          type: string
        watchdog:
          type: string
        ciupgrade:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        amd-sev:
          type: string
        boot:
          type: string
        migrate_speed:
          type: integer
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        usb[n]:
          type: string
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        searchdomain:
          type: string
        reboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        acpi:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cpu:
          type: string
        ipconfig[n]:
          type: string
        memory:
          type: string
        localtime:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        shares:
          type: integer
          maximum: 50000
        keephugepages:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        affinity:
          type: string
        vmstatestorage:
          type: string
        autostart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        startup:
          type: string
        hookscript:
          type: string
        cipassword:
          type: string
        kvm:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        description:
          maxLength: 8192
          type: string
        tablet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        hotplug:
          type: string
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        name:
          type: string
        numa:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        sockets:
          type: integer
          minimum: 1
        agent:
          type: string
        spice_enhancements:
          type: string
        tpmstate0:
          type: string
        sshkeys:
          type: string
        cdrom:
          type: string
        migrate_downtime:
          type: number
        args:
          type: string
        cores:
          type: integer
          minimum: 1
        cicustom:
          type: string
        ide[n]:
          type: string
        vga:
          type: string
        unused[n]:
          type: string
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
        ivshmem:
          type: string
        cpuunits:
          minimum: 1
          type: integer
          maximum: 262144
        rng0:
          type: string
        nameserver:
          type: string
    NodesQemuFirewall:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesQemuStatusShutdown-RB:
      type: object
      properties:
        forceStop:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        timeout:
          type: integer
        node:
          type: string
        keepActive:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    ClusterHaResources:
      type: object
      properties:
        group:
          type: string
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        comment:
          type: string
        max_restart:
          type: integer
        max_relocate:
          type: integer
        sid:
          type: string
        digest:
          type: string
        type:
          type: string
    NodesVncwebsocket:
      type: object
      properties:
        port:
          type: string
    GET-NodesStorageContent-RB:
      type: object
      properties:
        content:
          type: string
        storage:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    DELETE-Pools-RB:
      type: object
      properties:
        poolid:
          type: string
    POST-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        node:
          type: string
        comment:
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        cidr:
          type: string
    AccessRoles:
      type: object
      properties:
        Datastore.AllocateSpace:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Realm.Allocate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Mapping.Modify:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Pool.Allocate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Config.CDROM:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Mapping.Use:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Datastore.Audit:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Permissions.Modify:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Datastore.AllocateTemplate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Monitor:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Config.HWType:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Config.Memory:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Sys.Syslog:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Audit:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        SDN.Use:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Mapping.Audit:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Sys.Console:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Config.Disk:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Migrate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Sys.PowerMgmt:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Group.Allocate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Pool.Audit:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Snapshot.Rollback:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Backup:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Datastore.Allocate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        User.Modify:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Clone:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Sys.Audit:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Snapshot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        SDN.Allocate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Allocate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Sys.AccessNetwork:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Console:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Sys.Incoming:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        SDN.Audit:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Config.Options:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Sys.Modify:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Config.Cloudinit:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.PowerMgmt:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Config.CPU:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        Realm.AllocateUser:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        VM.Config.Network:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesQemu:
      type: array
      items:
        type: object
        properties:
          diskread:
            type: integer
          uptime:
            type: integer
          cpus:
            type: number
          maxdisk:
            type: integer
          qmpstatus:
            type: string
          cpu:
            type: number
          tags:
            type: string
          status:
            type: string
            enum:
            - stopped
            - running
          pid:
            type: integer
          vmid:
            minimum: 100
            type: integer
            maximum: 999999999
          lock:
            type: string
          template:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          serial:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          netin:
            type: integer
          mem:
            type: integer
          netout:
            type: integer
          diskwrite:
            type: integer
          maxmem:
            type: integer
          name:
            type: string
          running-qemu:
            type: string
          running-machine:
            type: string
    PUT-ClusterReplication-RB:
      type: object
      properties:
        source:
          type: string
        remove_job:
          type: string
          enum:
          - local
          - full
        comment:
          maxLength: 4096
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        delete:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        schedule:
          maxLength: 128
          type: string
        rate:
          type: number
          minimum: 1
    NodesDisksDirectory:
      type: array
      items:
        type: object
        properties:
          path:
            type: string
          device:
            type: string
          options:
            type: string
          unitfile:
            type: string
          type:
            type: string
    GET-NodesHardwarePci-RB:
      type: object
      properties:
        pci-class-blacklist:
          type: string
        verbose:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    AccessTfa:
      type: object
      properties:
        id:
          type: string
        recovery:
          items:
            description: A recovery entry.
            type: string
          type: array
        challenge:
          type: string
    NodesSdn:
      type: array
      items:
        type: object
        properties: {}
    ClusterSdnVnetsFirewall:
      type: array
      items:
        type: object
        properties: {}
    NodesCephPoolStatus:
      type: object
      properties:
        nodeep-scrub:
          format: int32
          type: integer
          maximum: 1
          title: nodeep-scrub
          minimum: 0
        statistics:
          type: object
          title: Statistics
        pg_num_min:
          type: integer
          title: min. PG Num
          maximum: 32768
        autoscale_status:
          type: object
          title: Autoscale Status
        target_size:
          type: string
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
          title: PG Autoscale Target Size
        nopgchange:
          format: int32
          type: integer
          maximum: 1
          title: nopgchange
          minimum: 0
        min_size:
          minimum: 1
          type: integer
          title: Min Size
          maximum: 7
        application:
          type: string
          title: Application
          enum:
          - rbd
          - cephfs
          - rgw
        nodelete:
          format: int32
          type: integer
          maximum: 1
          title: nodelete
          minimum: 0
        application_list:
          type: array
          items: 
          title: Application
        noscrub:
          format: int32
          type: integer
          maximum: 1
          title: noscrub
          minimum: 0
        crush_rule:
          type: string
          title: Crush Rule Name
        nosizechange:
          format: int32
          type: integer
          maximum: 1
          title: nosizechange
          minimum: 0
        pgp_num:
          type: integer
          title: PGP num
        pg_autoscale_mode:
          type: string
          title: PG Autoscale Mode
          enum:
          - "on"
          - "off"
          - warn
        write_fadvise_dontneed:
          format: int32
          type: integer
          maximum: 1
          title: write_fadvise_dontneed
          minimum: 0
        size:
          minimum: 1
          type: integer
          title: Size
          maximum: 7
        hashpspool:
          format: int32
          type: integer
          maximum: 1
          title: hashpspool
          minimum: 0
        pg_num:
          minimum: 1
          type: integer
          title: PG Num
          maximum: 32768
        id:
          type: integer
          title: ID
        name:
          type: string
          pattern: (?^:^[^:/\s]+$)
          title: Name
        use_gmt_hitset:
          format: int32
          type: integer
          maximum: 1
          title: use_gmt_hitset
          minimum: 0
        fast_read:
          format: int32
          type: integer
          maximum: 1
          title: Fast Read
          minimum: 0
        target_size_ratio:
          type: number
          title: PG Autoscale Target Ratio
    ClusterNotificationsEndpointsSendmail:
      type: object
      properties:
        mailto:
          items:
            format: email-or-username
            type: string
          type: array
        mailto-user:
          items:
            format: pve-userid
            type: string
          type: array
        comment:
          type: string
        author:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        from-address:
          type: string
        digest:
          maxLength: 64
          type: string
        name:
          type: string
    POST-AccessGroups-RB:
      type: object
      properties:
        groupid:
          type: string
        comment:
          type: string
    ClusterSdnVnetsFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    GET-NodesReplicationLog-RB:
      type: object
      properties:
        limit:
          type: integer
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        start:
          type: integer
        node:
          type: string
    NodesCertificatesAcme:
      type: array
      items:
        type: object
        properties: {}
    GET-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        subnet:
          type: string
        vnet:
          type: string
        pending:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        running:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    PUT-Storage-RB:
      type: object
      properties:
        server2:
          type: string
        data-pool:
          type: string
        nowritecache:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        username:
          type: string
        encryption-key:
          type: string
        storage:
          type: string
        sparse:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comstar_tg:
          type: string
        skip-cert-verification:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comstar_hg:
          type: string
        tagged_only:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        saferemove:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        smbversion:
          type: string
          enum:
          - default
          - "2.0"
          - "2.1"
          - "3"
          - "3.0"
          - "3.11"
        krbd:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          maxLength: 4096
          type: string
        fuse:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        content-dirs:
          type: string
        port:
          minimum: 1
          type: integer
          maximum: 65535
        mkdir:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        saferemove_throughput:
          type: string
        nodes:
          type: string
        namespace:
          type: string
        bwlimit:
          type: string
        nocow:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        content:
          type: string
        is_mountpoint:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        domain:
          maxLength: 256
          type: string
        format:
          type: string
          enum:
          - raw
          - qcow2
          - subvol
          - vmdk
        keyring:
          type: string
        subdir:
          type: string
        password:
          maxLength: 256
          type: string
        blocksize:
          type: string
        shared:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        fs-name:
          type: string
        max-protected-backups:
          type: integer
          minimum: -1
        options:
          type: string
        transport:
          type: string
          enum:
          - tcp
          - rdma
          - unix
        master-pubkey:
          type: string
        pool:
          type: string
        mountpoint:
          type: string
        preallocation:
          type: string
          enum:
          - "off"
          - metadata
          - falloc
          - full
        create-subdirs:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        prune-backups:
          type: string
        digest:
          maxLength: 64
          type: string
        server:
          type: string
        lio_tpg:
          type: string
        maxfiles:
          type: integer
        monhost:
          type: string
        create-base-path:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesHardwareUsb:
      type: array
      items:
        type: object
        properties:
          vendid:
            type: string
          usbpath:
            type: string
          devnum:
            type: integer
          product:
            type: string
          manufacturer:
            type: string
          busnum:
            type: integer
          serial:
            type: string
          speed:
            type: string
          level:
            type: integer
          class:
            type: integer
          port:
            type: integer
          prodid:
            type: string
    GET-NodesStorageFilerestoreList-RB:
      type: object
      properties:
        storage:
          type: string
        filepath:
          type: string
        volume:
          type: string
        node:
          type: string
    POST-ClusterNotificationsEndpointsGotify-RB:
      type: object
      properties:
        server:
          type: string
        token:
          type: string
        comment:
          type: string
        name:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    PUT-ClusterFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        nomatch:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        cidr:
          type: string
    PUT-ClusterAcmePlugins-RB:
      type: object
      properties:
        validation-delay:
          type: integer
          maximum: 172800
        nodes:
          type: string
        api:
          type: string
          enum:
          - 1984hosting
          - acmedns
          - acmeproxy
          - active24
          - ad
          - ali
          - alviy
          - anx
          - artfiles
          - arvan
          - aurora
          - autodns
          - aws
          - azion
          - azure
          - bookmyname
          - bunny
          - cf
          - clouddns
          - cloudns
          - cn
          - conoha
          - constellix
          - cpanel
          - curanet
          - cyon
          - da
          - ddnss
          - desec
          - df
          - dgon
          - dnsexit
          - dnshome
          - dnsimple
          - dnsservices
          - doapi
          - domeneshop
          - dp
          - dpi
          - dreamhost
          - duckdns
          - durabledns
          - dyn
          - dynu
          - dynv6
          - easydns
          - edgedns
          - euserv
          - exoscale
          - fornex
          - freedns
          - gandi_livedns
          - gcloud
          - gcore
          - gd
          - geoscaling
          - googledomains
          - he
          - hetzner
          - hexonet
          - hostingde
          - huaweicloud
          - infoblox
          - infomaniak
          - internetbs
          - inwx
          - ionos
          - ionos_cloud
          - ipv64
          - ispconfig
          - jd
          - joker
          - kappernet
          - kas
          - kinghost
          - knot
          - la
          - leaseweb
          - lexicon
          - limacity
          - linode
          - linode_v4
          - loopia
          - lua
          - maradns
          - me
          - miab
          - misaka
          - myapi
          - mydevil
          - mydnsjp
          - mythic_beasts
          - namecheap
          - namecom
          - namesilo
          - nanelo
          - nederhost
          - neodigit
          - netcup
          - netlify
          - nic
          - njalla
          - nm
          - nsd
          - nsone
          - nsupdate
          - nw
          - oci
          - omglol
          - one
          - online
          - openprovider
          - openstack
          - opnsense
          - ovh
          - pdns
          - pleskxml
          - pointhq
          - porkbun
          - rackcorp
          - rackspace
          - rage4
          - rcode0
          - regru
          - scaleway
          - schlundtech
          - selectel
          - selfhost
          - servercow
          - simply
          - technitium
          - tele3
          - tencent
          - timeweb
          - transip
          - udr
          - ultra
          - unoeuro
          - variomedia
          - veesp
          - vercel
          - vscale
          - vultr
          - websupport
          - west_cn
          - world4you
          - yandex360
          - yc
          - zilore
          - zone
          - zoneedit
          - zonomi
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          maxLength: 4096
          type: string
        id:
          type: string
        digest:
          maxLength: 64
          type: string
        data:
          type: string
    NodesCephPool-GET:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        node:
          type: string
        comment:
          type: string
        cidr:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        nomatch:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
    GET-NodesDisksSmart-RB:
      type: object
      properties:
        healthonly:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
        node:
          type: string
    NodesCertificates:
      type: array
      items:
        type: object
        properties: {}
    ClusterSdnDns:
      type: array
      items:
        type: object
        properties:
          dns:
            type: string
          type:
            type: string
    GET-NodesQemuConfig-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        current:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        snapshot:
          maxLength: 40
          type: string
        node:
          type: string
    POST-NodesCephInit-RB:
      type: object
      properties:
        min_size:
          minimum: 1
          type: integer
          maximum: 7
        cluster-network:
          maxLength: 128
          type: string
        pg_bits:
          minimum: 6
          type: integer
          maximum: 14
        network:
          maxLength: 128
          type: string
        size:
          minimum: 1
          type: integer
          maximum: 7
        node:
          type: string
        disable_cephx:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    GET-ClusterAcmePlugins-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - dns
          - standalone
    GET-ClusterAcmeMeta-RB:
      type: object
      properties:
        directory:
          pattern: ^https?://.*
          type: string
    POST-NodesLxcRemotemigrate-RB:
      type: object
      properties:
        target-bridge:
          type: string
        restart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        target-storage:
          type: string
        target-vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        online:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        bwlimit:
          type: number
          minimum: "0"
        target-endpoint:
          type: string
        delete:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        timeout:
          type: integer
        node:
          type: string
    NodesScanZfs:
      type: array
      items:
        type: object
        properties:
          pool:
            type: string
    PUT-NodesDisksWipedisk-RB:
      type: object
      properties:
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
        node:
          type: string
    POST-NodesExecute-RB:
      type: object
      properties:
        commands:
          type: string
        node:
          type: string
    AccessTfa-GET:
      type: object
      properties:
        created:
          type: integer
        description:
          type: string
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        id:
          type: string
        type:
          type: string
          enum:
          - totp
          - u2f
          - webauthn
          - recovery
          - yubico
    GET-NodesQemuRrd-RB:
      type: object
      properties:
        ds:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    PUT-ClusterFirewallOptions-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        ebtables:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        enable:
          type: integer
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        delete:
          type: string
        log_ratelimit:
          type: string
    POST-ClusterNotificationsEndpointsSendmail-RB:
      type: object
      properties:
        mailto:
          items:
            format: email-or-username
            type: string
          type: array
        mailto-user:
          items:
            format: pve-userid
            type: string
          type: array
        comment:
          type: string
        author:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        from-address:
          type: string
        name:
          type: string
    PUT-NodesQemuConfig-RB:
      type: object
      properties:
        balloon:
          type: integer
        tdf:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tags:
          type: string
        spice_enhancements:
          type: string
        net[n]:
          type: string
        protection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        onboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        audio0:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        numa[n]:
          type: string
        machine:
          type: string
        scsi[n]:
          type: string
        hostpci[n]:
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        efidisk0:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        smbios1:
          maxLength: 512
          type: string
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        smp:
          type: integer
          minimum: 1
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        vcpus:
          type: integer
          minimum: 1
        cpulimit:
          type: number
          maximum: 128
        virtiofs[n]:
          type: string
        sata[n]:
          type: string
        freeze:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 40
          type: string
        ciuser:
          type: string
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        virtio[n]:
          type: string
        watchdog:
          type: string
        node:
          type: string
        amd-sev:
          type: string
        boot:
          type: string
        migrate_speed:
          type: integer
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        usb[n]:
          type: string
        revert:
          type: string
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        searchdomain:
          type: string
        reboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        acpi:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cpu:
          type: string
        ipconfig[n]:
          type: string
        memory:
          type: string
        localtime:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        rng0:
          type: string
        shares:
          type: integer
          maximum: 50000
        keephugepages:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        affinity:
          type: string
        vmstatestorage:
          type: string
        autostart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        startup:
          type: string
        hookscript:
          type: string
        cipassword:
          type: string
        kvm:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        description:
          maxLength: 8192
          type: string
        tablet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        hotplug:
          type: string
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        name:
          type: string
        numa:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        sockets:
          type: integer
          minimum: 1
        agent:
          type: string
        ciupgrade:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tpmstate0:
          type: string
        sshkeys:
          type: string
        cdrom:
          type: string
        migrate_downtime:
          type: number
        args:
          type: string
        cores:
          type: integer
          minimum: 1
        cicustom:
          type: string
        ide[n]:
          type: string
        vga:
          type: string
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        unused[n]:
          type: string
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
        ivshmem:
          type: string
        cpuunits:
          minimum: 1
          type: integer
          maximum: 262144
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        delete:
          type: string
        nameserver:
          type: string
    GET-AccessUsers-RB:
      type: object
      properties:
        full:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        enabled:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    POST-NodesQemuVncproxy-RB:
      type: object
      properties:
        generate-password:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        websocket:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-ClusterHaResourcesRelocate-RB:
      type: object
      properties:
        sid:
          type: string
        node:
          type: string
    NodesHardwarePciMdev:
      type: array
      items:
        type: object
        properties:
          available:
            type: integer
          type:
            type: string
          name:
            type: string
          description:
            type: string
    GET-NodesLxcFirewallLog-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        start:
          type: integer
        until:
          type: integer
        limit:
          type: integer
        since:
          type: integer
        node:
          type: string
    NodesQemuMigrate:
      type: object
      properties:
        running:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        not_allowed_nodes:
          properties:
            unavailable_storages:
              description: A list of not available storages.
              items:
                description: A storage
                type: string
              optional: 1
              type: array
          type: object
        local_resources:
          items:
            description: A local resource
            type: string
          type: array
        local_disks:
          items:
            properties:
              cdrom:
                description: True if the disk is a cdrom.
                type: boolean
              is_unused:
                description: True if the disk is unused.
                type: boolean
              size:
                description: The size of the disk in bytes.
                type: integer
              volid:
                description: The volid of the disk.
                type: string
            type: object
          type: array
        allowed_nodes:
          items:
            description: An allowed node
            type: string
          type: array
        mapped-resources:
          items:
            description: A mapped resource
            type: string
          type: array
        mapped-resource-info:
          type: object
    POST-NodesQemuAgentFilewrite-RB:
      type: object
      properties:
        encode:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        content:
          maxLength: 61440
          type: string
        file:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    ClusterFirewallIpset:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            maxLength: 64
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
    POST-ClusterNotificationsMatchers-RB:
      type: object
      properties:
        match-severity:
          items:
            type: string
          type: array
        comment:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        match-calendar:
          items:
            type: string
          type: array
        match-field:
          items:
            type: string
          type: array
        invert-match:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        target:
          items:
            format: pve-configid
            type: string
          type: array
        name:
          type: string
        mode:
          type: string
          enum:
          - all
          - any
    POST-ClusterMetricsServer-RB:
      type: object
      properties:
        influxdbproto:
          type: string
          enum:
          - udp
          - http
          - https
        proto:
          type: string
          enum:
          - udp
          - tcp
        timeout:
          type: integer
        mtu:
          minimum: 512
          type: integer
          maximum: 65536
        path:
          type: string
        api-path-prefix:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        verify-certificate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        port:
          minimum: 1
          type: integer
          maximum: 65536
        organization:
          type: string
        server:
          type: string
        bucket:
          type: string
        id:
          type: string
        max-body-size:
          type: integer
          minimum: 1
        type:
          type: string
          enum:
          - graphite
          - influxdb
        token:
          type: string
    NodesCertificatesInfo:
      type: array
      items:
        type: object
        properties:
          notafter:
            type: integer
          issuer:
            type: string
          public-key-type:
            type: string
          pem:
            type: string
          filename:
            type: string
          san:
            items:
              type: string
            type: array
          notbefore:
            type: integer
          fingerprint:
            pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
            type: string
          subject:
            type: string
          public-key-bits:
            type: integer
    GET-NodesStorageFilerestoreDownload-RB:
      type: object
      properties:
        storage:
          type: string
        filepath:
          type: string
        volume:
          type: string
        tar:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    DELETE-NodesLxcFirewallRules-RB:
      type: object
      properties:
        pos:
          type: integer
        digest:
          maxLength: 64
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-NodesStartall-RB:
      type: object
      properties:
        vms:
          type: string
        node:
          type: string
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    PUT-ClusterFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        rename:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        cidr:
          type: string
    NodesDisksZfs:
      type: object
      properties:
        action:
          type: string
        state:
          type: string
        children:
          items:
            properties:
              cksum:
                optional: 1
                type: number
              msg:
                description: An optional message about the vdev.
                type: string
              name:
                description: The name of the vdev or section.
                type: string
              read:
                optional: 1
                type: number
              state:
                description: The state of the vdev.
                optional: 1
                type: string
              write:
                optional: 1
                type: number
            type: object
          type: array
        status:
          type: string
        errors:
          type: string
        name:
          type: string
        scan:
          type: string
    GET-NodesQemuVncwebsocket-RB:
      type: object
      properties:
        port:
          minimum: 5900
          type: integer
          maximum: 5999
        vncticket:
          maxLength: 512
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    PUT-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        dhcp-dns-server:
          type: string
        gateway:
          type: string
        vnet:
          type: string
        dhcp-range:
          items:
            format: pve-sdn-dhcp-range
            type: string
          type: array
        subnet:
          type: string
        dnszoneprefix:
          type: string
        digest:
          maxLength: 64
          type: string
        snat:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesLxcFirewallAliases:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
    POST-ClusterConfigJoin-RB:
      type: object
      properties:
        password:
          maxLength: 128
          type: string
        nodeid:
          type: integer
          minimum: 1
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        hostname:
          type: string
        votes:
          type: integer
        link[n]:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
    DELETE-ClusterFirewallIpset-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        cidr:
          type: string
    ClusterLog:
      type: array
      items:
        type: object
        properties: {}
    ClusterNotificationsEndpointsWebhook:
      type: object
      properties:
        header:
          items:
            type: string
          type: array
        body:
          type: string
        comment:
          type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        secret:
          items:
            type: string
          type: array
        url:
          type: string
        digest:
          maxLength: 64
          type: string
        name:
          type: string
    POST-NodesLxcStatusStart-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        debug:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    ClusterCephMetadata:
      type: object
      properties:
        mds:
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addr:
                  description: Bind addresses and ports.
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
          type: object
        osd:
          items: 
          type: array
        mgr:
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addr:
                  description: Bind address
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
          type: object
        mon:
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addrs:
                  description: Bind addresses and ports.
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
          type: object
        node:
          properties:
            '{node}':
              properties:
                buildcommit:
                  description: GIT commit used for the build.
                  type: string
                version:
                  description: Version info.
                  properties:
                    parts:
                      description: major, minor & patch
                      type: array
                    str:
                      description: Version as single string.
                      type: string
                  type: object
              type: object
          type: object
    NodesReplication-GET:
      type: array
      items:
        type: object
        properties: {}
    ClusterAcme:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesSubscription-RB:
      type: object
      properties:
        key:
          type: string
          maxLength: 32
          pattern: '\s*pve([1248])([cbsp])-[0-9a-f]{10}\s*'
        node:
          type: string
    PUT-AccessAcl-RB:
      type: object
      properties:
        path:
          type: string
        propagate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        users:
          type: string
        roles:
          type: string
        groups:
          type: string
        delete:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tokens:
          type: string
    POST-NodesLxcVncproxy-RB:
      type: object
      properties:
        websocket:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        width:
          minimum: 16
          type: integer
          maximum: 4096
        height:
          minimum: 16
          type: integer
          maximum: 2160
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    ClusterFirewallAliases:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
    ClusterMetricsExport:
      type: object
      properties:
        data:
          items:
            additionalProperties: 0
            properties:
              id:
                description: Unique identifier for this metric object, for instance 'node/<nodename>' or 'qemu/<vmid>'.
                type: string
              metric:
                description: Name of the metric.
                type: string
              timestamp:
                description: Time at which this metric was observed
                type: integer
              type:
                description: Type of the metric.
                enum:
                - gauge
                - counter
                - derive
                type: string
              value:
                description: Metric value.
                type: number
            type: object
          type: array
    NodesQemuCloudinit:
      type: array
      items:
        type: object
        properties:
          value:
            type: string
          key:
            type: string
          delete:
            type: integer
            maximum: 1
          pending:
            type: string
    POST-ClusterNotificationsEndpointsSmtp-RB:
      type: object
      properties:
        mailto:
          items:
            format: email-or-username
            type: string
          type: array
        mailto-user:
          items:
            format: pve-userid
            type: string
          type: array
        comment:
          type: string
        author:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        server:
          type: string
        from-address:
          type: string
        password:
          type: string
        username:
          type: string
        port:
          type: integer
        name:
          type: string
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
    POST-NodesMigrateall-RB:
      type: object
      properties:
        vms:
          type: string
        maxworkers:
          type: integer
          minimum: 1
        target:
          type: string
        with-local-disks:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    GET-Pools-RB:
      type: object
      properties:
        poolid:
          type: string
        type:
          type: string
          enum:
          - qemu
          - lxc
          - storage
    NodesLxcFirewall:
      type: array
      items:
        type: object
        properties: {}
    NodesNetwork:
      type: object
      properties:
        type:
          type: string
        method:
          type: string
    GET-NodesQemu-RB:
      type: object
      properties:
        full:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    ClusterConfigNodes:
      type: object
      properties:
        corosync_conf:
          type: string
        corosync_authkey:
          type: string
        warnings:
          items:
            type: string
          type: array
    POST-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        node:
          type: string
        comment:
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        cidr:
          type: string
    NodesNetwork-GET:
      type: array
      items:
        type: object
        properties:
          bridge_vlan_aware:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          bond_mode:
            type: string
            enum:
            - balance-rr
            - active-backup
            - balance-xor
            - broadcast
            - 802.3ad
            - balance-tlb
            - balance-alb
            - balance-slb
            - lacp-balance-slb
            - lacp-balance-tcp
          vxlan-local-tunnelip:
            type: string
          bond-primary:
            type: string
          ovs_bridge:
            type: string
          address:
            type: string
          vlan-protocol:
            type: string
            enum:
            - 802.1ad
            - 802.1q
          ovs_ports:
            type: string
          vxlan-svcnodeip:
            type: string
          bridge-learning:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          netmask:
            type: string
          autostart:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          bridge-arp-nd-suppress:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          vlan-raw-device:
            type: string
          bridge_vids:
            type: string
          iface:
            type: string
            maxLength: 20
            minLength: 2
          ovs_options:
            maxLength: 1024
            type: string
          bond_xmit_hash_policy:
            type: string
            enum:
            - layer2
            - layer2+3
            - layer3+4
          options6:
            items:
              description: An interface property.
              type: string
            type: array
          type:
            type: string
            enum:
            - bridge
            - bond
            - eth
            - alias
            - vlan
            - OVSBridge
            - OVSBond
            - OVSPort
            - OVSIntPort
            - vnet
            - unknown
          gateway:
            type: string
          vxlan-id:
            type: integer
          cidr:
            type: string
          link-type:
            type: string
          families:
            items:
              description: A network family.
              enum:
              - inet
              - inet6
              type: string
            type: array
          method:
            type: string
            enum:
            - loopback
            - dhcp
            - manual
            - static
            - auto
          bridge-multicast-flood:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          bridge-access:
            type: integer
          uplink-id:
            type: string
          vxlan-physdev:
            type: string
          slaves:
            type: string
          exists:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          cidr6:
            type: string
          ovs_bonds:
            type: string
          mtu:
            minimum: 1280
            type: integer
            maximum: 65520
          bridge-unicast-flood:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          method6:
            type: string
            enum:
            - loopback
            - dhcp
            - manual
            - static
            - auto
          options:
            items:
              description: An interface property.
              type: string
            type: array
          comments6:
            type: string
          comments:
            type: string
          ovs_tag:
            minimum: 1
            type: integer
            maximum: 4094
          address6:
            type: string
          vlan-id:
            minimum: 1
            type: integer
            maximum: 4094
          active:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          netmask6:
            type: integer
            maximum: 128
          bridge_ports:
            type: string
          gateway6:
            type: string
          priority:
            type: integer
    GET-NodesCephOsdLvinfo-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - block
          - db
          - wal
        osdid:
          type: integer
        node:
          type: string
    ClusterCephFlags-GET:
      type: integer
      minimum: 0
      maximum: 1
      description: 
    POST-NodesCephFs-RB:
      type: object
      properties:
        add-storage:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          pattern: (?^:^[^:/\s]+$)
          type: string
        pg_num:
          minimum: 8
          type: integer
          maximum: 32768
        node:
          type: string
    NodesHardware:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
    ClusterAcmeAccount-GET:
      type: array
      items:
        type: object
        properties: {}
    NodesDisksSmart:
      type: object
      properties:
        health:
          type: string
        type:
          type: string
        attributes:
          items: 
          type: array
        text:
          type: string
    POST-NodesCephMds-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
          pattern: '[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?'
        hotstandby:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    GET-NodesVzdumpDefaults-RB:
      type: object
      properties:
        storage:
          type: string
        node:
          type: string
    PUT-NodesQemuSendkey-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        key:
          type: string
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    ClusterMetrics:
      type: array
      items:
        type: object
        properties: {}
    GET-ClusterMappingPci-RB:
      type: object
      properties:
        check-node:
          type: string
    AccessUsersToken:
      type: object
      properties:
        expire:
          type: integer
        privsep:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
    DELETE-NodesFirewallRules-RB:
      type: object
      properties:
        pos:
          type: integer
        digest:
          maxLength: 64
          type: string
        node:
          type: string
    GET-ClusterSdnIpams-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - netbox
          - phpipam
          - pve
    NodesLxcFirewallLog:
      type: array
      items:
        type: object
        properties:
          "n":
            type: integer
          t:
            type: string
    NodesTasks-GET:
      type: array
      items:
        type: object
        properties: {}
    ClusterHaGroups:
      type: array
      items:
        type: object
        properties:
          group:
            type: string
    PUT-NodesDns-RB:
      type: object
      properties:
        dns2:
          type: string
        dns1:
          type: string
        search:
          type: string
        node:
          type: string
        dns3:
          type: string
    ClusterAcmePlugins:
      type: array
      items:
        type: object
        properties:
          plugin:
            type: string
    GET-ClusterHaResources-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - ct
          - vm
    POST-Pools-RB:
      type: object
      properties:
        poolid:
          type: string
        comment:
          type: string
    NodesAptRepositories:
      type: object
      properties:
        infos:
          items:
            properties:
              index:
                description: Index of the associated repository within the file.
                type: string
              kind:
                description: Kind of the information (e.g. warning).
                type: string
              message:
                description: Information message.
                type: string
              path:
                description: Path to the associated file.
                type: string
              property:
                description: Property from which the info originates.
                optional: 1
                type: string
            type: object
          type: array
        errors:
          items:
            properties:
              error:
                description: The error message
                type: string
              path:
                description: Path to the problematic file.
                type: string
            type: object
          type: array
        digest:
          type: string
        files:
          items:
            properties:
              digest:
                description: Digest of the file as bytes.
                items:
                  type: integer
                type: array
              file-type:
                description: Format of the file.
                enum:
                - list
                - sources
                type: string
              path:
                description: Path to the problematic file.
                type: string
              repositories:
                description: The parsed repositories.
                items:
                  properties:
                    Comment:
                      description: Associated comment
                      optional: 1
                      type: string
                    Components:
                      description: List of repository components
                      items:
                        type: string
                      optional: 1
                      type: array
                    Enabled:
                      description: Whether the repository is enabled or not
                      type: boolean
                    FileType:
                      description: Format of the defining file.
                      enum:
                      - list
                      - sources
                      type: string
                    Options:
                      description: Additional options
                      items:
                        properties:
                          Key:
                            type: string
                          Values:
                            items:
                              type: string
                            type: array
                        type: object
                      optional: 1
                      type: array
                    Suites:
                      description: List of package distribuitions
                      items:
                        type: string
                      type: array
                    Types:
                      description: List of package types.
                      items:
                        enum:
                        - deb
                        - deb-src
                        type: string
                      type: array
                    URIs:
                      description: List of repository URIs.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            type: object
          type: array
        standard-repos:
          items:
            properties:
              handle:
                description: Handle to identify the repository.
                type: string
              name:
                description: Full name of the repository.
                type: string
              status:
                description: Indicating enabled/disabled status, if the repository is configured.
                optional: 1
                type: boolean
            type: object
          type: array
    GET-NodesScanCifs-RB:
      type: object
      properties:
        server:
          type: string
        username:
          type: string
        password:
          type: string
        domain:
          type: string
        node:
          type: string
    NodesCephCfg:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesQemuStatusResume-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        nocheck:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    NodesLxcFirewallIpset:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            maxLength: 64
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
    POST-ClusterSdnControllers-RB:
      type: object
      properties:
        asn:
          type: integer
          maximum: 4294967296
        peers:
          type: string
        loopback:
          type: string
        bgp-multipath-as-path-relax:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        type:
          type: string
          enum:
          - bgp
          - evpn
          - faucet
          - isis
        ebgp-multihop:
          type: integer
        isis-domain:
          type: string
        ebgp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        controller:
          type: string
        isis-net:
          type: string
        isis-ifaces:
          type: string
        node:
          type: string
    POST-NodesStatus-RB:
      type: object
      properties:
        command:
          type: string
          enum:
          - reboot
          - shutdown
        node:
          type: string
    POST-NodesQemuAgentExec-RB:
      type: object
      properties:
        command:
          items:
            description: A single part of the program + arguments.
            format: string
          type: array
        input-data:
          maxLength: 65536
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    NodesLxcVncwebsocket:
      type: object
      properties:
        port:
          type: string
    POST-NodesQemuSnapshot-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        description:
          type: string
        vmstate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    NodesHosts:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        data:
          type: string
    ClusterNotificationsEndpointsGotify-GET:
      type: array
      items:
        type: object
        properties:
          server:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          comment:
            type: string
          name:
            type: string
          disable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    POST-NodesLxcMovevolume-RB:
      type: object
      properties:
        storage:
          type: string
        target-volume:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        target-vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        volume:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        bwlimit:
          type: number
          minimum: "0"
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        delete:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 40
          type: string
        target-digest:
          maxLength: 40
          type: string
        node:
          type: string
    POST-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        dhcp-range:
          items:
            format: pve-sdn-dhcp-range
            type: string
          type: array
        dhcp-dns-server:
          type: string
        gateway:
          type: string
        snat:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        subnet:
          type: string
        dnszoneprefix:
          type: string
        type:
          type: string
          enum:
          - subnet
        vnet:
          type: string
    NodesScanGlusterfs:
      type: array
      items:
        type: object
        properties:
          volname:
            type: string
    POST-AccessTfa-RB:
      type: object
      properties:
        totp:
          type: string
        password:
          type: string
          maxLength: 64
          minLength: 5
        value:
          type: string
        challenge:
          type: string
        description:
          maxLength: 255
          type: string
        userid:
          maxLength: 64
          type: string
        type:
          type: string
          enum:
          - totp
          - u2f
          - webauthn
          - recovery
          - yubico
    GET-NodesFirewallLog-RB:
      type: object
      properties:
        limit:
          type: integer
        start:
          type: integer
        since:
          type: integer
        until:
          type: integer
        node:
          type: string
    GET-NodesStoragePrunebackups-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - qemu
          - lxc
        storage:
          type: string
        prune-backups:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-ClusterAcmePlugins-RB:
      type: object
      properties:
        validation-delay:
          type: integer
          maximum: 172800
        nodes:
          type: string
        api:
          type: string
          enum:
          - 1984hosting
          - acmedns
          - acmeproxy
          - active24
          - ad
          - ali
          - alviy
          - anx
          - artfiles
          - arvan
          - aurora
          - autodns
          - aws
          - azion
          - azure
          - bookmyname
          - bunny
          - cf
          - clouddns
          - cloudns
          - cn
          - conoha
          - constellix
          - cpanel
          - curanet
          - cyon
          - da
          - ddnss
          - desec
          - df
          - dgon
          - dnsexit
          - dnshome
          - dnsimple
          - dnsservices
          - doapi
          - domeneshop
          - dp
          - dpi
          - dreamhost
          - duckdns
          - durabledns
          - dyn
          - dynu
          - dynv6
          - easydns
          - edgedns
          - euserv
          - exoscale
          - fornex
          - freedns
          - gandi_livedns
          - gcloud
          - gcore
          - gd
          - geoscaling
          - googledomains
          - he
          - hetzner
          - hexonet
          - hostingde
          - huaweicloud
          - infoblox
          - infomaniak
          - internetbs
          - inwx
          - ionos
          - ionos_cloud
          - ipv64
          - ispconfig
          - jd
          - joker
          - kappernet
          - kas
          - kinghost
          - knot
          - la
          - leaseweb
          - lexicon
          - limacity
          - linode
          - linode_v4
          - loopia
          - lua
          - maradns
          - me
          - miab
          - misaka
          - myapi
          - mydevil
          - mydnsjp
          - mythic_beasts
          - namecheap
          - namecom
          - namesilo
          - nanelo
          - nederhost
          - neodigit
          - netcup
          - netlify
          - nic
          - njalla
          - nm
          - nsd
          - nsone
          - nsupdate
          - nw
          - oci
          - omglol
          - one
          - online
          - openprovider
          - openstack
          - opnsense
          - ovh
          - pdns
          - pleskxml
          - pointhq
          - porkbun
          - rackcorp
          - rackspace
          - rage4
          - rcode0
          - regru
          - scaleway
          - schlundtech
          - selectel
          - selfhost
          - servercow
          - simply
          - technitium
          - tele3
          - tencent
          - timeweb
          - transip
          - udr
          - ultra
          - unoeuro
          - variomedia
          - veesp
          - vercel
          - vscale
          - vultr
          - websupport
          - west_cn
          - world4you
          - yandex360
          - yc
          - zilore
          - zone
          - zoneedit
          - zonomi
        id:
          type: string
        data:
          type: string
        type:
          type: string
          enum:
          - dns
          - standalone
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    PUT-NodesStorageContent-RB:
      type: object
      properties:
        protected:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        volume:
          type: string
        storage:
          type: string
        notes:
          type: string
        node:
          type: string
    GET-NodesJournal-RB:
      type: object
      properties:
        lastentries:
          type: integer
        endcursor:
          type: string
        startcursor:
          type: string
        until:
          type: integer
        since:
          type: integer
        node:
          type: string
    POST-NodesNetwork-RB:
      type: object
      properties:
        bridge_vlan_aware:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        bond_mode:
          type: string
          enum:
          - balance-rr
          - active-backup
          - balance-xor
          - broadcast
          - 802.3ad
          - balance-tlb
          - balance-alb
          - balance-slb
          - lacp-balance-slb
          - lacp-balance-tcp
        bond-primary:
          type: string
        gateway6:
          type: string
        address:
          type: string
        ovs_ports:
          type: string
        ovs_bridge:
          type: string
        netmask:
          type: string
        autostart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
        vlan-raw-device:
          type: string
        bridge_vids:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        bond_xmit_hash_policy:
          type: string
          enum:
          - layer2
          - layer2+3
          - layer3+4
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - vnet
          - unknown
        gateway:
          type: string
        cidr:
          type: string
        slaves:
          type: string
        ovs_bonds:
          type: string
        mtu:
          minimum: 1280
          type: integer
          maximum: 65520
        comments6:
          type: string
        comments:
          type: string
        ovs_tag:
          minimum: 1
          type: integer
          maximum: 4094
        address6:
          type: string
        vlan-id:
          minimum: 1
          type: integer
          maximum: 4094
        cidr6:
          type: string
        netmask6:
          type: integer
          maximum: 128
        bridge_ports:
          type: string
        ovs_options:
          maxLength: 1024
          type: string
    PUT-ClusterNotificationsEndpointsWebhook-RB:
      type: object
      properties:
        header:
          items:
            type: string
          type: array
        body:
          type: string
        comment:
          type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        secret:
          items:
            type: string
          type: array
        url:
          type: string
        delete:
          items:
            format: pve-configid
            type: string
          type: array
        digest:
          maxLength: 64
          type: string
        name:
          type: string
    POST-ClusterMappingDir-RB:
      type: object
      properties:
        id:
          type: string
        description:
          maxLength: 4096
          type: string
        map:
          items:
            format:
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: Absolute directory path that should be shared with the guest.
                format: pve-storage-path-in-property-string
                type: string
            type: string
          type: array
    NodesSyslog:
      type: array
      items:
        type: object
        properties:
          "n":
            type: integer
          t:
            type: string
    NodesCephMon:
      type: array
      items:
        type: object
        properties:
          ceph_version:
            type: string
          direxists:
            type: string
          host:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          state:
            type: string
          rank:
            type: integer
          ceph_version_short:
            type: string
          quorum:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          addr:
            type: string
          name:
            type: string
          service:
            type: integer
    NodesTasksStatus:
      type: object
      properties:
        exitstatus:
          type: string
        type:
          type: string
        user:
          type: string
        starttime:
          type: integer
        id:
          type: string
        status:
          type: string
          enum:
          - running
          - stopped
        pstart:
          type: integer
        pid:
          type: integer
        node:
          type: string
        upid:
          type: string
    NodesScanIscsi:
      type: array
      items:
        type: object
        properties:
          target:
            type: string
          portal:
            type: string
    Pools:
      type: object
      properties:
        members:
          items:
            additionalProperties: 1
            properties:
              id:
                type: string
              node:
                type: string
              storage:
                optional: 1
                type: string
              type:
                enum:
                - qemu
                - lxc
                - openvz
                - storage
                type: string
              vmid:
                optional: 1
                type: integer
            type: object
          type: array
        comment:
          type: string
    ClusterFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    POST-ClusterMappingUsb-RB:
      type: object
      properties:
        id:
          type: string
        description:
          maxLength: 4096
          type: string
        map:
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. If a USB path is given, it is only used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the usb device.
                optional: 1
                pattern: (?^:^(\d+)\-(\d+(\.\d+)*)$)
                type: string
            type: string
          type: array
    DELETE-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        cidr:
          type: string
    ClusterNextid:
      desciption: 
      type: integer
    PUT-ClusterSdnControllers-RB:
      type: object
      properties:
        node:
          type: string
        peers:
          type: string
        isis-domain:
          type: string
        loopback:
          type: string
        bgp-multipath-as-path-relax:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        isis-net:
          type: string
        isis-ifaces:
          type: string
        ebgp-multihop:
          type: integer
        digest:
          maxLength: 64
          type: string
        delete:
          maxLength: 4096
          type: string
        controller:
          type: string
        ebgp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        asn:
          type: integer
          maximum: 4294967296
    ClusterNotificationsMatchers:
      type: object
      properties:
        match-severity:
          items:
            type: string
          type: array
        invert-match:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        match-calendar:
          items:
            type: string
          type: array
        match-field:
          items:
            type: string
          type: array
        digest:
          maxLength: 64
          type: string
        target:
          items:
            format: pve-configid
            type: string
          type: array
        name:
          type: string
        mode:
          type: string
          enum:
          - all
          - any
    ClusterAcmeChallengeschema:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          type:
            type: string
          name:
            type: string
          schema:
            type: object
    POST-NodesDisksInitgpt-RB:
      type: object
      properties:
        uuid:
          type: string
          maxLength: 36
          pattern: '[a-fA-F0-9\-]+'
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
        node:
          type: string
    GET-NodesRrddata-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
        node:
          type: string
    NodesTasks:
      type: array
      items:
        type: object
        properties:
          starttime:
            type: integer
            title: Starttime
          type:
            type: string
            title: Type
          upid:
            type: string
            title: UPID
          pid:
            type: integer
            title: PID
          pstart:
            type: integer
          status:
            type: string
            title: Status
          user:
            type: string
            title: User
          id:
            type: string
            title: ID
          node:
            type: string
            title: Node
          endtime:
            type: integer
            title: Endtime
    PUT-ClusterNotificationsEndpointsSendmail-RB:
      type: object
      properties:
        mailto:
          items:
            format: email-or-username
            type: string
          type: array
        mailto-user:
          items:
            format: pve-userid
            type: string
          type: array
        comment:
          type: string
        author:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        from-address:
          type: string
        delete:
          items:
            format: pve-configid
            type: string
          type: array
        digest:
          maxLength: 64
          type: string
        name:
          type: string
    POST-NodesSuspendall-RB:
      type: object
      properties:
        vms:
          type: string
        node:
          type: string
    GET-ClusterConfigJoin-RB:
      type: object
      properties:
        node:
          type: string
    POST-NodesSpiceshell-RB:
      type: object
      properties:
        proxy:
          type: string
        cmd-opts:
          type: string
        node:
          type: string
        cmd:
          type: string
          enum:
          - ceph_install
          - upgrade
          - login
    NodesQemuFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    POST-AccessDomainsSync-RB:
      type: object
      properties:
        realm:
          maxLength: 32
          type: string
        full:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        enable-new:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        purge:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        dry-run:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    ClusterConfigJoin:
      type: object
      properties:
        config_digest:
          type: string
        nodelist:
          items:
            additionalProperties: 1
            properties:
              name:
                description: The cluster node name.
                format: pve-node
                type: string
              nodeid:
                description: Node id for this node.
                minimum: 1
                optional: 1
                type: integer
              pve_addr:
                format: ip
                type: string
              pve_fp:
                description: Certificate SHA 256 fingerprint.
                pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                type: string
              quorum_votes:
                minimum: 0
                type: integer
              ring0_addr:
                description: Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)
                format:
                  address:
                    default_key: 1
                    description: Hostname (or IP) of this corosync link address.
                    format: address
                    format_description: IP
                    type: string
                  priority:
                    default: 0
                    description: The priority for the link when knet is used in 'passive' mode (default). Lower value means higher priority. Only valid for cluster create, ignored on node add.
                    maximum: 255
                    minimum: 0
                    optional: 1
                    type: integer
                optional: 1
                type: string
            type: object
          type: array
        preferred_node:
          type: string
        totem:
          type: object
    Cluster:
      type: array
      items:
        type: object
        properties: {}
    NodesScanPbs:
      type: array
      items:
        type: object
        properties:
          store:
            type: string
          comment:
            type: string
    DELETE-NodesQemu-RB:
      type: object
      properties:
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        purge:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        destroy-unreferenced-disks:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    NodesStatus:
      type: object
      properties:
        rootfs:
          properties:
            avail:
              description: The available bytes in the root filesystem.
              type: integer
            free:
              description: The free bytes on the root filesystem.
              type: integer
            total:
              description: The total size of the root filesystem in bytes.
              type: integer
            used:
              description: The used bytes in the root filesystem.
              type: integer
          type: object
        cpu:
          type: number
        boot-info:
          properties:
            mode:
              description: Through which firmware the system got booted.
              enum:
              - efi
              - legacy-bios
              type: string
            secureboot:
              description: System is booted in secure mode, only applicable for the "efi" mode.
              optional: 1
              type: boolean
          type: object
        loadavg:
          items:
            description: The value of the load.
            type: string
          type: array
        memory:
          properties:
            free:
              description: The free memory in bytes.
              type: integer
            total:
              description: The total memory in bytes.
              type: integer
            used:
              description: The used memory in bytes.
              type: integer
          type: object
        current-kernel:
          properties:
            machine:
              description: Hardware (architecture) type
              type: string
            release:
              description: OS kernel release (e.g., "6.8.0")
              type: string
            sysname:
              description: OS kernel name (e.g., "Linux")
              type: string
            version:
              description: OS kernel version with build info
              type: string
          type: object
        pveversion:
          type: string
        cpuinfo:
          properties:
            cores:
              description: The number of physical cores of the CPU.
              type: integer
            cpus:
              description: The number of logical threads of the CPU.
              type: integer
            model:
              description: The CPU model
              type: string
            sockets:
              description: The number of logical threads of the CPU.
              type: integer
          type: object
    GET-NodesScanLvmthin-RB:
      type: object
      properties:
        vg:
          type: string
          maxLength: 100
          pattern: '[a-zA-Z0-9\.\+\_][a-zA-Z0-9\.\+\_\-]+'
        node:
          type: string
    PUT-NodesLxcSnapshotConfig-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        description:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    DELETE-AccessTfa-RB:
      type: object
      properties:
        id:
          type: string
        userid:
          maxLength: 64
          type: string
        password:
          type: string
          maxLength: 64
          minLength: 5
    ClusterMetricsServer:
      type: array
      items:
        type: object
        properties:
          server:
            type: string
          id:
            type: string
          port:
            type: integer
          disable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          type:
            type: string
    ClusterAcmeDirectories:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          url:
            pattern: ^https?://.*
            type: string
    ClusterHa:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    NodesScanNfs:
      type: array
      items:
        type: object
        properties:
          path:
            type: string
          options:
            type: string
    AccessGroups:
      type: object
      properties:
        members:
          items:
            description: Full User ID, in the `name@realm` format.
            format: pve-userid
            maxLength: 64
            type: string
          type: array
        comment:
          type: string
    POST-AccessDomains-RB:
      type: object
      properties:
        server2:
          maxLength: 256
          type: string
        cert:
          type: string
        server1:
          maxLength: 256
          type: string
        group_name_attr:
          maxLength: 256
          type: string
        scopes:
          type: string
        mode:
          type: string
          enum:
          - ldap
          - ldaps
          - ldap+starttls
        username-claim:
          type: string
        certkey:
          type: string
        acr-values:
          pattern: ^[^\x00-\x1F\x7F <>#"]*$
          type: string
        issuer-url:
          maxLength: 256
          type: string
        default:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        groups-autocreate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        prompt:
          pattern: (?:none|login|consent|select_account|\S+)
          type: string
        sync_attributes:
          pattern: '\w+=[^,]+(,\s*\w+=[^,]+)*'
          type: string
        query-userinfo:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        case-sensitive:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        type:
          type: string
          enum:
          - ad
          - ldap
          - openid
          - pam
          - pve
        sslversion:
          type: string
          enum:
          - tlsv1
          - tlsv1_1
          - tlsv1_2
          - tlsv1_3
        client-id:
          maxLength: 256
          type: string
        group_filter:
          maxLength: 2048
          type: string
        client-key:
          maxLength: 256
          type: string
        domain:
          type: string
          maxLength: 256
          pattern: '\S+'
        realm:
          maxLength: 32
          type: string
        base_dn:
          maxLength: 256
          type: string
        password:
          type: string
        filter:
          maxLength: 2048
          type: string
        autocreate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        sync-defaults-options:
          type: string
        verify:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        secure:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        check-connection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        user_attr:
          type: string
          maxLength: 256
          pattern: '\S{2,}'
        user_classes:
          type: string
        groups-claim:
          type: string
          maxLength: 256
          pattern: (?^:[A-Za-z0-9\.\-_]+)
        port:
          minimum: 1
          type: integer
          maximum: 65535
        group_classes:
          type: string
        capath:
          type: string
        comment:
          maxLength: 4096
          type: string
        groups-overwrite:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        group_dn:
          maxLength: 256
          type: string
        tfa:
          maxLength: 128
          type: string
        bind_dn:
          maxLength: 256
          type: string
    PUT-ClusterSdnIpams-RB:
      type: object
      properties:
        ipam:
          type: string
        token:
          type: string
        section:
          type: integer
        url:
          type: string
        delete:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
    POST-NodesStorageDownloadurl-RB:
      type: object
      properties:
        verify-certificates:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        content:
          type: string
          enum:
          - iso
          - vztmpl
          - import
        compression:
          type: string
        checksum:
          type: string
        filename:
          maxLength: 255
          type: string
        storage:
          type: string
        url:
          pattern: https?://.*
          type: string
        node:
          type: string
        checksum-algorithm:
          type: string
          enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
    DELETE-NodesDisksLvm-RB:
      type: object
      properties:
        cleanup-config:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cleanup-disks:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          type: string
        node:
          type: string
    POST-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        vnet:
          type: string
        ip:
          type: string
        mac:
          type: string
    DELETE-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        cidr:
          type: string
    NodesStorageContent:
      type: object
      properties:
        notes:
          type: string
        format:
          type: string
        protected:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        path:
          type: string
        used:
          type: integer
        size:
          type: integer
    GET-ClusterMappingUsb-RB:
      type: object
      properties:
        check-node:
          type: string
    GET-ClusterFirewallRefs-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - alias
          - ipset
    PUT-ClusterHaResources-RB:
      type: object
      properties:
        group:
          type: string
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        comment:
          maxLength: 4096
          type: string
        max_restart:
          type: integer
        max_relocate:
          type: integer
        delete:
          maxLength: 4096
          type: string
        sid:
          type: string
        digest:
          maxLength: 64
          type: string
    NodesFirewall:
      type: array
      items:
        type: object
        properties: {}
    PUT-ClusterFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        moveto:
          type: integer
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        delete:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        source:
          maxLength: 512
          type: string
        sport:
          type: string
    NodesFirewallRules:
      type: object
      properties:
        macro:
          type: string
        action:
          type: string
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          type: string
        type:
          type: string
        comment:
          type: string
        dport:
          type: string
        enable:
          type: integer
        ipversion:
          type: integer
        source:
          type: string
        iface:
          type: string
        icmp-type:
          type: string
        sport:
          type: string
    POST-NodesDisksLvmthin-RB:
      type: object
      properties:
        device:
          type: string
        add_storage:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          type: string
        node:
          type: string
    POST-NodesLxcClone-RB:
      type: object
      properties:
        full:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        newid:
          minimum: 100
          type: integer
          maximum: 999999999
        snapname:
          maxLength: 40
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        bwlimit:
          type: number
          minimum: "0"
        hostname:
          type: string
        pool:
          type: string
        description:
          type: string
        storage:
          type: string
        target:
          type: string
        node:
          type: string
    NodesSdnZones:
      type: array
      items:
        type: object
        properties:
          zone:
            type: string
          status:
            type: string
            enum:
            - available
            - pending
            - error
    POST-NodesCephRestart-RB:
      type: object
      properties:
        service:
          pattern: (mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
        node:
          type: string
    NodesHardwarePci:
      type: array
      items:
        type: object
        properties:
          vendor:
            type: string
          subsystem_vendor:
            type: string
          subsystem_device_name:
            type: string
          device_name:
            type: string
          id:
            type: string
          vendor_name:
            type: string
          mdev:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          device:
            type: string
          iommugroup:
            type: integer
          class:
            type: string
          subsystem_device:
            type: string
          subsystem_vendor_name:
            type: string
    GET-NodesScanPbs-RB:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
        server:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        port:
          minimum: 1
          type: integer
          maximum: 65535
        node:
          type: string
    POST-NodesQemuSnapshotRollback-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        start:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    ClusterSdnVnetsFirewallOptions:
      type: object
      properties:
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
    NodesQemuAgentExecstatus:
      type: object
      properties:
        exitcode:
          type: integer
        err-truncated:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        out-truncated:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        exited:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        out-data:
          type: string
        signal:
          type: integer
        err-data:
          type: string
    NodesCephRules:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
    PUT-ClusterAcmeAccount-RB:
      type: object
      properties:
        name:
          type: string
        contact:
          type: string
    GET-ClusterMappingDir-RB:
      type: object
      properties:
        check-node:
          type: string
    ClusterHaStatusCurrent:
      type: array
      items:
        type: object
        properties:
          type:
            type: 
            enum:
            - quorum
            - master
            - lrm
            - service
          request_state:
            type: string
          max_relocate:
            type: integer
          state:
            type: string
          max_restart:
            type: integer
          id:
            type: string
          timestamp:
            type: integer
          crm_state:
            type: string
          status:
            type: string
          sid:
            type: string
          node:
            type: string
          quorate:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    POST-NodesCertificatesAcmeCertificate-RB:
      type: object
      properties:
        node:
          type: string
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesFirewallOptions:
      type: object
      properties:
        protection_synflood_rate:
          type: integer
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        tcpflags:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        protection_synflood:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nf_conntrack_helpers:
          type: string
        nftables:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        smurf_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        protection_synflood_burst:
          type: integer
        tcp_flags_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nosmurfs:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        log_nf_conntrack:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ndp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        nf_conntrack_tcp_timeout_established:
          type: integer
          minimum: 7875
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        nf_conntrack_max:
          type: integer
          minimum: 32768
        nf_conntrack_allow_invalid:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        nf_conntrack_tcp_timeout_syn_recv:
          minimum: 30
          type: integer
          maximum: 60
    POST-AccessUsers-RB:
      type: object
      properties:
        password:
          type: string
          maxLength: 64
          minLength: 8
        email:
          maxLength: 254
          type: string
        comment:
          maxLength: 2048
          type: string
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        groups:
          type: string
        firstname:
          maxLength: 1024
          type: string
        lastname:
          maxLength: 1024
          type: string
        userid:
          maxLength: 64
          type: string
        expire:
          type: integer
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
    ClusterNotificationsMatcherfields:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
    GET-ClusterMetricsExport-RB:
      type: object
      properties:
        local-only:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        start-time:
          type: integer
        history:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    POST-NodesCephPool-RB:
      type: object
      properties:
        node:
          type: string
        pg_num_min:
          type: integer
          title: min. PG Num
          maximum: 32768
        target_size:
          type: string
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
          title: PG Autoscale Target Size
        min_size:
          minimum: 1
          type: integer
          title: Min Size
          maximum: 7
        pg_autoscale_mode:
          type: string
          title: PG Autoscale Mode
          enum:
          - "on"
          - "off"
          - warn
        erasure-coding:
          type: string
        crush_rule:
          type: string
          title: Crush Rule Name
        application:
          type: string
          title: Application
          enum:
          - rbd
          - cephfs
          - rgw
        size:
          minimum: 1
          type: integer
          title: Size
          maximum: 7
        add_storages:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        pg_num:
          minimum: 1
          type: integer
          title: PG Num
          maximum: 32768
        name:
          type: string
          pattern: (?^:^[^:/\s]+$)
          title: Name
        target_size_ratio:
          type: number
          title: PG Autoscale Target Ratio
    POST-ClusterMappingPci-RB:
      type: object
      properties:
        id:
          type: string
        mdev:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        live-migration-capable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        description:
          maxLength: 4096
          type: string
        map:
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. Used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              iommugroup:
                description: The IOMMU group in which the device is to be expected in. Used for detecting hardware changes.
                optional: 1
                type: integer
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the device. If the function is omitted, the whole device is mapped. In that case use the attributes of the first device. You can give multiple paths as a semicolon seperated list, the first available will then be chosen on guest start.
                pattern: (?:[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?;)*[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?
                type: string
              subsystem-id:
                description: The subsystem vendor and device ID that is expected. Used for detecting hardware changes.
                optional: 1
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
            type: string
          type: array
    NodesApt:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    POST-NodesLxcStatusReboot-RB:
      type: object
      properties:
        timeout:
          type: integer
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    PUT-AccessRoles-RB:
      type: object
      properties:
        privs:
          type: string
        append:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        roleid:
          type: string
    NodesStorageFilerestoreDownload:
      type: string
      format: binary
    PUT-NodesAptRepositories-RB:
      type: object
      properties:
        node:
          type: string
        digest:
          maxLength: 80
          type: string
        handle:
          type: string
    POST-NodesQemuStatusReboot-RB:
      type: object
      properties:
        timeout:
          type: integer
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    NodesCertificatesCustom:
      type: object
      properties:
        notafter:
          type: integer
        issuer:
          type: string
        public-key-type:
          type: string
        pem:
          type: string
        filename:
          type: string
        san:
          items:
            type: string
          type: array
        notbefore:
          type: integer
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        subject:
          type: string
        public-key-bits:
          type: integer
    POST-ClusterFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        cidr:
          type: string
    NodesTasksLog:
      type: array
      items:
        type: object
        properties:
          "n":
            type: integer
          t:
            type: string
    PUT-ClusterBackup-RB:
      type: object
      properties:
        all:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        stopwait:
          type: integer
        pigz:
          type: integer
        storage:
          type: string
        script:
          type: string
        enabled:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        starttime:
          pattern: '\d{1,2}:\d{1,2}'
          type: string
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        stdexcludes:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        schedule:
          maxLength: 128
          type: string
        ionice:
          type: integer
          maximum: 8
        dumpdir:
          type: string
        node:
          type: string
        delete:
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        stop:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        zstd:
          type: integer
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        mailnotification:
          type: string
          enum:
          - always
          - failure
        notes-template:
          maxLength: 1024
          type: string
        mailto:
          type: string
        bwlimit:
          type: integer
        vmid:
          type: string
        fleecing:
          type: string
        exclude-path:
          items:
            type: string
          type: array
        repeat-missed:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        lockwait:
          type: integer
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        id:
          type: string
          maxLength: 50
          pattern: '\S+'
        notification-target:
          type: string
        tmpdir:
          type: string
        protected:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        exclude:
          type: string
        quiet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        remove:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        prune-backups:
          type: string
        performance:
          type: string
        comment:
          maxLength: 512
          type: string
        pool:
          type: string
        maxfiles:
          type: integer
          minimum: 1
        dow:
          type: string
    GET-NodesCephCfgValue-RB:
      type: object
      properties:
        config-keys:
          pattern: (?^:^(:?(?^i:[0-9a-z\-_\.]+:[0-9a-zA-Z\-_]+))(:?[;, ](?^i:[0-9a-z\-_\.]+:[0-9a-zA-Z\-_]+))*$)
          type: string
        node:
          type: string
    POST-NodesCephStart-RB:
      type: object
      properties:
        service:
          pattern: (ceph|mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
        node:
          type: string
    ClusterReplication:
      type: array
      items:
        type: object
        properties: {}
    Storage-PUT:
      type: object
      properties:
        config:
          type: object
          properties: 
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        storage:
          type: string
    NodesQemuFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          nomatch:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
    GET-NodesQemuFirewallRefs-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - alias
          - ipset
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-ClusterHaResourcesMigrate-RB:
      type: object
      properties:
        sid:
          type: string
        node:
          type: string
    POST-NodesLxcMtunnel-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        bridges:
          type: string
        storages:
          type: string
        node:
          type: string
    Storage:
      type: object
      properties:
        config:
          type: object
          properties: 
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        storage:
          type: string
    ClusterNotificationsEndpointsWebhook-GET:
      type: array
      items:
        type: object
        properties:
          header:
            items:
              type: string
            type: array
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          body:
            type: string
          comment:
            type: string
          method:
            type: string
            enum:
            - post
            - put
            - get
          disable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          secret:
            items:
              type: string
            type: array
          url:
            type: string
          name:
            type: string
    NodesQemuAgentExec:
      type: object
      properties:
        pid:
          type: integer
    NodesStoragePrunebackups:
      type: array
      items:
        type: object
        properties:
          ctime:
            type: integer
          mark:
            type: string
            enum:
            - keep
            - remove
            - protected
            - renamed
          vmid:
            type: integer
          type:
            type: string
          volid:
            type: string
    Nodes-GET:
      type: array
      items:
        type: object
        properties: {}
    NodesStorage:
      type: array
      items:
        type: object
        properties:
          content:
            type: string
          active:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          used_fraction:
            type: number
          used:
            type: integer
          avail:
            type: integer
          enabled:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          total:
            type: integer
          shared:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          storage:
            type: string
          type:
            type: string
    NodesDisksZfs-GET:
      type: array
      items:
        type: object
        properties:
          frag:
            type: integer
          health:
            type: string
          alloc:
            type: integer
          dedup:
            type: number
          free:
            type: integer
          name:
            type: string
          size:
            type: integer
    PUT-ClusterMappingUsb-RB:
      type: object
      properties:
        description:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        delete:
          maxLength: 4096
          type: string
        id:
          type: string
        map:
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. If a USB path is given, it is only used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the usb device.
                optional: 1
                pattern: (?^:^(\d+)\-(\d+(\.\d+)*)$)
                type: string
            type: string
          type: array
    POST-NodesLxcSpiceproxy-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        proxy:
          type: string
        node:
          type: string
    ClusterFirewallRefs:
      type: array
      items:
        type: object
        properties:
          scope:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          comment:
            type: string
          name:
            type: string
          ref:
            type: string
    POST-NodesAplinfo-RB:
      type: object
      properties:
        template:
          maxLength: 255
          type: string
        storage:
          type: string
        node:
          type: string
    NodesStorageImportmetadata:
      type: object
      properties:
        source:
          type: string
          enum:
          - esxi
        net:
          properties: 
          type: object
        create-args:
          properties: 
          type: object
        disks:
          properties: 
          type: object
        type:
          type: string
          enum:
          - vm
        warnings:
          items:
            additionalProperties: 1
            properties:
              key:
                description: Related subject (config) key of warning.
                optional: 1
                type: string
              type:
                description: What this warning is about.
                enum:
                - cdrom-image-ignored
                - efi-state-lost
                - guest-is-running
                - nvme-unsupported
                - ova-needs-extracting
                - ovmf-with-lsi-unsupported
                - serial-port-socket-only
                type: string
              value:
                description: Related subject (config) value of warning.
                optional: 1
                type: string
            type: object
          type: array
    NodesStorageContent-GET:
      type: array
      items:
        type: object
        properties:
          ctime:
            type: integer
          notes:
            type: string
          format:
            type: string
          protected:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          volid:
            type: string
          verification:
            properties:
              state:
                description: Last backup verification state.
                type: string
              upid:
                description: Last backup verification UPID.
                type: string
            type: object
          vmid:
            type: integer
          parent:
            type: string
          encrypted:
            type: string
          used:
            type: integer
          size:
            type: integer
    GET-ClusterResources-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - vm
          - storage
          - node
          - sdn
    ClusterSdnControllers:
      type: array
      items:
        type: object
        properties:
          state:
            type: string
          type:
            type: string
          controller:
            type: string
          pending:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    NodesCeph:
      type: array
      items:
        type: object
        properties: {}
    NodesQemuSnapshot:
      type: array
      items:
        type: object
        properties:
          snaptime:
            type: integer
          description:
            type: string
          parent:
            type: string
          name:
            type: string
          vmstate:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    NodesQemuMtunnelwebsocket:
      type: object
      properties:
        port:
          type: string
        socket:
          type: string
    POST-NodesQemuStatusReset-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    ClusterTasks:
      type: array
      items:
        type: object
        properties:
          upid:
            type: string
    POST-NodesCephStop-RB:
      type: object
      properties:
        service:
          pattern: (ceph|mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
        node:
          type: string
    POST-NodesQemuSpiceproxy-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        proxy:
          type: string
        node:
          type: string
    GET-NodesStorageRrddata-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
        storage:
          type: string
        node:
          type: string
    POST-NodesLxc-RB:
      type: object
      properties:
        cpulimit:
          type: number
          maximum: 8192
        restore:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        storage:
          type: string
        memory:
          type: integer
          minimum: 16
        cpuunits:
          type: integer
          maximum: 500000
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        rootfs:
          type: string
        searchdomain:
          type: string
        unprivileged:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        swap:
          type: integer
        debug:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
        tty:
          type: integer
          maximum: 6
        ssh-public-keys:
          type: string
        startup:
          type: string
        unique:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        bwlimit:
          type: number
          minimum: "0"
        nameserver:
          type: string
        hookscript:
          type: string
        protection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        onboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        hostname:
          maxLength: 255
          type: string
        description:
          maxLength: 8192
          type: string
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
        password:
          type: string
          minLength: 5
        cores:
          minimum: 1
          type: integer
          maximum: 8192
        net[n]:
          type: string
        ostemplate:
          maxLength: 255
          type: string
        timezone:
          type: string
        unused[n]:
          type: string
        mp[n]:
          type: string
        ignore-unpack-errors:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        console:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        dev[n]:
          type: string
        features:
          type: string
        pool:
          type: string
        start:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tags:
          type: string
    DELETE-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        pos:
          type: integer
        vnet:
          type: string
        digest:
          maxLength: 64
          type: string
    AccessGroups-GET:
      type: array
      items:
        type: object
        properties:
          groupid:
            type: string
          comment:
            type: string
          users:
            type: string
    PUT-AccessGroups-RB:
      type: object
      properties:
        groupid:
          type: string
        comment:
          type: string
    GET-NodesLxcFirewallRefs-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - alias
          - ipset
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    PUT-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        nomatch:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
        cidr:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        digest:
          maxLength: 64
          type: string
        node:
          type: string
    POST-NodesLxcMigrate-RB:
      type: object
      properties:
        restart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        target-storage:
          type: string
        online:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        bwlimit:
          type: number
          minimum: "0"
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        timeout:
          type: integer
        target:
          type: string
        node:
          type: string
    NodesLxcRrddata:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesQemuRrddata-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    GET-NodesCephPoolStatus-RB:
      type: object
      properties:
        verbose:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          type: string
        node:
          type: string
    GET-Storage-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
    Nodes:
      type: array
      items:
        type: object
        properties:
          cpu:
            type: number
          ssl_fingerprint:
            type: string
          uptime:
            type: integer
          mem:
            type: integer
          maxcpu:
            type: integer
          maxmem:
            type: integer
          level:
            type: string
          node:
            type: string
          status:
            type: string
            enum:
            - unknown
            - online
            - offline
    GET-ClusterSdnZones-RB:
      type: object
      properties:
        zone:
          type: string
        pending:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        running:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesCephMgr:
      type: array
      items:
        type: object
        properties:
          state:
            type: string
          name:
            type: 
          host:
            type: string
          addr:
            type: string
    PUT-AccessTfa-RB:
      type: object
      properties:
        description:
          maxLength: 255
          type: string
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        id:
          type: string
        userid:
          maxLength: 64
          type: string
        password:
          type: string
          maxLength: 64
          minLength: 5
    GET-NodesTasks-RB:
      type: object
      properties:
        typefilter:
          type: string
        source:
          type: string
          enum:
          - archive
          - active
          - all
        start:
          type: integer
        userfilter:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        until:
          type: integer
        limit:
          type: integer
        statusfilter:
          type: string
        errors:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        since:
          type: integer
        node:
          type: string
    DELETE-NodesLxc-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
        purge:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        destroy-unreferenced-disks:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    PUT-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        nomatch:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
        cidr:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        digest:
          maxLength: 64
          type: string
        node:
          type: string
    DELETE-ClusterFirewallGroups-RB:
      type: object
      properties:
        pos:
          type: integer
        digest:
          maxLength: 64
          type: string
        group:
          type: string
          maxLength: 18
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
    NodesCephOsdMetadata:
      type: object
      properties:
        osd:
          properties:
            back_addr:
              description: Address and port used to talk to other OSDs.
              type: string
            front_addr:
              description: Address and port used to talk to clients and monitors.
              type: string
            hb_back_addr:
              description: Heartbeat address and port for other OSDs.
              type: string
            hb_front_addr:
              description: Heartbeat address and port for clients and monitors.
              type: string
            hostname:
              description: Name of the host containing the OSD.
              type: string
            id:
              description: ID of the OSD.
              type: integer
            mem_usage:
              description: Memory usage of the OSD service.
              type: integer
            osd_data:
              description: Path to the OSD's data directory.
              type: string
            osd_objectstore:
              description: The type of object store used.
              type: string
            pid:
              description: OSD process ID.
              type: integer
            version:
              description: Ceph version of the OSD service.
              type: string
          type: object
        devices:
          items:
            properties:
              dev_node:
                description: Device node
                type: string
              device:
                description: Kind of OSD device
                enum:
                - block
                - db
                - wal
                type: string
              devices:
                description: Physical disks used
                type: string
              size:
                description: Size in bytes
                type: integer
              support_discard:
                description: Discard support of the physical device
                type: boolean
              type:
                description: Type of device. For example, hdd or ssd
                type: string
            type: object
          type: array
    POST-NodesQemuTermproxy-RB:
      type: object
      properties:
        serial:
          type: string
          enum:
          - serial0
          - serial1
          - serial2
          - serial3
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    PUT-NodesLxcFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        macro:
          maxLength: 128
          type: string
        moveto:
          type: integer
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        delete:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        source:
          maxLength: 512
          type: string
        sport:
          type: string
    PUT-NodesCertificatesAcmeCertificate-RB:
      type: object
      properties:
        node:
          type: string
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    AccessUsersToken-PUT:
      type: object
      properties:
        expire:
          type: integer
        privsep:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
    PUT-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        vnet:
          type: string
        ip:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        mac:
          type: string
    POST-ClusterSdnVnets-RB:
      type: object
      properties:
        tag:
          type: integer
        zone:
          type: string
        isolate-ports:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vlanaware:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        alias:
          type: string
          maxLength: 256
          pattern: (?^i:[\(\)-_.\w\d\s]{0,256})
        type:
          type: string
          enum:
          - vnet
        vnet:
          type: string
    GET-NodesNetwork-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - vnet
          - any_bridge
          - any_local_bridge
        node:
          type: string
    POST-NodesCertificatesCustom-RB:
      type: object
      properties:
        certificates:
          type: string
        key:
          type: string
        restart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    ClusterFirewallOptions:
      type: object
      properties:
        ebtables:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        enable:
          type: integer
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        log_ratelimit:
          type: string
    POST-ClusterFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        source:
          maxLength: 512
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        sport:
          type: string
    ClusterFirewallGroups-GET:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          group:
            type: string
            maxLength: 18
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
    NodesCephCmdsafety:
      type: object
      properties:
        safe:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        status:
          type: string
    POST-NodesVzdump-RB:
      type: object
      properties:
        all:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        stopwait:
          type: integer
        pigz:
          type: integer
        storage:
          type: string
        script:
          type: string
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        stdexcludes:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ionice:
          type: integer
          maximum: 8
        dumpdir:
          type: string
        node:
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        stop:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        zstd:
          type: integer
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        mailnotification:
          type: string
          enum:
          - always
          - failure
        notes-template:
          maxLength: 1024
          type: string
        mailto:
          type: string
        bwlimit:
          type: integer
        vmid:
          type: string
        fleecing:
          type: string
        exclude-path:
          items:
            type: string
          type: array
        notification-target:
          type: string
        lockwait:
          type: integer
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        job-id:
          type: string
          maxLength: 50
          pattern: '\S+'
        stdout:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        protected:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        exclude:
          type: string
        quiet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        remove:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        prune-backups:
          type: string
        performance:
          type: string
        tmpdir:
          type: string
        pool:
          type: string
        maxfiles:
          type: integer
          minimum: 1
    ClusterNotificationsMatcherfieldvalues:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          field:
            type: string
          value:
            type: string
    NodesDns:
      type: object
      properties:
        dns2:
          type: string
        dns1:
          type: string
        search:
          type: string
        dns3:
          type: string
    POST-NodesAptRepositories-RB:
      type: object
      properties:
        path:
          type: string
        digest:
          maxLength: 80
          type: string
        index:
          type: integer
        enabled:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    POST-NodesVncshell-RB:
      type: object
      properties:
        width:
          minimum: 16
          type: integer
          maximum: 4096
        cmd:
          type: string
          enum:
          - ceph_install
          - upgrade
          - login
        height:
          minimum: 16
          type: integer
          maximum: 2160
        cmd-opts:
          type: string
        websocket:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    NodesExecute:
      type: array
      items:
        type: object
        properties: {}
    NodesLxcFirewallOptions:
      type: object
      properties:
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        radv:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        dhcp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        macfilter:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ndp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ipfilter:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    DELETE-NodesStorageContent-RB:
      type: object
      properties:
        storage:
          type: string
        delay:
          minimum: 1
          type: integer
          maximum: 30
        volume:
          type: string
        node:
          type: string
    NodesLxcMtunnelwebsocket:
      type: object
      properties:
        port:
          type: string
        socket:
          type: string
    ClusterSdnVnetsSubnets:
      type: array
      items:
        type: object
        properties: {}
    NodesHardwarePci-GET:
      type: array
      items:
        type: object
        properties:
          method:
            type: string
    GET-ClusterLog-RB:
      type: object
      properties:
        max:
          type: integer
          minimum: 1
    POST-NodesCephOsdScrub-RB:
      type: object
      properties:
        deep:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        osdid:
          type: integer
        node:
          type: string
    POST-NodesLxcSnapshot-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        description:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    ClusterMappingDir:
      type: array
      items:
        type: object
        properties:
          checks:
            items:
              properties:
                message:
                  description: The message of the error
                  type: string
                severity:
                  description: The severity of the error
                  enum:
                  - warning
                  - error
                  type: string
              type: object
            type: array
          id:
            type: string
          description:
            type: string
          map:
            items:
              description: A mapping for a node.
              type: string
            type: array
    NodesQemuFirewallRefs:
      type: array
      items:
        type: object
        properties:
          scope:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          comment:
            type: string
          name:
            type: string
          ref:
            type: string
    NodesTime:
      type: object
      properties:
        timezone:
          type: string
        time:
          type: integer
          minimum: 1297163644
        localtime:
          type: integer
          minimum: 1297163644
    NodesQemuFeature:
      type: object
      properties:
        hasFeature:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        nodes:
          items:
            type: string
          type: array
    DELETE-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    PUT-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        moveto:
          type: integer
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        vnet:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        delete:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        source:
          maxLength: 512
          type: string
        sport:
          type: string
    PUT-ClusterSdnZones-RB:
      type: object
      properties:
        exitnodes-primary:
          type: string
        zone:
          type: string
        exitnodes-local-routing:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        dns:
          type: string
        rt-import:
          type: string
        ipam:
          type: string
        mac:
          type: string
        bridge:
          type: string
        mtu:
          type: integer
        exitnodes:
          type: string
        controller:
          type: string
        vrf-vxlan:
          type: integer
        nodes:
          type: string
        advertise-subnets:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        reversedns:
          type: string
        vlan-protocol:
          type: string
          enum:
          - 802.1q
          - 802.1ad
        digest:
          maxLength: 64
          type: string
        disable-arp-nd-suppression:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        dp-id:
          type: integer
        delete:
          maxLength: 4096
          type: string
        dhcp:
          type: string
          enum:
          - dnsmasq
        tag:
          type: integer
        bridge-disable-mac-learning:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vxlan-port:
          minimum: 1
          type: integer
          maximum: 65536
        peers:
          type: string
        dnszone:
          type: string
    GET-ClusterSdnVnets-RB:
      type: object
      properties:
        vnet:
          type: string
        pending:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        running:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    GET-NodesScanIscsi-RB:
      type: object
      properties:
        portal:
          type: string
        node:
          type: string
    DELETE-NodesCertificatesCustom-RB:
      type: object
      properties:
        restart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    POST-NodesQemuAgent-RB:
      type: object
      properties:
        command:
          type: string
          enum:
          - fsfreeze-freeze
          - fsfreeze-status
          - fsfreeze-thaw
          - fstrim
          - get-fsinfo
          - get-host-name
          - get-memory-block-info
          - get-memory-blocks
          - get-osinfo
          - get-time
          - get-timezone
          - get-users
          - get-vcpus
          - info
          - network-get-interfaces
          - ping
          - shutdown
          - suspend-disk
          - suspend-hybrid
          - suspend-ram
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    PUT-ClusterHaGroups-RB:
      type: object
      properties:
        group:
          type: string
        nodes:
          type: string
        comment:
          maxLength: 4096
          type: string
        nofailback:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          maxLength: 4096
          type: string
        restricted:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 64
          type: string
    NodesLxcRrd:
      type: object
      properties:
        filename:
          type: string
    ClusterFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          nomatch:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
    POST-NodesQemuFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        macro:
          maxLength: 128
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        source:
          maxLength: 512
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        sport:
          type: string
    POST-NodesQemuStatusStop-RB:
      type: object
      properties:
        overrule-shutdown:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        timeout:
          type: integer
        migratedfrom:
          type: string
        node:
          type: string
        keepActive:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    PUT-NodesConfig-RB:
      type: object
      properties:
        wakeonlan:
          type: string
        acmedomain[n]:
          type: string
        startall-onboot-delay:
          type: integer
          maximum: 300
        ballooning-target:
          type: integer
          maximum: 100
        acme:
          type: string
        delete:
          type: string
        description:
          maxLength: 65536
          type: string
        digest:
          maxLength: 40
          type: string
        node:
          type: string
    PUT-ClusterMappingDir-RB:
      type: object
      properties:
        description:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        delete:
          maxLength: 4096
          type: string
        id:
          type: string
        map:
          items:
            format:
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: Absolute directory path that should be shared with the guest.
                format: pve-storage-path-in-property-string
                type: string
            type: string
          type: array
    PUT-AccessDomains-RB:
      type: object
      properties:
        server2:
          maxLength: 256
          type: string
        cert:
          type: string
        server1:
          maxLength: 256
          type: string
        realm:
          maxLength: 32
          type: string
        group_name_attr:
          maxLength: 256
          type: string
        scopes:
          type: string
        mode:
          type: string
          enum:
          - ldap
          - ldaps
          - ldap+starttls
        delete:
          maxLength: 4096
          type: string
        certkey:
          type: string
        acr-values:
          pattern: ^[^\x00-\x1F\x7F <>#"]*$
          type: string
        issuer-url:
          maxLength: 256
          type: string
        default:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        prompt:
          pattern: (?:none|login|consent|select_account|\S+)
          type: string
        sync_attributes:
          pattern: '\w+=[^,]+(,\s*\w+=[^,]+)*'
          type: string
        query-userinfo:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        case-sensitive:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        sslversion:
          type: string
          enum:
          - tlsv1
          - tlsv1_1
          - tlsv1_2
          - tlsv1_3
        client-id:
          maxLength: 256
          type: string
        group_filter:
          maxLength: 2048
          type: string
        client-key:
          maxLength: 256
          type: string
        domain:
          type: string
          maxLength: 256
          pattern: '\S+'
        digest:
          maxLength: 64
          type: string
        base_dn:
          maxLength: 256
          type: string
        groups-autocreate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        filter:
          maxLength: 2048
          type: string
        autocreate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        sync-defaults-options:
          type: string
        verify:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        secure:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        check-connection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        user_attr:
          type: string
          maxLength: 256
          pattern: '\S{2,}'
        user_classes:
          type: string
        groups-claim:
          type: string
          maxLength: 256
          pattern: (?^:[A-Za-z0-9\.\-_]+)
        password:
          type: string
        port:
          minimum: 1
          type: integer
          maximum: 65535
        group_classes:
          type: string
        capath:
          type: string
        comment:
          maxLength: 4096
          type: string
        groups-overwrite:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        group_dn:
          maxLength: 256
          type: string
        tfa:
          maxLength: 128
          type: string
        bind_dn:
          maxLength: 256
          type: string
    NodesCephFs:
      type: array
      items:
        type: object
        properties:
          metadata_pool:
            type: string
          name:
            type: string
          data_pool:
            type: string
    NodesVzdumpDefaults:
      type: object
      properties:
        all:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        stopwait:
          type: integer
        pigz:
          type: integer
        storage:
          type: string
        script:
          type: string
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        stdexcludes:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ionice:
          type: integer
          maximum: 8
        dumpdir:
          type: string
        node:
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        stop:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        zstd:
          type: integer
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        mailnotification:
          type: string
          enum:
          - always
          - failure
        notes-template:
          maxLength: 1024
          type: string
        mailto:
          type: string
        bwlimit:
          type: integer
        vmid:
          type: string
        fleecing:
          type: string
        exclude-path:
          items:
            type: string
          type: array
        lockwait:
          type: integer
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        notification-target:
          type: string
        protected:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        exclude:
          type: string
        quiet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        remove:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        prune-backups:
          type: string
        performance:
          type: string
        tmpdir:
          type: string
        pool:
          type: string
        maxfiles:
          type: integer
          minimum: 1
    NodesLxcSnapshot-GET:
      type: array
      items:
        type: object
        properties: {}
    ClusterBackupIncludedvolumes:
      type: object
      properties:
        children:
          items:
            properties:
              children:
                description: The volumes of the guest with the information if they will be included in backups.
                items:
                  properties:
                    id:
                      description: Configuration key of the volume.
                      type: string
                    included:
                      description: Whether the volume is included in the backup or not.
                      type: boolean
                    name:
                      description: Name of the volume.
                      type: string
                    reason:
                      description: The reason why the volume is included (or excluded).
                      type: string
                  type: object
                optional: 1
                type: array
              id:
                description: VMID of the guest.
                type: integer
              name:
                description: Name of the guest
                optional: 1
                type: string
              type:
                description: Type of the guest, VM, CT or unknown for removed but not purged guests.
                enum:
                - qemu
                - lxc
                - unknown
                type: string
            type: object
          type: array
    POST-ClusterSdnIpams-RB:
      type: object
      properties:
        ipam:
          type: string
        token:
          type: string
        section:
          type: integer
        url:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        type:
          type: string
          enum:
          - netbox
          - phpipam
          - pve
    NodesQemuSnapshot-GET:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesCephLog-RB:
      type: object
      properties:
        limit:
          type: integer
        start:
          type: integer
        node:
          type: string
    NodesQemuRrddata:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesLxcConfig-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        current:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        snapshot:
          maxLength: 40
          type: string
        node:
          type: string
    POST-NodesTermproxy-RB:
      type: object
      properties:
        cmd-opts:
          type: string
        node:
          type: string
        cmd:
          type: string
          enum:
          - ceph_install
          - upgrade
          - login
    NodesQemuAgent:
      type: array
      items:
        type: object
        properties: {}
    NodesCapabilitiesQemuMachines:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          version:
            type: string
          changes:
            type: string
          type:
            type: string
            enum:
            - q35
            - i440fx
    NodesLxcStatusCurrent:
      type: object
      properties:
        maxswap:
          type: integer
        diskread:
          type: integer
        cpus:
          type: number
        maxdisk:
          type: integer
        uptime:
          type: integer
        cpu:
          type: number
        tags:
          type: string
        status:
          type: string
          enum:
          - stopped
          - running
        disk:
          type: integer
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        lock:
          type: string
        ha:
          type: object
        netin:
          type: integer
        mem:
          type: integer
        netout:
          type: integer
        diskwrite:
          type: integer
        maxmem:
          type: integer
        name:
          type: string
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    POST-NodesQemuStatusStart-RB:
      type: object
      properties:
        migration_type:
          type: string
          enum:
          - secure
          - insecure
        targetstorage:
          type: string
        force-cpu:
          type: string
        stateuri:
          maxLength: 128
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        migration_network:
          type: string
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        migratedfrom:
          type: string
        timeout:
          type: integer
        machine:
          type: string
        node:
          type: string
    POST-NodesStorageContent-RB:
      type: object
      properties:
        target_node:
          type: string
        target:
          type: string
        storage:
          type: string
        volume:
          type: string
        node:
          type: string
    ClusterNotificationsTargets:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
            - sendmail
            - gotify
            - smtp
            - webhook
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          comment:
            type: string
          name:
            type: string
          disable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    ClusterConfig:
      type: array
      items:
        type: object
        properties: {}
    AccessUsers:
      type: object
      properties:
        email:
          maxLength: 254
          type: string
        comment:
          maxLength: 2048
          type: string
        tokens:
          properties:
            comment:
              optional: 1
              type: string
            expire:
              description: API token expiration date (seconds since epoch). '0' means no expiration date.
              minimum: 0
              optional: 1
              type: integer
            privsep:
              default: 1
              description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
              optional: 1
              type: boolean
          type: object
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        groups:
          items:
            format: pve-groupid
            type: string
          type: array
        firstname:
          maxLength: 1024
          type: string
        lastname:
          maxLength: 1024
          type: string
        expire:
          type: integer
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
    GET-NodesLxcRrd-RB:
      type: object
      properties:
        ds:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-ClusterFirewallGroups-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        source:
          maxLength: 512
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        group:
          type: string
          maxLength: 18
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        sport:
          type: string
    GET-NodesLxcRrddata-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    NodesStorageRrd:
      type: object
      properties:
        filename:
          type: string
    ClusterFirewallGroups:
      type: object
      properties:
        macro:
          type: string
        action:
          type: string
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          type: string
        type:
          type: string
        comment:
          type: string
        dport:
          type: string
        enable:
          type: integer
        ipversion:
          type: integer
        source:
          type: string
        iface:
          type: string
        icmp-type:
          type: string
        sport:
          type: string
    PUT-ClusterMetricsServer-RB:
      type: object
      properties:
        influxdbproto:
          type: string
          enum:
          - udp
          - http
          - https
        proto:
          type: string
          enum:
          - udp
          - tcp
        timeout:
          type: integer
        mtu:
          minimum: 512
          type: integer
          maximum: 65536
        path:
          type: string
        api-path-prefix:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        verify-certificate:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        port:
          minimum: 1
          type: integer
          maximum: 65536
        server:
          type: string
        organization:
          type: string
        digest:
          maxLength: 64
          type: string
        bucket:
          type: string
        delete:
          maxLength: 4096
          type: string
        id:
          type: string
        max-body-size:
          type: integer
          minimum: 1
        token:
          type: string
    PUT-NodesNetwork-RB:
      type: object
      properties:
        bridge_vlan_aware:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        bond_mode:
          type: string
          enum:
          - balance-rr
          - active-backup
          - balance-xor
          - broadcast
          - 802.3ad
          - balance-tlb
          - balance-alb
          - balance-slb
          - lacp-balance-slb
          - lacp-balance-tcp
        bond-primary:
          type: string
        gateway6:
          type: string
        address:
          type: string
        ovs_ports:
          type: string
        netmask:
          type: string
        autostart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
        delete:
          type: string
        vlan-raw-device:
          type: string
        bridge_vids:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        bond_xmit_hash_policy:
          type: string
          enum:
          - layer2
          - layer2+3
          - layer3+4
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - vnet
          - unknown
        gateway:
          type: string
        cidr:
          type: string
        slaves:
          type: string
        ovs_bridge:
          type: string
        ovs_bonds:
          type: string
        mtu:
          minimum: 1280
          type: integer
          maximum: 65520
        comments6:
          type: string
        comments:
          type: string
        ovs_tag:
          minimum: 1
          type: integer
          maximum: 4094
        address6:
          type: string
        vlan-id:
          minimum: 1
          type: integer
          maximum: 4094
        cidr6:
          type: string
        netmask6:
          type: integer
          maximum: 128
        bridge_ports:
          type: string
        ovs_options:
          maxLength: 1024
          type: string
    NodesQemuFirewallLog:
      type: array
      items:
        type: object
        properties:
          "n":
            type: integer
          t:
            type: string
    ClusterMappingUsb:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
          error:
            items:
              properties:
                message:
                  description: The message of the error
                  type: string
                severity:
                  description: The severity of the error
                  type: string
              type: object
            type: 
          id:
            type: string
          map:
            items:
              description: A mapping for a node.
              type: string
            type: array
    POST-NodesStorageUpload-RB:
      type: object
      properties:
        content:
          type: string
          enum:
          - iso
          - vztmpl
          - import
        checksum:
          type: string
        filename:
          maxLength: 255
          type: string
        storage:
          type: string
        tmpfilename:
          pattern: /var/tmp/pveupload-[0-9a-f]+
          type: string
        node:
          type: string
        checksum-algorithm:
          type: string
          enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
    ClusterSdn:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    POST-ClusterNotificationsEndpointsWebhook-RB:
      type: object
      properties:
        header:
          items:
            type: string
          type: array
        body:
          type: string
        comment:
          type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        secret:
          items:
            type: string
          type: array
        url:
          type: string
        name:
          type: string
    GET-NodesStorage-RB:
      type: object
      properties:
        format:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        content:
          type: string
        enabled:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        storage:
          type: string
        target:
          type: string
        node:
          type: string
    AccessUsersToken-GET:
      type: array
      items:
        type: object
        properties:
          expire:
            type: integer
          privsep:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          comment:
            type: string
          tokenid:
            pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
            type: string
    POST-NodesStopall-RB:
      type: object
      properties:
        force-stop:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        timeout:
          type: integer
          maximum: 7200
        vms:
          type: string
        node:
          type: string
    PUT-NodesLxcResize-RB:
      type: object
      properties:
        size:
          pattern: '\+?\d+(\.\d+)?[KMGT]?'
          type: string
        disk:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
        digest:
          maxLength: 40
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    GET-ClusterSdnDns-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - powerdns
    ClusterMappingPci:
      type: array
      items:
        type: object
        properties:
          checks:
            items:
              properties:
                message:
                  description: The message of the error
                  type: string
                severity:
                  description: The severity of the error
                  enum:
                  - warning
                  - error
                  type: string
              type: object
            type: array
          id:
            type: string
          description:
            type: string
          map:
            items:
              description: A mapping for a node.
              type: string
            type: array
    ClusterJobsRealmsync:
      type: array
      items:
        type: object
        properties:
          realm:
            maxLength: 32
            type: string
          scope:
            type: string
            enum:
            - users
            - groups
            - both
          remove-vanished:
            pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
            type: string
          next-run:
            type: integer
          comment:
            type: string
          id:
            type: string
          enabled:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          last-run:
            type: integer
          schedule:
            type: string
    GET-NodesCephCmdsafety-RB:
      type: object
      properties:
        action:
          type: string
          enum:
          - stop
          - destroy
        id:
          type: string
        service:
          type: string
          enum:
          - osd
          - mon
          - mds
        node:
          type: string
    NodesQemuRrd:
      type: object
      properties:
        filename:
          type: string
    PUT-NodesQemuFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        macro:
          maxLength: 128
          type: string
        moveto:
          type: integer
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        delete:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        source:
          maxLength: 512
          type: string
        sport:
          type: string
    GET-NodesVzdumpExtractconfig-RB:
      type: object
      properties:
        volume:
          type: string
        node:
          type: string
    POST-NodesQemuClone-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        full:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        newid:
          minimum: 100
          type: integer
          maximum: 999999999
        format:
          type: string
          enum:
          - raw
          - qcow2
          - vmdk
        target:
          type: string
        bwlimit:
          type: integer
          minimum: "0"
        snapname:
          maxLength: 40
          type: string
        pool:
          type: string
        description:
          type: string
        storage:
          type: string
        node:
          type: string
        name:
          type: string
    NodesQemuAgentFileread:
      type: object
      properties:
        truncated:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        content:
          type: string
    ClusterNotifications:
      type: array
      items:
        type: object
        properties: {}
    NodesCephOsd:
      type: array
      items:
        type: object
        properties: {}
    AccessUsersUnlocktfa:
      type: integer
      minimum: 0
      maximum: 1
      description: 
    GET-NodesLxcMtunnelwebsocket-RB:
      type: object
      properties:
        ticket:
          type: string
        socket:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    ClusterSdnVnetsFirewallRules:
      type: object
      properties:
        macro:
          type: string
        action:
          type: string
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          type: string
        type:
          type: string
        comment:
          type: string
        dport:
          type: string
        enable:
          type: integer
        ipversion:
          type: integer
        source:
          type: string
        iface:
          type: string
        icmp-type:
          type: string
        sport:
          type: string
    POST-ClusterSdnZones-RB:
      type: object
      properties:
        exitnodes-primary:
          type: string
        exitnodes-local-routing:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        dns:
          type: string
        rt-import:
          type: string
        ipam:
          type: string
        mac:
          type: string
        bridge:
          type: string
        mtu:
          type: integer
        exitnodes:
          type: string
        zone:
          type: string
        type:
          type: string
          enum:
          - evpn
          - faucet
          - qinq
          - simple
          - vlan
          - vxlan
        vrf-vxlan:
          type: integer
        nodes:
          type: string
        advertise-subnets:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        reversedns:
          type: string
        bridge-disable-mac-learning:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vlan-protocol:
          type: string
          enum:
          - 802.1q
          - 802.1ad
        disable-arp-nd-suppression:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        dp-id:
          type: integer
        dhcp:
          type: string
          enum:
          - dnsmasq
        tag:
          type: integer
        controller:
          type: string
        vxlan-port:
          minimum: 1
          type: integer
          maximum: 65536
        peers:
          type: string
        dnszone:
          type: string
    POST-NodesQemu-RB:
      type: object
      properties:
        balloon:
          type: integer
        bwlimit:
          type: integer
          minimum: "0"
        tdf:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tags:
          type: string
        spice_enhancements:
          type: string
        net[n]:
          type: string
        archive:
          maxLength: 255
          type: string
        protection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        onboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        audio0:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        numa[n]:
          type: string
        machine:
          type: string
        scsi[n]:
          type: string
        hostpci[n]:
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        efidisk0:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        start:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        import-working-storage:
          type: string
        virtiofs[n]:
          type: string
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        smp:
          type: integer
          minimum: 1
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        vcpus:
          type: integer
          minimum: 1
        boot:
          type: string
        ide[n]:
          type: string
        sata[n]:
          type: string
        freeze:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ciuser:
          type: string
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        virtio[n]:
          type: string
        watchdog:
          type: string
        node:
          type: string
        amd-sev:
          type: string
        migrate_speed:
          type: integer
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        cpulimit:
          type: number
          maximum: 128
        usb[n]:
          type: string
        shares:
          type: integer
          maximum: 50000
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        searchdomain:
          type: string
        pool:
          type: string
        reboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        acpi:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cpu:
          type: string
        ipconfig[n]:
          type: string
        memory:
          type: string
        localtime:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        args:
          type: string
        keephugepages:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        affinity:
          type: string
        vmstatestorage:
          type: string
        autostart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        startup:
          type: string
        cipassword:
          type: string
        kvm:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        description:
          maxLength: 8192
          type: string
        tablet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        hotplug:
          type: string
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        name:
          type: string
        numa:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cpuunits:
          minimum: 1
          type: integer
          maximum: 262144
        sockets:
          type: integer
          minimum: 1
        agent:
          type: string
        ciupgrade:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tpmstate0:
          type: string
        sshkeys:
          type: string
        cdrom:
          type: string
        live-restore:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        smbios1:
          maxLength: 512
          type: string
        cores:
          type: integer
          minimum: 1
        cicustom:
          type: string
        hookscript:
          type: string
        vga:
          type: string
        storage:
          type: string
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        unique:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        unused[n]:
          type: string
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
        ivshmem:
          type: string
        migrate_downtime:
          type: number
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        rng0:
          type: string
        nameserver:
          type: string
    POST-ClusterConfigNodes-RB:
      type: object
      properties:
        new_node_ip:
          type: string
        votes:
          type: integer
        nodeid:
          type: integer
          minimum: 1
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        apiversion:
          type: integer
        link[n]:
          type: string
        node:
          type: string
    NodesQueryurlmetadata:
      type: object
      properties:
        filename:
          type: string
        mimetype:
          type: string
        size:
          type: integer
    POST-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        node:
          type: string
        comment:
          type: string
        cidr:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        nomatch:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
    AccessUsersToken-POST:
      type: object
      properties:
        info:
          properties:
            comment:
              optional: 1
              type: string
            expire:
              description: API token expiration date (seconds since epoch). '0' means no expiration date.
              minimum: 0
              optional: 1
              type: integer
            privsep:
              default: 1
              description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
              optional: 1
              type: boolean
          type: object
        full-tokenid:
          type: string
        value:
          type: string
    NodesQemuFirewallOptions:
      type: object
      properties:
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        radv:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        dhcp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        macfilter:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ndp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ipfilter:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    PUT-ClusterSdnDns-RB:
      type: object
      properties:
        ttl:
          type: integer
        reversemaskv6:
          type: integer
        url:
          type: string
        delete:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        dns:
          type: string
        key:
          type: string
    NodesLxcFirewallRules:
      type: object
      properties:
        macro:
          type: string
        action:
          type: string
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          type: string
        type:
          type: string
        comment:
          type: string
        dport:
          type: string
        enable:
          type: integer
        ipversion:
          type: integer
        source:
          type: string
        iface:
          type: string
        icmp-type:
          type: string
        sport:
          type: string
    POST-NodesAptUpdate-RB:
      type: object
      properties:
        notify:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        quiet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    NodesCephMds:
      type: array
      items:
        type: object
        properties:
          standby_replay:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          rank:
            type: integer
          host:
            type: string
          state:
            type: string
          addr:
            type: string
          name:
            type: 
    POST-NodesLxcFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        macro:
          maxLength: 128
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        source:
          maxLength: 512
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        sport:
          type: string
    ClusterFirewall:
      type: array
      items:
        type: object
        properties: {}
    DELETE-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    NodesDisks:
      type: array
      items:
        type: object
        properties: {}
    DELETE-NodesStoragePrunebackups-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - qemu
          - lxc
        storage:
          type: string
        prune-backups:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    DELETE-NodesDisksDirectory-RB:
      type: object
      properties:
        cleanup-config:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cleanup-disks:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          type: string
        node:
          type: string
    PUT-NodesQemuResize-RB:
      type: object
      properties:
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 40
          type: string
        node:
          type: string
        size:
          pattern: '\+?\d+(\.\d+)?[KMGT]?'
          type: string
    POST-NodesDisksLvm-RB:
      type: object
      properties:
        device:
          type: string
        add_storage:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          type: string
        node:
          type: string
    POST-NodesDisksZfs-RB:
      type: object
      properties:
        add_storage:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        compression:
          type: string
          enum:
          - "on"
          - "off"
          - gzip
          - lz4
          - lzjb
          - zle
          - zstd
        raidlevel:
          type: string
          enum:
          - single
          - mirror
          - raid10
          - raidz
          - raidz2
          - raidz3
          - draid
          - draid2
          - draid3
        node:
          type: string
        devices:
          type: string
        name:
          type: string
        ashift:
          minimum: 9
          type: integer
          maximum: 16
        draid-config:
          type: string
    GET-ClusterCephMetadata-RB:
      type: object
      properties:
        scope:
          type: string
          enum:
          - all
          - versions
    ClusterAcmeMeta:
      type: object
      properties:
        termsOfService:
          type: string
        externalAccountRequired:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        caaIdentities:
          items:
            type: string
          type: array
        website:
          type: string
    ClusterNotificationsEndpointsSendmail-GET:
      type: array
      items:
        type: object
        properties:
          mailto:
            items:
              format: email-or-username
              type: string
            type: array
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          mailto-user:
            items:
              format: pve-userid
              type: string
            type: array
          comment:
            type: string
          author:
            type: string
          disable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          from-address:
            type: string
          name:
            type: string
    POST-NodesQemuConfig-RB:
      type: object
      properties:
        balloon:
          type: integer
        shares:
          type: integer
          maximum: 50000
        tdf:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tags:
          type: string
        spice_enhancements:
          type: string
        net[n]:
          type: string
        protection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        onboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        audio0:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        numa[n]:
          type: string
        machine:
          type: string
        background_delay:
          minimum: 1
          type: integer
          maximum: 30
        hostpci[n]:
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        efidisk0:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        import-working-storage:
          type: string
        virtiofs[n]:
          type: string
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        smp:
          type: integer
          minimum: 1
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        vcpus:
          type: integer
          minimum: 1
        cpulimit:
          type: number
          maximum: 128
        sata[n]:
          type: string
        freeze:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 40
          type: string
        ciuser:
          type: string
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        virtio[n]:
          type: string
        watchdog:
          type: string
        node:
          type: string
        amd-sev:
          type: string
        boot:
          type: string
        migrate_speed:
          type: integer
        scsi[n]:
          type: string
        usb[n]:
          type: string
        revert:
          type: string
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        searchdomain:
          type: string
        reboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        acpi:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cpu:
          type: string
        ipconfig[n]:
          type: string
        memory:
          type: string
        localtime:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        rng0:
          type: string
        args:
          type: string
        keephugepages:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        affinity:
          type: string
        vmstatestorage:
          type: string
        autostart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        startup:
          type: string
        hookscript:
          type: string
        cipassword:
          type: string
        kvm:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        description:
          maxLength: 8192
          type: string
        tablet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        hotplug:
          type: string
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        name:
          type: string
        numa:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        sockets:
          type: integer
          minimum: 1
        agent:
          type: string
        ciupgrade:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tpmstate0:
          type: string
        sshkeys:
          type: string
        cdrom:
          type: string
        migrate_downtime:
          type: number
        smbios1:
          maxLength: 512
          type: string
        cores:
          type: integer
          minimum: 1
        cicustom:
          type: string
        ide[n]:
          type: string
        vga:
          type: string
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        unused[n]:
          type: string
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
        ivshmem:
          type: string
        cpuunits:
          minimum: 1
          type: integer
          maximum: 262144
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        delete:
          type: string
        nameserver:
          type: string
    GET-NodesScanGlusterfs-RB:
      type: object
      properties:
        server:
          type: string
        node:
          type: string
    PUT-NodesTime-RB:
      type: object
      properties:
        timezone:
          type: string
        node:
          type: string
    GET-ClusterNextid-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
    DELETE-NodesCephPool-RB:
      type: object
      properties:
        remove_ecprofile:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
        name:
          type: string
        remove_storages:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    POST-Storage-RB:
      type: object
      properties:
        server2:
          type: string
        data-pool:
          type: string
        nowritecache:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        username:
          type: string
        encryption-key:
          type: string
        storage:
          type: string
        sparse:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comstar_tg:
          type: string
        skip-cert-verification:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comstar_hg:
          type: string
        tagged_only:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        saferemove:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        transport:
          type: string
          enum:
          - tcp
          - rdma
          - unix
        authsupported:
          type: string
        krbd:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        iscsiprovider:
          type: string
        fuse:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        namespace:
          type: string
        content-dirs:
          type: string
        port:
          minimum: 1
          type: integer
          maximum: 65535
        mkdir:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        saferemove_throughput:
          type: string
        nodes:
          type: string
        target:
          type: string
        datastore:
          type: string
        path:
          type: string
        bwlimit:
          type: string
        nocow:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        content:
          type: string
        is_mountpoint:
          type: string
        thinpool:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        base:
          type: string
        domain:
          maxLength: 256
          type: string
        format:
          type: string
          enum:
          - raw
          - qcow2
          - subvol
          - vmdk
        keyring:
          type: string
        smbversion:
          type: string
          enum:
          - default
          - "2.0"
          - "2.1"
          - "3"
          - "3.0"
          - "3.11"
        subdir:
          type: string
        password:
          maxLength: 256
          type: string
        blocksize:
          type: string
        shared:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        volume:
          type: string
        share:
          type: string
        fs-name:
          type: string
        max-protected-backups:
          type: integer
          minimum: -1
        options:
          type: string
        portal:
          type: string
        master-pubkey:
          type: string
        mountpoint:
          type: string
        preallocation:
          type: string
          enum:
          - "off"
          - metadata
          - falloc
          - full
        create-subdirs:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        prune-backups:
          type: string
        pool:
          type: string
        vgname:
          type: string
        server:
          type: string
        lio_tpg:
          type: string
        maxfiles:
          type: integer
        export:
          type: string
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        monhost:
          type: string
        create-base-path:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    ClusterBackupinfoNotbackedup:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
            - qemu
            - lxc
          name:
            type: string
          vmid:
            type: integer
    NodesDisksLvmthin:
      type: array
      items:
        type: object
        properties:
          metadata_used:
            type: integer
          vg:
            type: string
          lv_size:
            type: integer
          used:
            type: integer
          metadata_size:
            type: integer
          lv:
            type: string
    POST-ClusterBackup-RB:
      type: object
      properties:
        all:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        stopwait:
          type: integer
        pigz:
          type: integer
        storage:
          type: string
        script:
          type: string
        enabled:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        starttime:
          pattern: '\d{1,2}:\d{1,2}'
          type: string
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        stdexcludes:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        schedule:
          maxLength: 128
          type: string
        ionice:
          type: integer
          maximum: 8
        dumpdir:
          type: string
        node:
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        stop:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        zstd:
          type: integer
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        mailnotification:
          type: string
          enum:
          - always
          - failure
        notes-template:
          maxLength: 1024
          type: string
        mailto:
          type: string
        bwlimit:
          type: integer
        vmid:
          type: string
        fleecing:
          type: string
        exclude-path:
          items:
            type: string
          type: array
        repeat-missed:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        lockwait:
          type: integer
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        id:
          type: string
        notification-target:
          type: string
        tmpdir:
          type: string
        protected:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        exclude:
          type: string
        quiet:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        remove:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        prune-backups:
          type: string
        performance:
          type: string
        comment:
          maxLength: 512
          type: string
        pool:
          type: string
        maxfiles:
          type: integer
          minimum: 1
        dow:
          type: string
    ClusterConfigNodes-GET:
      type: array
      items:
        type: object
        properties:
          node:
            type: string
    PUT-ClusterCephFlags-RB:
      type: object
      properties:
        flag:
          type: string
          enum:
          - nobackfill
          - nodeep-scrub
          - nodown
          - noin
          - noout
          - norebalance
          - norecover
          - noscrub
          - notieragent
          - noup
          - pause
        value:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    AccessDomains:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          comment:
            type: string
          realm:
            type: string
          tfa:
            type: string
            enum:
            - yubico
            - oath
    GET-NodesQemuFeature-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        feature:
          type: string
          enum:
          - snapshot
          - clone
          - copy
        node:
          type: string
    AccessTicket:
      type: object
      properties:
        username:
          type: string
        ticket:
          type: string
        CSRFPreventionToken:
          type: string
        clustername:
          type: string
    PUT-AccessPassword-RB:
      type: object
      properties:
        userid:
          maxLength: 64
          type: string
        confirmation-password:
          type: string
          maxLength: 64
          minLength: 5
        password:
          type: string
          maxLength: 64
          minLength: 8
    NodesCapabilities:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesReplication-RB:
      type: object
      properties:
        guest:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    NodesLxcPending:
      type: array
      items:
        type: object
        properties:
          value:
            type: string
          key:
            type: string
          delete:
            type: integer
            maximum: 2
          pending:
            type: string
    Storage-GET:
      type: array
      items:
        type: object
        properties:
          storage:
            type: string
    PUT-NodesFirewallOptions-RB:
      type: object
      properties:
        node:
          type: string
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        tcpflags:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        protection_synflood:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nf_conntrack_helpers:
          type: string
        nftables:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        tcp_flags_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        protection_synflood_rate:
          type: integer
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        protection_synflood_burst:
          type: integer
        smurf_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nosmurfs:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        log_nf_conntrack:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ndp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        nf_conntrack_tcp_timeout_established:
          type: integer
          minimum: 7875
        digest:
          maxLength: 64
          type: string
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          type: string
        nf_conntrack_max:
          type: integer
          minimum: 32768
        nf_conntrack_allow_invalid:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        nf_conntrack_tcp_timeout_syn_recv:
          minimum: 30
          type: integer
          maximum: 60
    GET-NodesRrd-RB:
      type: object
      properties:
        ds:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
        node:
          type: string
    Version:
      type: object
      properties:
        release:
          type: string
        repoid:
          pattern: '[0-9a-fA-F]{8,64}'
          type: string
        console:
          type: string
          enum:
          - applet
          - vv
          - html5
          - xtermjs
        version:
          type: string
    POST-NodesQemuMovedisk-RB:
      type: object
      properties:
        storage:
          type: string
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        target-disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        format:
          type: string
          enum:
          - raw
          - qcow2
          - vmdk
        target-vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        bwlimit:
          type: integer
          minimum: "0"
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        delete:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 40
          type: string
        target-digest:
          maxLength: 40
          type: string
        node:
          type: string
    POST-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        vnet:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        source:
          maxLength: 512
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        sport:
          type: string
    ClusterBackup:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            maxLength: 50
            pattern: '\S+'
    POST-NodesFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        macro:
          maxLength: 128
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        source:
          maxLength: 512
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        sport:
          type: string
    NodesSubscription:
      type: object
      properties:
        signature:
          type: string
        serverid:
          type: string
        nextduedate:
          type: string
        status:
          type: string
          enum:
          - new
          - notfound
          - active
          - invalid
          - expired
          - suspended
        productname:
          type: string
        checktime:
          type: integer
        regdate:
          type: string
        message:
          type: string
        url:
          type: string
        level:
          type: string
        sockets:
          type: integer
        key:
          type: string
    NodesLxcFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          nomatch:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
    NodesAplinfo:
      type: array
      items:
        type: object
        properties: {}
    NodesAptUpdate:
      type: array
      items:
        type: object
        properties: {}
    NodesDisksLvm:
      type: object
      properties:
        children:
          items:
            properties:
              children:
                description: The underlying physical volumes
                items:
                  properties:
                    free:
                      description: The free bytes in the physical volume
                      type: integer
                    leaf:
                      type: boolean
                    name:
                      description: The name of the physical volume
                      type: string
                    size:
                      description: The size of the physical volume in bytes
                      type: integer
                  type: object
                optional: 1
                type: array
              free:
                description: The free bytes in the volume group
                type: integer
              leaf:
                type: boolean
              name:
                description: The name of the volume group
                type: string
              size:
                description: The size of the volume group in bytes
                type: integer
            type: object
          type: array
        leaf:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    GET-NodesQueryurlmetadata-RB:
      type: object
      properties:
        url:
          pattern: https?://.*
          type: string
        verify-certificates:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    PUT-ClusterNotificationsEndpointsSmtp-RB:
      type: object
      properties:
        username:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        password:
          type: string
        mailto-user:
          items:
            format: pve-userid
            type: string
          type: array
        author:
          type: string
        port:
          type: integer
        server:
          type: string
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
        digest:
          maxLength: 64
          type: string
        delete:
          items:
            format: pve-configid
            type: string
          type: array
        comment:
          type: string
        name:
          type: string
        from-address:
          type: string
        mailto:
          items:
            format: email-or-username
            type: string
          type: array
    Pools-GET:
      type: array
      items:
        type: object
        properties:
          poolid:
            type: string
          comment:
            type: string
          members:
            items:
              additionalProperties: 1
              properties:
                id:
                  type: string
                node:
                  type: string
                storage:
                  optional: 1
                  type: string
                type:
                  enum:
                  - qemu
                  - lxc
                  - openvz
                  - storage
                  type: string
                vmid:
                  optional: 1
                  type: integer
              type: object
            type: array
    ClusterNotificationsEndpointsGotify:
      type: object
      properties:
        name:
          type: string
        server:
          type: string
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    ClusterHaStatus:
      type: array
      items:
        type: object
        properties: {}
    POST-ClusterAcmeAccount-RB:
      type: object
      properties:
        directory:
          pattern: ^https?://.*
          type: string
        tos_url:
          type: string
        eab-hmac-key:
          type: string
        contact:
          type: string
        eab-kid:
          type: string
        name:
          type: string
    PUT-ClusterFirewallGroups-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        moveto:
          type: integer
        dest:
          maxLength: 512
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        delete:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        group:
          type: string
          maxLength: 18
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        source:
          maxLength: 512
          type: string
        sport:
          type: string
    NodesLxc:
      type: array
      items:
        type: object
        properties:
          maxswap:
            type: integer
          diskread:
            type: integer
          maxdisk:
            type: integer
          uptime:
            type: integer
          cpu:
            type: number
          tags:
            type: string
          cpus:
            type: number
          disk:
            type: integer
          vmid:
            minimum: 100
            type: integer
            maximum: 999999999
          lock:
            type: string
          status:
            type: string
            enum:
            - stopped
            - running
          netin:
            type: integer
          mem:
            type: integer
          netout:
            type: integer
          diskwrite:
            type: integer
          maxmem:
            type: integer
          name:
            type: string
          template:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    GET-NodesAptChangelog-RB:
      type: object
      properties:
        version:
          type: string
        name:
          type: string
        node:
          type: string
    ClusterCephFlags:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
          name:
            type: string
            enum:
            - nobackfill
            - nodeep-scrub
            - nodown
            - noin
            - noout
            - norebalance
            - norecover
            - noscrub
            - notieragent
            - noup
            - pause
          value:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    ClusterFirewallRules:
      type: object
      properties:
        macro:
          type: string
        action:
          type: string
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          type: string
        type:
          type: string
        comment:
          type: string
        dport:
          type: string
        enable:
          type: integer
        ipversion:
          type: integer
        source:
          type: string
        iface:
          type: string
        icmp-type:
          type: string
        sport:
          type: string
    PUT-ClusterSdnVnetsFirewallOptions-RB:
      type: object
      properties:
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        delete:
          type: string
        digest:
          maxLength: 64
          type: string
        vnet:
          type: string
    POST-ClusterJobsRealmsync-RB:
      type: object
      properties:
        realm:
          maxLength: 32
          type: string
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        comment:
          maxLength: 512
          type: string
        enable-new:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        id:
          maxLength: 64
          type: string
        enabled:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        schedule:
          maxLength: 128
          type: string
    POST-ClusterFirewallIpset-RB:
      type: object
      properties:
        nomatch:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        cidr:
          type: string
    GET-NodesQemuAgentExecstatus-RB:
      type: object
      properties:
        pid:
          type: integer
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    NodesCapabilitiesQemu:
      type: array
      items:
        type: object
        properties: {}
    NodesRrd:
      type: object
      properties:
        filename:
          type: string
    NodesCephPool:
      type: array
      items:
        type: object
        properties:
          pool_name:
            type: string
            title: Name
          pg_num_min:
            type: integer
            title: min. PG Num
          target_size:
            type: integer
            title: PG Autoscale Target Size
          pg_num_final:
            type: integer
            title: Optimal PG Num
          pg_autoscale_mode:
            type: string
            title: PG Autoscale Mode
          type:
            type: string
            title: Type
            enum:
            - replicated
            - erasure
            - unknown
          crush_rule:
            type: integer
            title: Crush Rule
          crush_rule_name:
            type: string
            title: Crush Rule Name
          application_metadata:
            type: object
            title: Associated Applications
          bytes_used:
            type: integer
            title: Used
          pool:
            type: integer
            title: ID
          size:
            type: integer
            title: Size
          percent_used:
            type: number
            title: '%-Used'
          autoscale_status:
            type: object
            title: Autoscale Status
          pg_num:
            type: integer
            title: PG Num
          min_size:
            type: integer
            title: Min Size
          target_size_ratio:
            type: number
            title: PG Autoscale Target Ratio
    GET-NodesQemuAgentFileread-RB:
      type: object
      properties:
        file:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-AccessOpenidAuthurl-RB:
      type: object
      properties:
        realm:
          maxLength: 32
          type: string
        redirect-url:
          maxLength: 255
          type: string
    POST-ClusterSdnDns-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - powerdns
        reversev6mask:
          type: integer
        ttl:
          type: integer
        reversemaskv6:
          type: integer
        url:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        dns:
          type: string
        key:
          type: string
    NodesLxcFirewallRefs:
      type: array
      items:
        type: object
        properties:
          scope:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          comment:
            type: string
          name:
            type: string
          ref:
            type: string
    NodesAptVersions:
      type: array
      items:
        type: object
        properties: {}
    ClusterJobsScheduleanalyze:
      type: array
      items:
        type: object
        properties:
          utc:
            type: string
          timestamp:
            type: integer
    NodesLxcFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    NodesVersion:
      type: object
      properties:
        release:
          type: string
        repoid:
          type: string
        version:
          type: string
    ClusterNotificationsEndpointsSmtp-GET:
      type: array
      items:
        type: object
        properties:
          mailto:
            items:
              format: email-or-username
              type: string
            type: array
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          mailto-user:
            items:
              format: pve-userid
              type: string
            type: array
          comment:
            type: string
          author:
            type: string
          disable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          server:
            type: string
          from-address:
            type: string
          username:
            type: string
          port:
            type: integer
          name:
            type: string
          mode:
            type: string
            enum:
            - insecure
            - starttls
            - tls
    GET-NodesStorageImportmetadata-RB:
      type: object
      properties:
        storage:
          type: string
        volume:
          type: string
        node:
          type: string
    PUT-NodesFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        macro:
          maxLength: 128
          type: string
        moveto:
          type: integer
        proto:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        dest:
          maxLength: 512
          type: string
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        comment:
          type: string
        dport:
          type: string
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
        delete:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        icmp-type:
          type: string
        source:
          maxLength: 512
          type: string
        sport:
          type: string
    GET-NodesQemuMigrate-RB:
      type: object
      properties:
        target:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-AccessRoles-RB:
      type: object
      properties:
        privs:
          type: string
        roleid:
          type: string
    PUT-ClusterOptions-RB:
      type: object
      properties:
        crs:
          type: string
        language:
          type: string
          enum:
          - ar
          - ca
          - da
          - de
          - en
          - es
          - eu
          - fa
          - fr
          - hr
          - he
          - it
          - ja
          - ka
          - kr
          - nb
          - nl
          - nn
          - pl
          - pt_BR
          - ru
          - sl
          - sv
          - tr
          - ukr
          - zh_CN
          - zh_TW
        consent-text:
          maxLength: 65536
          type: string
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        tag-style:
          type: string
        migration_unsecure:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        mac_prefix:
          type: string
        registered-tags:
          pattern: (?:(?^i:[a-z0-9_][a-z0-9_\-\+\.]*);)*(?^i:[a-z0-9_][a-z0-9_\-\+\.]*)
          type: string
        migration:
          type: string
        next-id:
          type: string
        description:
          maxLength: 65536
          type: string
        ha:
          type: string
        user-tag-access:
          type: string
        console:
          type: string
          enum:
          - applet
          - vv
          - html5
          - xtermjs
        u2f:
          type: string
        max_workers:
          type: integer
          minimum: 1
        email_from:
          type: string
        delete:
          type: string
        fencing:
          type: string
          enum:
          - watchdog
          - hardware
          - both
        bwlimit:
          type: string
        notify:
          type: string
        http_proxy:
          pattern: http://.*
          type: string
        webauthn:
          type: string
    ClusterCeph:
      type: array
      items:
        type: object
        properties: {}
    NodesQemuStatusCurrent:
      type: object
      properties:
        diskread:
          type: integer
        uptime:
          type: integer
        cpus:
          type: number
        maxdisk:
          type: integer
        qmpstatus:
          type: string
        cpu:
          type: number
        tags:
          type: string
        status:
          type: string
          enum:
          - stopped
          - running
        pid:
          type: integer
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        lock:
          type: string
        spice:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        running-qemu:
          type: string
        clipboard:
          type: string
          enum:
          - vnc
        ha:
          type: object
        serial:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        netin:
          type: integer
        mem:
          type: integer
        netout:
          type: integer
        diskwrite:
          type: integer
        maxmem:
          type: integer
        name:
          type: string
        agent:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        running-machine:
          type: string
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    ClusterFirewallMacros:
      type: array
      items:
        type: object
        properties:
          descr:
            type: string
          macro:
            type: string
    DELETE-NodesQemuSnapshot-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        node:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesDisksList:
      type: array
      items:
        type: object
        properties:
          devpath:
            type: string
          gpt:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          serial:
            type: string
          osdid-list:
            items:
              type: integer
            type: array
          vendor:
            type: string
          health:
            type: string
          used:
            type: string
          model:
            type: string
          osdid:
            type: integer
          parent:
            type: string
          size:
            type: integer
          mounted:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          wwn:
            type: string
    NodesStorageFilerestoreList:
      type: array
      items:
        type: object
        properties:
          filepath:
            type: string
          text:
            type: string
          leaf:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          mtime:
            type: integer
          type:
            type: string
          size:
            type: integer
    NodesServices:
      type: array
      items:
        type: object
        properties: {}
    NodesLxcInterfaces:
      type: array
      items:
        type: object
        properties:
          inet:
            type: string
          hwaddr:
            type: string
          name:
            type: string
          hardware-address:
            type: string
          inet6:
            type: string
          ip-addresses:
            items:
              properties:
                ip-address:
                  description: IP-Address
                  optional: 1
                  type: string
                ip-address-type:
                  description: IP-Family
                  optional: 1
                  type: string
                prefix:
                  description: IP-Prefix
                  optional: 1
                  type: integer
              type: object
            type: array
    DELETE-NodesDisksZfs-RB:
      type: object
      properties:
        cleanup-config:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cleanup-disks:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        name:
          type: string
        node:
          type: string
    NodesNetstat:
      type: array
      items:
        type: object
        properties: {}
    NodesFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    POST-NodesHosts-RB:
      type: object
      properties:
        data:
          type: string
        digest:
          maxLength: 64
          type: string
        node:
          type: string
    PUT-ClusterJobsRealmsync-RB:
      type: object
      properties:
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        schedule:
          maxLength: 128
          type: string
        comment:
          maxLength: 512
          type: string
        enable-new:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        id:
          maxLength: 64
          type: string
        enabled:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          maxLength: 4096
          type: string
    POST-NodesQemuTemplate-RB:
      type: object
      properties:
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    GET-NodesConfig-RB:
      type: object
      properties:
        property:
          type: string
          enum:
          - acme
          - acmedomain0
          - acmedomain1
          - acmedomain2
          - acmedomain3
          - acmedomain4
          - acmedomain5
          - ballooning-target
          - description
          - startall-onboot-delay
          - wakeonlan
        node:
          type: string
    NodesLxcSnapshot:
      type: array
      items:
        type: object
        properties:
          snaptime:
            type: integer
          description:
            type: string
          parent:
            type: string
          name:
            type: string
    GET-NodesQemuMtunnelwebsocket-RB:
      type: object
      properties:
        ticket:
          type: string
        socket:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    ClusterAcmeAccount:
      type: object
      properties:
        account:
          type: object
        tos:
          type: string
        directory:
          pattern: ^https?://.*
          type: string
        location:
          type: string
    PUT-NodesLxcFirewallOptions-RB:
      type: object
      properties:
        node:
          type: string
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ndp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        radv:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ipfilter:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 64
          type: string
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          type: string
        dhcp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        macfilter:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    ClusterStatus:
      type: array
      items:
        type: object
        properties:
          online:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          type:
            type: string
            enum:
            - cluster
            - node
          local:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          nodeid:
            type: integer
          quorate:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          id:
            type: string
          version:
            type: integer
          ip:
            type: string
          level:
            type: string
          name:
            type: string
          nodes:
            type: integer
    GET-NodesScanNfs-RB:
      type: object
      properties:
        server:
          type: string
        node:
          type: string
    ClusterConfigApiversion:
      desciption: 
      type: integer
    GET-ClusterAcmeTos-RB:
      type: object
      properties:
        directory:
          pattern: ^https?://.*
          type: string
    POST-NodesLxcStatusShutdown-RB:
      type: object
      properties:
        timeout:
          type: integer
        forceStop:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    GET-ClusterSdnControllers-RB:
      type: object
      properties:
        controller:
          type: string
        pending:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        running:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesScanLvm:
      type: array
      items:
        type: object
        properties:
          vg:
            type: string
    POST-NodesCephMon-RB:
      type: object
      properties:
        mon-address:
          type: string
        monid:
          type: string
          maxLength: 200
          pattern: '[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?'
        node:
          type: string
    ClusterResources:
      type: array
      items:
        type: object
        properties:
          status:
            type: string
          storage:
            type: string
          name:
            type: string
          disk:
            type: integer
          hastate:
            type: string
          node:
            type: string
          tags:
            type: string
          plugintype:
            type: string
          netout:
            type: integer
          uptime:
            type: integer
          lock:
            type: string
          type:
            type: string
            enum:
            - node
            - storage
            - pool
            - qemu
            - lxc
            - openvz
            - sdn
          vmid:
            minimum: 100
            type: integer
            maximum: 999999999
          netin:
            type: integer
          diskread:
            type: integer
          maxdisk:
            type: integer
          id:
            type: string
          content:
            type: string
          cgroup-mode:
            type: integer
          cpu:
            type: number
          mem:
            type: integer
          template:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          pool:
            type: string
          maxcpu:
            type: number
          diskwrite:
            type: integer
          maxmem:
            type: integer
          level:
            type: string
    POST-NodesQemuAgentSetuserpassword-RB:
      type: object
      properties:
        username:
          type: string
        crypted:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        password:
          type: string
          maxLength: 1024
          minLength: 5
        node:
          type: string
    NodesLxcFeature:
      type: object
      properties:
        hasFeature:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    POST-AccessTicket-RB:
      type: object
      properties:
        realm:
          maxLength: 32
          type: string
        new-format:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        path:
          maxLength: 64
          type: string
        password:
          type: string
        privs:
          maxLength: 64
          type: string
        username:
          maxLength: 64
          type: string
        tfa-challenge:
          type: string
        otp:
          type: string
    ClusterNotificationsMatchers-GET:
      type: array
      items:
        type: object
        properties:
          match-severity:
            items:
              type: string
            type: array
          comment:
            type: string
          disable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          match-calendar:
            items:
              type: string
            type: array
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          match-field:
            items:
              type: string
            type: array
          invert-match:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          target:
            items:
              format: pve-configid
              type: string
            type: array
          name:
            type: string
          mode:
            type: string
            enum:
            - all
            - any
    NodesConfig:
      type: object
      properties:
        wakeonlan:
          type: string
        acmedomain[n]:
          type: string
        startall-onboot-delay:
          type: integer
          maximum: 300
        ballooning-target:
          type: integer
          maximum: 100
        acme:
          type: string
        description:
          maxLength: 65536
          type: string
        digest:
          maxLength: 40
          type: string
    GET-ClusterJobsScheduleanalyze-RB:
      type: object
      properties:
        iterations:
          minimum: 1
          type: integer
          maximum: 100
        starttime:
          type: integer
        schedule:
          maxLength: 128
          type: string
    NodesReplicationLog:
      type: array
      items:
        type: object
        properties:
          "n":
            type: integer
          t:
            type: string
    GET-NodesSyslog-RB:
      type: object
      properties:
        start:
          type: integer
        until:
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
        limit:
          type: integer
        since:
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
        node:
          type: string
        service:
          maxLength: 128
          type: string
    NodesRrddata:
      type: array
      items:
        type: object
        properties: {}
    DELETE-NodesDisksLvmthin-RB:
      type: object
      properties:
        cleanup-config:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        cleanup-disks:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        volume-group:
          type: string
        name:
          type: string
        node:
          type: string
    GET-AccessPermissions-RB:
      type: object
      properties:
        path:
          type: string
        userid:
          pattern: (?^:^(?^:[^\s:/]+)\@(?^:[A-Za-z][A-Za-z0-9\.\-_]+)(?:!(?^:[A-Za-z][A-Za-z0-9\.\-_]+))?$)
          type: string
    NodesCephLog:
      type: array
      items:
        type: object
        properties:
          "n":
            type: integer
          t:
            type: string
    DELETE-ClusterReplication-RB:
      type: object
      properties:
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        keep:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesReplication:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    PUT-Pools-RB:
      type: object
      properties:
        vms:
          type: string
        comment:
          type: string
        storage:
          type: string
        delete:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        poolid:
          type: string
        allow-move:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    GET-NodesDisksList-RB:
      type: object
      properties:
        include-partitions:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        type:
          type: string
          enum:
          - unused
          - journal_disks
        skipsmart:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    NodesCephCfgDb:
      type: array
      items:
        type: object
        properties:
          value:
            type: string
          can_update_at_runtime:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          section:
            type: string
          mask:
            type: string
          level:
            type: string
          name:
            type: string
    ClusterFirewallGroups-GET-AV:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    NodesQemuPending:
      type: array
      items:
        type: object
        properties:
          value:
            type: string
          key:
            type: string
          delete:
            type: integer
            maximum: 2
          pending:
            type: string
    POST-ClusterHaGroups-RB:
      type: object
      properties:
        group:
          type: string
        nodes:
          type: string
        comment:
          maxLength: 4096
          type: string
        restricted:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        nofailback:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        type:
          type: string
          enum:
          - group
    POST-ClusterHaResources-RB:
      type: object
      properties:
        comment:
          maxLength: 4096
          type: string
        group:
          type: string
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        max_relocate:
          type: integer
        max_restart:
          type: integer
        sid:
          type: string
        type:
          type: string
          enum:
          - ct
          - vm
    POST-NodesQemuRemotemigrate-RB:
      type: object
      properties:
        target-bridge:
          type: string
        target-storage:
          type: string
        target-vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        online:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        bwlimit:
          type: integer
          minimum: "0"
        target-endpoint:
          type: string
        delete:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    DELETE-ClusterFirewallRules-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
    AccessUsers-GET:
      type: array
      items:
        type: object
        properties:
          realm-type:
            type: string
          lastname:
            maxLength: 1024
            type: string
          tfa-locked-until:
            type: integer
          comment:
            maxLength: 2048
            type: string
          keys:
            pattern: '[0-9a-zA-Z!=]{0,4096}'
            type: string
          totp-locked:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          expire:
            type: integer
          tokens:
            items:
              properties:
                comment:
                  optional: 1
                  type: string
                expire:
                  description: API token expiration date (seconds since epoch). '0' means no expiration date.
                  minimum: 0
                  optional: 1
                  type: integer
                privsep:
                  default: 1
                  description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
                  optional: 1
                  type: boolean
                tokenid:
                  description: User-specific token identifier.
                  pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
                  type: string
              type: object
            type: array
          groups:
            type: string
          enable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          email:
            maxLength: 254
            type: string
          firstname:
            maxLength: 1024
            type: string
          userid:
            maxLength: 64
            type: string
    NodesQemuFirewallIpset:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            maxLength: 64
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
    AccessUsersTfa:
      type: object
      properties:
        user:
          type: string
          enum:
          - oath
          - u2f
        types:
          items:
            description: A TFA type.
            enum:
            - totp
            - u2f
            - yubico
            - webauthn
            - recovedry
            type: string
          type: array
        realm:
          type: string
          enum:
          - oath
          - yubico
    PUT-ClusterNotificationsEndpointsGotify-RB:
      type: object
      properties:
        comment:
          type: string
        token:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        server:
          type: string
        delete:
          items:
            format: pve-configid
            type: string
          type: array
        digest:
          maxLength: 64
          type: string
        name:
          type: string
    ClusterNotificationsEndpointsSmtp:
      type: object
      properties:
        mailto:
          items:
            format: email-or-username
            type: string
          type: array
        mailto-user:
          items:
            format: pve-userid
            type: string
          type: array
        username:
          type: string
        comment:
          type: string
        author:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        server:
          type: string
        from-address:
          type: string
        digest:
          maxLength: 64
          type: string
        port:
          type: integer
        name:
          type: string
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
    POST-NodesQemuMonitor-RB:
      type: object
      properties:
        command:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    AccessTfa-GET-AV:
      type: array
      items:
        type: object
        properties:
          created:
            type: integer
          description:
            type: string
          enable:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          id:
            type: string
          type:
            type: string
            enum:
            - totp
            - u2f
            - webauthn
            - recovery
            - yubico
    PUT-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        cidr:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        digest:
          maxLength: 64
          type: string
        node:
          type: string
        rename:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
    DELETE-NodesLxcSnapshot-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        node:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    NodesFirewallLog:
      type: array
      items:
        type: object
        properties:
          "n":
            type: integer
          t:
            type: string
    GET-AccessUsersTfa-RB:
      type: object
      properties:
        multiple:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        userid:
          maxLength: 64
          type: string
    DELETE-NodesQemuFirewallRules-RB:
      type: object
      properties:
        pos:
          type: integer
        digest:
          maxLength: 64
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-NodesLxcSnapshotRollback-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        start:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    PUT-NodesQemuSnapshotConfig-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        description:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    AccessAcl:
      type: array
      items:
        type: object
        properties:
          path:
            type: string
          propagate:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          roleid:
            type: string
          type:
            type: string
            enum:
            - user
            - group
            - token
          ugid:
            type: string
    POST-AccessOpenidLogin-RB:
      type: object
      properties:
        state:
          maxLength: 1024
          type: string
        redirect-url:
          maxLength: 255
          type: string
        code:
          maxLength: 4096
          type: string
    NodesLxcConfig:
      type: object
      properties:
        cpulimit:
          type: number
          maximum: 8192
        memory:
          type: integer
          minimum: 16
        rootfs:
          type: string
        searchdomain:
          type: string
        unprivileged:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        debug:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        nameserver:
          type: string
        startup:
          type: string
        tty:
          type: integer
          maximum: 6
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        dev[n]:
          type: string
        hookscript:
          type: string
        onboot:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        swap:
          type: integer
        lxc:
          items:
            items:
              type: string
            type: array
          type: array
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        hostname:
          maxLength: 255
          type: string
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
        description:
          maxLength: 8192
          type: string
        cores:
          minimum: 1
          type: integer
          maximum: 8192
        net[n]:
          type: string
        protection:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        timezone:
          type: string
        unused[n]:
          type: string
        mp[n]:
          type: string
        cpuunits:
          type: integer
          maximum: 500000
        console:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        template:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          type: string
        features:
          type: string
        tags:
          type: string
    POST-NodesQemuMtunnel-RB:
      type: object
      properties:
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        bridges:
          type: string
        storages:
          type: string
        node:
          type: string
    GET-NodesQemuCloudinitDump-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - user
          - network
          - meta
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        node:
          type: string
    POST-NodesSubscription-RB:
      type: object
      properties:
        node:
          type: string
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    GET-NodesVncwebsocket-RB:
      type: object
      properties:
        port:
          minimum: 5900
          type: integer
          maximum: 5999
        vncticket:
          maxLength: 512
          type: string
        node:
          type: string
    NodesScanLvmthin:
      type: array
      items:
        type: object
        properties:
          lv:
            type: string
    ClusterSdnZones:
      type: array
      items:
        type: object
        properties:
          dhcp:
            type: string
          type:
            type: string
          mtu:
            type: integer
          nodes:
            type: string
          ipam:
            type: string
          state:
            type: string
          dnszone:
            type: string
          zone:
            type: string
          reversedns:
            type: string
          dns:
            type: string
          pending:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    NodesQemuFirewallAliases:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
    DELETE-ClusterFirewallAliases-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
    PUT-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        cidr:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        digest:
          maxLength: 64
          type: string
        node:
          type: string
        rename:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
    POST-ClusterConfig-RB:
      type: object
      properties:
        clustername:
          maxLength: 15
          type: string
        votes:
          type: integer
          minimum: 1
        nodeid:
          type: integer
          minimum: 1
        link[n]:
          type: string
    PUT-NodesQemuUnlink-RB:
      type: object
      properties:
        node:
          type: string
        idlist:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        force:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
    AccessRoles-GET:
      type: array
      items:
        type: object
        properties:
          roleid:
            type: string
          privs:
            type: string
          special:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
    ClusterSdnVnets:
      type: array
      items:
        type: object
        properties: {}
    DELETE-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        vnet:
          type: string
        ip:
          type: string
        mac:
          type: string
    PUT-NodesQemuFirewallOptions-RB:
      type: object
      properties:
        node:
          type: string
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ndp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        radv:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        ipfilter:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        digest:
          maxLength: 64
          type: string
        enable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          type: string
        dhcp:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        macfilter:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    POST-ClusterReplication-RB:
      type: object
      properties:
        source:
          type: string
        remove_job:
          type: string
          enum:
          - local
          - full
        comment:
          maxLength: 4096
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        schedule:
          maxLength: 128
          type: string
        target:
          type: string
        type:
          type: string
          enum:
          - local
        rate:
          type: number
          minimum: 1
    PUT-ClusterNotificationsMatchers-RB:
      type: object
      properties:
        match-severity:
          items:
            type: string
          type: array
        invert-match:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
        disable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        match-calendar:
          items:
            type: string
          type: array
        delete:
          items:
            format: pve-configid
            type: string
          type: array
        match-field:
          items:
            type: string
          type: array
        digest:
          maxLength: 64
          type: string
        target:
          items:
            format: pve-configid
            type: string
          type: array
        name:
          type: string
        mode:
          type: string
          enum:
          - all
          - any
    POST-NodesCephOsd-RB:
      type: object
      properties:
        wal_dev_size:
          type: number
          minimum: 0.5
        wal_dev:
          type: string
        db_dev_size:
          type: number
          minimum: 1
        dev:
          type: string
        osds-per-device:
          type: integer
          minimum: "1"
        db_dev:
          type: string
        encrypted:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
        crush-device-class:
          type: string
    PUT-ClusterSdnVnets-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        tag:
          type: integer
        isolate-ports:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          maxLength: 4096
          type: string
        vlanaware:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        alias:
          type: string
          maxLength: 256
          pattern: (?^i:[\(\)-_.\w\d\s]{0,256})
        zone:
          type: string
        vnet:
          type: string
    ClusterHaResources-GET:
      type: array
      items:
        type: object
        properties:
          sid:
            type: string
    POST-NodesDisksDirectory-RB:
      type: object
      properties:
        device:
          type: string
        add_storage:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        filesystem:
          type: string
          enum:
          - ext4
          - xfs
        name:
          type: string
        node:
          type: string
    NodesScan:
      type: array
      items:
        type: object
        properties:
          method:
            type: string
    NodesSdnZonesContent:
      type: array
      items:
        type: object
        properties:
          vnet:
            type: string
          status:
            type: string
          statusmsg:
            type: string
    POST-NodesQemuStatusSuspend-RB:
      type: object
      properties:
        todisk:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        statestorage:
          type: string
        vmid:
          minimum: 100
          type: integer
          maximum: 999999999
        skiplock:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        node:
          type: string
    DELETE-NodesCephOsd-RB:
      type: object
      properties:
        cleanup:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        osdid:
          type: integer
        node:
          type: string
    NodesStorageRrddata:
      type: array
      items:
        type: object
        properties: {}
    PUT-AccessUsersToken-RB:
      type: object
      properties:
        expire:
          type: integer
        privsep:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        comment:
          type: string
        tokenid:
          pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
          type: string
        userid:
          maxLength: 64
          type: string
    PUT-ClusterMappingPci-RB:
      type: object
      properties:
        live-migration-capable:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        id:
          type: string
        mdev:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        delete:
          maxLength: 4096
          type: string
        description:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        map:
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. Used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              iommugroup:
                description: The IOMMU group in which the device is to be expected in. Used for detecting hardware changes.
                optional: 1
                type: integer
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the device. If the function is omitted, the whole device is mapped. In that case use the attributes of the first device. You can give multiple paths as a semicolon seperated list, the first available will then be chosen on guest start.
                pattern: (?:[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?;)*[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?
                type: string
              subsystem-id:
                description: The subsystem vendor and device ID that is expected. Used for detecting hardware changes.
                optional: 1
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
            type: string
          type: array
    PUT-NodesCephPool-RB:
      type: object
      properties:
        min_size:
          minimum: 1
          type: integer
          title: Min Size
          maximum: 7
        target_size_ratio:
          type: number
          title: PG Autoscale Target Ratio
        pg_autoscale_mode:
          type: string
          title: PG Autoscale Mode
          enum:
          - "on"
          - "off"
          - warn
        crush_rule:
          type: string
          title: Crush Rule Name
        application:
          type: string
          title: Application
          enum:
          - rbd
          - cephfs
          - rgw
        node:
          type: string
        pg_num_min:
          type: integer
          title: min. PG Num
          maximum: 32768
        target_size:
          type: string
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
          title: PG Autoscale Target Size
        pg_num:
          minimum: 1
          type: integer
          title: PG Num
          maximum: 32768
        name:
          type: string
          pattern: (?^:^[^:/\s]+$)
          title: Name
        size:
          minimum: 1
          type: integer
          title: Size
          maximum: 7
    NodesQemuVncwebsocket:
      type: object
      properties:
        port:
          type: string
    GET-NodesTasksLog-RB:
      type: object
      properties:
        limit:
          type: integer
        start:
          type: integer
        download:
          format: int32
          type: integer
          maximum: 1
          minimum: 0
        upid:
          type: string
        node:
          type: string
    NodesCapabilitiesQemuCpu:
      type: array
      items:
        type: object
        properties:
          custom:
            format: int32
            type: integer
            maximum: 1
            minimum: 0
          vendor:
            type: string
          name:
            type: string

