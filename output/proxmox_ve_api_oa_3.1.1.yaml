openapi: 3.1.1
info:
  title: Proxmox VE
  summary: Module to access Proxmox VE Api
  description: Generated module to access all Proxmox VE Api Endpoints
  termsOfService: ""
  contact:
    name: Timo Wolf
    url: ""
    email: ""
  version: "0.2"
  licence:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
jsonSchemaDialect: https://spec.openapis.org/oas/3.1/dialect/base
paths:
  /access:
    summary: access
    get:
      tags:
      - access
      description: Directory index.
      responses: ""
      summary: Directory index.
      operationId: getAccess
  /access/acl:
    summary: acl
    get:
      tags:
      - access
      description: Get Access Control List (ACLs).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessAcl'
      summary: Get Access Control List (ACLs).
      operationId: getAccessAcl
    put:
      description: Update Access Control List (add or remove permissions).
      responses:
        "200":
          description: OK
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessAcl-RB'
        description: Update Access Control List (add or remove permissions).
      operationId: setAccessAcl
      summary: Update Access Control List (add or remove permissions).
  /access/domains:
    post:
      description: Add an authentication server.
      responses:
        "200":
          description: OK
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessDomains-RB'
        description: Add an authentication server.
      operationId: newAccessDomains
      summary: Add an authentication server.
    summary: domains
    get:
      tags:
      - access
      description: Authentication domain index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDomains'
      summary: Authentication domain index.
      operationId: getAccessDomains
  /access/domains/{realm}:
    get:
      description: Get auth server configuration.
      responses: ""
      parameter:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
      tags:
      - access
      operationId: getAccessDomainsByRealm
      summary: Get auth server configuration.
    summary: realm
    delete:
      description: Delete an authentication server.
      responses:
        "200":
          description: OK
      parameter:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
      tags:
      - access
      operationId: removeAccessDomainsByRealm
      summary: Delete an authentication server.
    put:
      description: Update authentication server settings.
      responses:
        "200":
          description: OK
      parameter:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessDomains-RB'
        description: Update authentication server settings.
      operationId: setAccessDomainsByRealm
      summary: Update authentication server settings.
  /access/domains/{realm}/sync:
    summary: sync
    post:
      description: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
      responses: ""
      parameter:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessDomainsSync-RB'
        description: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
      operationId: newAccessDomainsSyncByRealm
      summary: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
  /access/groups:
    post:
      description: Create new group.
      responses:
        "200":
          description: OK
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessGroups-RB'
        description: Create new group.
      operationId: newAccessGroups
      summary: Create new group.
    summary: groups
    get:
      tags:
      - access
      description: Group index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroups-GET'
      summary: Group index.
      operationId: getAccessGroups
  /access/groups/{groupid}:
    get:
      description: Get group configuration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroups'
      parameter:
      - name: groupid
        in: path
        description: 
        required: true
      tags:
      - access
      operationId: getAccessGroupsByGroupid
      summary: Get group configuration.
    summary: groupid
    delete:
      description: Delete group.
      responses:
        "200":
          description: OK
      parameter:
      - name: groupid
        in: path
        description: 
        required: true
      tags:
      - access
      operationId: removeAccessGroupsByGroupid
      summary: Delete group.
    put:
      description: Update group data.
      responses:
        "200":
          description: OK
      parameter:
      - name: groupid
        in: path
        description: 
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessGroups-RB'
        description: Update group data.
      operationId: setAccessGroupsByGroupid
      summary: Update group data.
  /access/openid:
    summary: openid
    get:
      tags:
      - access
      description: Directory index.
      responses: ""
      summary: Directory index.
      operationId: getAccessOpenid
  /access/openid/auth-url:
    summary: auth-url
    post:
      description: Get the OpenId Authorization Url for the specified realm.
      responses: ""
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessOpenidAuthurl-RB'
        description: Get the OpenId Authorization Url for the specified realm.
      operationId: newAccessOpenidAuthurl
      summary: Get the OpenId Authorization Url for the specified realm.
  /access/openid/login:
    summary: login
    post:
      description: ' Verify OpenID authorization code and create a ticket.'
      responses: ""
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessOpenidLogin-RB'
        description: ' Verify OpenID authorization code and create a ticket.'
      operationId: newAccessOpenidLogin
      summary: ' Verify OpenID authorization code and create a ticket.'
  /access/password:
    put:
      description: Change user password.
      responses:
        "200":
          description: OK
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessPassword-RB'
        description: Change user password.
      operationId: setAccessPassword
      summary: Change user password.
    summary: password
  /access/permissions:
    summary: permissions
    get:
      description: Retrieve effective permissions of given user/token.
      responses: ""
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessPermissions-RB'
        description: Retrieve effective permissions of given user/token.
      operationId: getAccessPermissions
      summary: Retrieve effective permissions of given user/token.
  /access/roles:
    post:
      description: Create new role.
      responses:
        "200":
          description: OK
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessRoles-RB'
        description: Create new role.
      operationId: newAccessRoles
      summary: Create new role.
    summary: roles
    get:
      tags:
      - access
      description: Role index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRoles-GET'
      summary: Role index.
      operationId: getAccessRoles
  /access/roles/{roleid}:
    get:
      description: Get role configuration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRoles'
      parameter:
      - name: roleid
        in: path
        description: 
        required: true
      tags:
      - access
      operationId: getAccessRolesByRoleid
      summary: Get role configuration.
    summary: roleid
    delete:
      description: Delete role.
      responses:
        "200":
          description: OK
      parameter:
      - name: roleid
        in: path
        description: 
        required: true
      tags:
      - access
      operationId: removeAccessRolesByRoleid
      summary: Delete role.
    put:
      description: Update an existing role.
      responses:
        "200":
          description: OK
      parameter:
      - name: roleid
        in: path
        description: 
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessRoles-RB'
        description: Update an existing role.
      operationId: setAccessRolesByRoleid
      summary: Update an existing role.
  /access/tfa:
    summary: tfa
    get:
      tags:
      - access
      description: List TFA configurations of users.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET'
      summary: List TFA configurations of users.
      operationId: getAccessTfa
  /access/tfa/{userid}:
    post:
      description: Add a TFA entry for a user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa'
      parameter:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessTfa-RB'
        description: Add a TFA entry for a user.
      operationId: newAccessTfaByUserid
      summary: Add a TFA entry for a user.
    summary: userid
    get:
      description: List TFA configurations of users.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET-AV'
      parameter:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      operationId: getAccessTfaByUserid
      summary: List TFA configurations of users.
  /access/tfa/{userid}/{id}:
    get:
      description: Fetch a requested TFA entry if present.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET'
      parameter:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      operationId: getAccessTfaByUseridAndId
      summary: Fetch a requested TFA entry if present.
    summary: id
    delete:
      description: Delete a TFA entry by ID.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-AccessTfa-RB'
        description: Delete a TFA entry by ID.
      operationId: removeAccessTfaByUseridAndId
      summary: Delete a TFA entry by ID.
    put:
      description: Add a TFA entry for a user.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessTfa-RB'
        description: Add a TFA entry for a user.
      operationId: setAccessTfaByUseridAndId
      summary: Add a TFA entry for a user.
  /access/ticket:
    post:
      description: Create or verify authentication ticket.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTicket'
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessTicket-RB'
        description: Create or verify authentication ticket.
      operationId: newAccessTicket
      summary: Create or verify authentication ticket.
    summary: ticket
    get:
      tags:
      - access
      description: Dummy. Useful for formatters which want to provide a login page.
      responses:
        "200":
          description: OK
      summary: Dummy. Useful for formatters which want to provide a login page.
      operationId: getAccessTicket
  /access/users:
    post:
      description: Create new user.
      responses:
        "200":
          description: OK
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessUsers-RB'
        description: Create new user.
      operationId: newAccessUsers
      summary: Create new user.
    summary: users
    get:
      description: User index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsers-GET'
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessUsers-RB'
        description: User index.
      operationId: getAccessUsers
      summary: User index.
  /access/users/{userid}:
    get:
      description: Get user configuration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsers'
      parameter:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      operationId: getAccessUsersByUserid
      summary: Get user configuration.
    summary: userid
    delete:
      description: Delete user.
      responses:
        "200":
          description: OK
      parameter:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      operationId: removeAccessUsersByUserid
      summary: Delete user.
    put:
      description: Update user configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessUsers-RB'
        description: Update user configuration.
      operationId: setAccessUsersByUserid
      summary: Update user configuration.
  /access/users/{userid}/tfa:
    summary: tfa
    get:
      description: Get user TFA types (Personal and Realm).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersTfa'
      parameter:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessUsersTfa-RB'
        description: Get user TFA types (Personal and Realm).
      operationId: getAccessUsersTfaByUserid
      summary: Get user TFA types (Personal and Realm).
  /access/users/{userid}/token:
    summary: token
    get:
      description: Get user API tokens.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-GET'
      parameter:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      operationId: getAccessUsersTokenByUserid
      summary: Get user API tokens.
  /access/users/{userid}/token/{tokenid}:
    post:
      description: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-POST'
      parameter:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessUsersToken-RB'
        description: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
      operationId: newAccessUsersTokenByUseridAndTokenid
      summary: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
    get:
      description: Get specific API token information.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken'
      parameter:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      operationId: getAccessUsersTokenByUseridAndTokenid
      summary: Get specific API token information.
    summary: tokenid
    delete:
      description: Remove API token for a specific user.
      responses:
        "200":
          description: OK
      parameter:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      operationId: removeAccessUsersTokenByUseridAndTokenid
      summary: Remove API token for a specific user.
    put:
      description: Update API token for a specific user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-PUT'
      parameter:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessUsersToken-RB'
        description: Update API token for a specific user.
      operationId: setAccessUsersTokenByUseridAndTokenid
      summary: Update API token for a specific user.
  /access/users/{userid}/unlock-tfa:
    put:
      description: Unlock a user's TFA authentication.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersUnlocktfa'
      parameter:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
      tags:
      - access
      operationId: setAccessUsersUnlocktfaByUserid
      summary: Unlock a user's TFA authentication.
    summary: unlock-tfa
  /cluster:
    summary: cluster
    get:
      tags:
      - cluster
      description: Cluster index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      summary: Cluster index.
      operationId: getCluster
  /cluster/acme:
    summary: acme
    get:
      tags:
      - cluster
      description: ACMEAccount index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcme'
      summary: ACMEAccount index.
      operationId: getClusterAcme
  /cluster/acme/account:
    post:
      description: Register a new ACME account with CA.
      responses: ""
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterAcmeAccount-RB'
        description: Register a new ACME account with CA.
      operationId: newClusterAcmeAccount
      summary: Register a new ACME account with CA.
    summary: account
    get:
      tags:
      - cluster
      description: ACMEAccount index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeAccount-GET'
      summary: ACMEAccount index.
      operationId: getClusterAcmeAccount
  /cluster/acme/account/{name}:
    get:
      description: Return existing ACME account information.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeAccount'
      parameter:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
      tags:
      - cluster
      operationId: getClusterAcmeAccountByName
      summary: Return existing ACME account information.
    summary: name
    delete:
      description: Deactivate existing ACME account at CA.
      responses: ""
      parameter:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
      tags:
      - cluster
      operationId: removeClusterAcmeAccountByName
      summary: Deactivate existing ACME account at CA.
    put:
      description: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
      responses: ""
      parameter:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterAcmeAccount-RB'
        description: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
      operationId: setClusterAcmeAccountByName
      summary: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
  /cluster/acme/challenge-schema:
    summary: challenge-schema
    get:
      tags:
      - cluster
      description: Get schema of ACME challenge types.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeChallengeschema'
      summary: Get schema of ACME challenge types.
      operationId: getClusterAcmeChallengeschema
  /cluster/acme/directories:
    summary: directories
    get:
      tags:
      - cluster
      description: Get named known ACME directory endpoints.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeDirectories'
      summary: Get named known ACME directory endpoints.
      operationId: getClusterAcmeDirectories
  /cluster/acme/meta:
    summary: meta
    get:
      description: Retrieve ACME Directory Meta Information
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeMeta'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmeMeta-RB'
        description: Retrieve ACME Directory Meta Information
      operationId: getClusterAcmeMeta
      summary: Retrieve ACME Directory Meta Information
  /cluster/acme/plugins:
    post:
      description: Add ACME plugin configuration.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterAcmePlugins-RB'
        description: Add ACME plugin configuration.
      operationId: newClusterAcmePlugins
      summary: Add ACME plugin configuration.
    summary: plugins
    get:
      description: ACME plugin index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmePlugins'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmePlugins-RB'
        description: ACME plugin index.
      operationId: getClusterAcmePlugins
      summary: ACME plugin index.
  /cluster/acme/plugins/{id}:
    get:
      description: Get ACME plugin configuration.
      responses: ""
      parameter:
      - name: id
        in: path
        description: Unique identifier for ACME plugin instance.
        required: true
      tags:
      - cluster
      operationId: getClusterAcmePluginsById
      summary: Get ACME plugin configuration.
    summary: id
    delete:
      description: Delete ACME plugin configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: Unique identifier for ACME plugin instance.
        required: true
      tags:
      - cluster
      operationId: removeClusterAcmePluginsById
      summary: Delete ACME plugin configuration.
    put:
      description: Update ACME plugin configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: ACME Plugin ID name
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterAcmePlugins-RB'
        description: Update ACME plugin configuration.
      operationId: setClusterAcmePluginsById
      summary: Update ACME plugin configuration.
  /cluster/acme/tos:
    summary: tos
    get:
      description: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
      responses: ""
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmeTos-RB'
        description: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
      operationId: getClusterAcmeTos
      summary: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
  /cluster/backup:
    post:
      description: Create new vzdump backup job.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterBackup-RB'
        description: Create new vzdump backup job.
      operationId: newClusterBackup
      summary: Create new vzdump backup job.
    summary: backup
    get:
      tags:
      - cluster
      description: List vzdump backup schedule.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackup'
      summary: List vzdump backup schedule.
      operationId: getClusterBackup
  /cluster/backup-info:
    summary: backup-info
    get:
      tags:
      - cluster
      description: Index for backup info related endpoints
      responses: ""
      summary: Index for backup info related endpoints
      operationId: getClusterBackupinfo
  /cluster/backup-info/not-backed-up:
    summary: not-backed-up
    get:
      tags:
      - cluster
      description: Shows all guests which are not covered by any backup job.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackupinfoNotbackedup'
      summary: Shows all guests which are not covered by any backup job.
      operationId: getClusterBackupinfoNotbackedup
  /cluster/backup/{id}:
    get:
      description: Read vzdump backup job definition.
      responses: ""
      parameter:
      - name: id
        in: path
        description: The job ID.
        required: true
      tags:
      - cluster
      operationId: getClusterBackupById
      summary: Read vzdump backup job definition.
    summary: id
    delete:
      description: Delete vzdump backup job definition.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: The job ID.
        required: true
      tags:
      - cluster
      operationId: removeClusterBackupById
      summary: Delete vzdump backup job definition.
    put:
      description: Update vzdump backup job definition.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: The job ID.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterBackup-RB'
        description: Update vzdump backup job definition.
      operationId: setClusterBackupById
      summary: Update vzdump backup job definition.
  /cluster/backup/{id}/included_volumes:
    summary: includedvolumes
    get:
      description: Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackupIncludedvolumes'
      parameter:
      - name: id
        in: path
        description: The job ID.
        required: true
      tags:
      - cluster
      operationId: getClusterBackupIncludedvolumesById
      summary: Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.
  /cluster/ceph:
    summary: ceph
    get:
      tags:
      - cluster
      description: Cluster ceph index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCeph'
      summary: Cluster ceph index.
      operationId: getClusterCeph
  /cluster/ceph/flags:
    summary: flags
    get:
      tags:
      - cluster
      description: get the status of all ceph flags
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephFlags'
      summary: get the status of all ceph flags
      operationId: getClusterCephFlags
    put:
      description: Set/Unset multiple ceph flags at once.
      responses: ""
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterCephFlags-RB'
        description: Set/Unset multiple ceph flags at once.
      operationId: setClusterCephFlags
      summary: Set/Unset multiple ceph flags at once.
  /cluster/ceph/flags/{flag}:
    summary: flag
    get:
      description: Get the status of a specific ceph flag.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephFlags-GET'
      parameter:
      - name: flag
        in: path
        description: The name of the flag name to get.
        required: true
      tags:
      - cluster
      operationId: getClusterCephFlagsByFlag
      summary: Get the status of a specific ceph flag.
    put:
      description: Set or clear (unset) a specific ceph flag
      responses:
        "200":
          description: OK
      parameter:
      - name: flag
        in: path
        description: The ceph flag to update
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterCephFlags-RB'
        description: Set or clear (unset) a specific ceph flag
      operationId: setClusterCephFlagsByFlag
      summary: Set or clear (unset) a specific ceph flag
  /cluster/ceph/metadata:
    summary: metadata
    get:
      description: Get ceph metadata.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephMetadata'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterCephMetadata-RB'
        description: Get ceph metadata.
      operationId: getClusterCephMetadata
      summary: Get ceph metadata.
  /cluster/ceph/status:
    summary: status
    get:
      tags:
      - cluster
      description: Get ceph status.
      responses: ""
      summary: Get ceph status.
      operationId: getClusterCephStatus
  /cluster/config:
    post:
      description: Generate new cluster configuration. If no links given, default to local IP address as link0.
      responses: ""
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfig-RB'
        description: Generate new cluster configuration. If no links given, default to local IP address as link0.
      operationId: newClusterConfig
      summary: Generate new cluster configuration. If no links given, default to local IP address as link0.
    summary: config
    get:
      tags:
      - cluster
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfig'
      summary: Directory index.
      operationId: getClusterConfig
  /cluster/config/apiversion:
    summary: apiversion
    get:
      tags:
      - cluster
      description: Return the version of the cluster join API available on this node.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigApiversion'
      summary: Return the version of the cluster join API available on this node.
      operationId: getClusterConfigApiversion
  /cluster/config/join:
    post:
      description: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
      responses: ""
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfigJoin-RB'
        description: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
      operationId: newClusterConfigJoin
      summary: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
    summary: join
    get:
      description: Get information needed to join this cluster over the connected node.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigJoin'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterConfigJoin-RB'
        description: Get information needed to join this cluster over the connected node.
      operationId: getClusterConfigJoin
      summary: Get information needed to join this cluster over the connected node.
  /cluster/config/nodes:
    summary: nodes
    get:
      tags:
      - cluster
      description: Corosync node list.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigNodes-GET'
      summary: Corosync node list.
      operationId: getClusterConfigNodes
  /cluster/config/nodes/{node}:
    post:
      description: Adds a node to the cluster configuration. This call is for internal use.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigNodes'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfigNodes-RB'
        description: Adds a node to the cluster configuration. This call is for internal use.
      operationId: newClusterConfigNodesByNode
      summary: Adds a node to the cluster configuration. This call is for internal use.
    summary: node
    delete:
      description: Removes a node from the cluster configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - cluster
      operationId: removeClusterConfigNodesByNode
      summary: Removes a node from the cluster configuration.
  /cluster/config/qdevice:
    summary: qdevice
    get:
      tags:
      - cluster
      description: Get QDevice status
      responses: ""
      summary: Get QDevice status
      operationId: getClusterConfigQdevice
  /cluster/config/totem:
    summary: totem
    get:
      tags:
      - cluster
      description: Get corosync totem protocol settings.
      responses: ""
      summary: Get corosync totem protocol settings.
      operationId: getClusterConfigTotem
  /cluster/firewall:
    summary: firewall
    get:
      tags:
      - cluster
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewall'
      summary: Directory index.
      operationId: getClusterFirewall
  /cluster/firewall/aliases:
    post:
      description: Create IP or Network Alias.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallAliases-RB'
        description: Create IP or Network Alias.
      operationId: newClusterFirewallAliases
      summary: Create IP or Network Alias.
    summary: aliases
    get:
      tags:
      - cluster
      description: List aliases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallAliases'
      summary: List aliases
      operationId: getClusterFirewallAliases
  /cluster/firewall/aliases/{name}:
    get:
      description: Read alias.
      responses: ""
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      tags:
      - cluster
      operationId: getClusterFirewallAliasesByName
      summary: Read alias.
    summary: name
    delete:
      description: Remove IP or Network alias.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallAliases-RB'
        description: Remove IP or Network alias.
      operationId: removeClusterFirewallAliasesByName
      summary: Remove IP or Network alias.
    put:
      description: Update IP or Network alias.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallAliases-RB'
        description: Update IP or Network alias.
      operationId: setClusterFirewallAliasesByName
      summary: Update IP or Network alias.
  /cluster/firewall/groups:
    post:
      description: Create new security group.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallGroups-RB'
        description: Create new security group.
      operationId: newClusterFirewallGroups
      summary: Create new security group.
    summary: groups
    get:
      tags:
      - cluster
      description: List security groups.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups-GET'
      summary: List security groups.
      operationId: getClusterFirewallGroups
  /cluster/firewall/groups/{group}:
    post:
      description: Create new rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: group
        in: path
        description: Security Group name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallGroups-RB'
        description: Create new rule.
      operationId: newClusterFirewallGroupsByGroup
      summary: Create new rule.
    get:
      description: List rules.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups-GET-AV'
      parameter:
      - name: group
        in: path
        description: Security Group name.
        required: true
      tags:
      - cluster
      operationId: getClusterFirewallGroupsByGroup
      summary: List rules.
    summary: group
    delete:
      description: Delete security group.
      responses:
        "200":
          description: OK
      parameter:
      - name: group
        in: path
        description: Security Group name.
        required: true
      tags:
      - cluster
      operationId: removeClusterFirewallGroupsByGroup
      summary: Delete security group.
  /cluster/firewall/groups/{group}/{pos}:
    get:
      description: Get single rule data.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups'
      parameter:
      - name: group
        in: path
        description: Security Group name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - cluster
      operationId: getClusterFirewallGroupsByGroupAndPos
      summary: Get single rule data.
    summary: pos
    delete:
      description: Delete rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: group
        in: path
        description: Security Group name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallGroups-RB'
        description: Delete rule.
      operationId: removeClusterFirewallGroupsByGroupAndPos
      summary: Delete rule.
    put:
      description: Modify rule data.
      responses:
        "200":
          description: OK
      parameter:
      - name: group
        in: path
        description: Security Group name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallGroups-RB'
        description: Modify rule data.
      operationId: setClusterFirewallGroupsByGroupAndPos
      summary: Modify rule data.
  /cluster/firewall/ipset:
    post:
      description: Create new IPSet
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallIpset-RB'
        description: Create new IPSet
      operationId: newClusterFirewallIpset
      summary: Create new IPSet
    summary: ipset
    get:
      tags:
      - cluster
      description: List IPSets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallIpset'
      summary: List IPSets
      operationId: getClusterFirewallIpset
  /cluster/firewall/ipset/{name}:
    post:
      description: Add IP or Network to IPSet.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallIpset-RB'
        description: Add IP or Network to IPSet.
      operationId: newClusterFirewallIpsetByName
      summary: Add IP or Network to IPSet.
    get:
      description: List IPSet content
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallIpset-GET'
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      tags:
      - cluster
      operationId: getClusterFirewallIpsetByName
      summary: List IPSet content
    summary: name
    delete:
      description: Delete IPSet
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallIpset-RB'
        description: Delete IPSet
      operationId: removeClusterFirewallIpsetByName
      summary: Delete IPSet
  /cluster/firewall/ipset/{name}/{cidr}:
    get:
      description: Read IP or Network settings from IPSet.
      responses: ""
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      tags:
      - cluster
      operationId: getClusterFirewallIpsetByNameAndCidr
      summary: Read IP or Network settings from IPSet.
    summary: cidr
    delete:
      description: Remove IP or Network from IPSet.
      responses:
        "200":
          description: OK
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallIpset-RB'
        description: Remove IP or Network from IPSet.
      operationId: removeClusterFirewallIpsetByNameAndCidr
      summary: Remove IP or Network from IPSet.
    put:
      description: Update IP or Network settings
      responses:
        "200":
          description: OK
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallIpset-RB'
        description: Update IP or Network settings
      operationId: setClusterFirewallIpsetByNameAndCidr
      summary: Update IP or Network settings
  /cluster/firewall/macros:
    summary: macros
    get:
      tags:
      - cluster
      description: List available macros
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallMacros'
      summary: List available macros
      operationId: getClusterFirewallMacros
  /cluster/firewall/options:
    summary: options
    get:
      tags:
      - cluster
      description: Get Firewall options.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallOptions'
      summary: Get Firewall options.
      operationId: getClusterFirewallOptions
    put:
      description: Set Firewall options.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallOptions-RB'
        description: Set Firewall options.
      operationId: setClusterFirewallOptions
      summary: Set Firewall options.
  /cluster/firewall/refs:
    summary: refs
    get:
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRefs'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterFirewallRefs-RB'
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      operationId: getClusterFirewallRefs
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
  /cluster/firewall/rules:
    post:
      description: Create new rule.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallRules-RB'
        description: Create new rule.
      operationId: newClusterFirewallRules
      summary: Create new rule.
    summary: rules
    get:
      tags:
      - cluster
      description: List rules.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRules-GET'
      summary: List rules.
      operationId: getClusterFirewallRules
  /cluster/firewall/rules/{pos}:
    get:
      description: Get single rule data.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRules'
      parameter:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - cluster
      operationId: getClusterFirewallRulesByPos
      summary: Get single rule data.
    summary: pos
    delete:
      description: Delete rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallRules-RB'
        description: Delete rule.
      operationId: removeClusterFirewallRulesByPos
      summary: Delete rule.
    put:
      description: Modify rule data.
      responses:
        "200":
          description: OK
      parameter:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallRules-RB'
        description: Modify rule data.
      operationId: setClusterFirewallRulesByPos
      summary: Modify rule data.
  /cluster/ha:
    summary: ha
    get:
      tags:
      - cluster
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHa'
      summary: Directory index.
      operationId: getClusterHa
  /cluster/ha/groups:
    post:
      description: Create a new HA group.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaGroups-RB'
        description: Create a new HA group.
      operationId: newClusterHaGroups
      summary: Create a new HA group.
    summary: groups
    get:
      tags:
      - cluster
      description: Get HA groups.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaGroups'
      summary: Get HA groups.
      operationId: getClusterHaGroups
  /cluster/ha/groups/{group}:
    get:
      description: Read ha group configuration.
      responses: ""
      parameter:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
      tags:
      - cluster
      operationId: getClusterHaGroupsByGroup
      summary: Read ha group configuration.
    summary: group
    delete:
      description: Delete ha group configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
      tags:
      - cluster
      operationId: removeClusterHaGroupsByGroup
      summary: Delete ha group configuration.
    put:
      description: Update ha group configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterHaGroups-RB'
        description: Update ha group configuration.
      operationId: setClusterHaGroupsByGroup
      summary: Update ha group configuration.
  /cluster/ha/resources:
    post:
      description: Create a new HA resource.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResources-RB'
        description: Create a new HA resource.
      operationId: newClusterHaResources
      summary: Create a new HA resource.
    summary: resources
    get:
      description: List HA resources.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaResources-GET'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterHaResources-RB'
        description: List HA resources.
      operationId: getClusterHaResources
      summary: List HA resources.
  /cluster/ha/resources/{sid}:
    get:
      description: Read resource configuration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaResources'
      parameter:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
      tags:
      - cluster
      operationId: getClusterHaResourcesBySid
      summary: Read resource configuration.
    summary: sid
    delete:
      description: Delete resource configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
      tags:
      - cluster
      operationId: removeClusterHaResourcesBySid
      summary: Delete resource configuration.
    put:
      description: Update resource configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterHaResources-RB'
        description: Update resource configuration.
      operationId: setClusterHaResourcesBySid
      summary: Update resource configuration.
  /cluster/ha/resources/{sid}/migrate:
    summary: migrate
    post:
      description: Request resource migration (online) to another node.
      responses:
        "200":
          description: OK
      parameter:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResourcesMigrate-RB'
        description: Request resource migration (online) to another node.
      operationId: newClusterHaResourcesMigrateBySid
      summary: Request resource migration (online) to another node.
  /cluster/ha/resources/{sid}/relocate:
    summary: relocate
    post:
      description: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
      responses:
        "200":
          description: OK
      parameter:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResourcesRelocate-RB'
        description: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
      operationId: newClusterHaResourcesRelocateBySid
      summary: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
  /cluster/ha/status:
    summary: status
    get:
      tags:
      - cluster
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaStatus'
      summary: Directory index.
      operationId: getClusterHaStatus
  /cluster/ha/status/current:
    summary: current
    get:
      tags:
      - cluster
      description: Get HA manger status.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaStatusCurrent'
      summary: Get HA manger status.
      operationId: getClusterHaStatusCurrent
  /cluster/ha/status/manager_status:
    summary: managerstatus
    get:
      tags:
      - cluster
      description: Get full HA manger status, including LRM status.
      responses: ""
      summary: Get full HA manger status, including LRM status.
      operationId: getClusterHaStatusManagerstatus
  /cluster/jobs:
    summary: jobs
    get:
      tags:
      - cluster
      description: Index for jobs related endpoints.
      responses: ""
      summary: Index for jobs related endpoints.
      operationId: getClusterJobs
  /cluster/jobs/realm-sync:
    summary: realm-sync
    get:
      tags:
      - cluster
      description: List configured realm-sync-jobs.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterJobsRealmsync'
      summary: List configured realm-sync-jobs.
      operationId: getClusterJobsRealmsync
  /cluster/jobs/realm-sync/{id}:
    post:
      description: Create new realm-sync job.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: The ID of the job.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterJobsRealmsync-RB'
        description: Create new realm-sync job.
      operationId: newClusterJobsRealmsyncById
      summary: Create new realm-sync job.
    get:
      description: Read realm-sync job definition.
      responses: ""
      parameter:
      - name: id
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: getClusterJobsRealmsyncById
      summary: Read realm-sync job definition.
    summary: id
    delete:
      description: Delete realm-sync job definition.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterJobsRealmsyncById
      summary: Delete realm-sync job definition.
    put:
      description: Update realm-sync job definition.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: The ID of the job.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterJobsRealmsync-RB'
        description: Update realm-sync job definition.
      operationId: setClusterJobsRealmsyncById
      summary: Update realm-sync job definition.
  /cluster/jobs/schedule-analyze:
    summary: schedule-analyze
    get:
      description: Returns a list of future schedule runtimes.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterJobsScheduleanalyze'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterJobsScheduleanalyze-RB'
        description: Returns a list of future schedule runtimes.
      operationId: getClusterJobsScheduleanalyze
      summary: Returns a list of future schedule runtimes.
  /cluster/log:
    summary: log
    get:
      description: Read cluster log
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterLog'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterLog-RB'
        description: Read cluster log
      operationId: getClusterLog
      summary: Read cluster log
  /cluster/mapping:
    summary: mapping
    get:
      tags:
      - cluster
      description: List resource types.
      responses: ""
      summary: List resource types.
      operationId: getClusterMapping
  /cluster/mapping/pci:
    post:
      description: Create a new hardware mapping.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMappingPci-RB'
        description: Create a new hardware mapping.
      operationId: newClusterMappingPci
      summary: Create a new hardware mapping.
    summary: pci
    get:
      description: List PCI Hardware Mapping
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMappingPci'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMappingPci-RB'
        description: List PCI Hardware Mapping
      operationId: getClusterMappingPci
      summary: List PCI Hardware Mapping
  /cluster/mapping/pci/{id}:
    get:
      description: Get PCI Mapping.
      responses: ""
      parameter:
      - name: id
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: getClusterMappingPciById
      summary: Get PCI Mapping.
    summary: id
    delete:
      description: Remove Hardware Mapping.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterMappingPciById
      summary: Remove Hardware Mapping.
    put:
      description: Update a hardware mapping.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: The ID of the logical PCI mapping.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMappingPci-RB'
        description: Update a hardware mapping.
      operationId: setClusterMappingPciById
      summary: Update a hardware mapping.
  /cluster/mapping/usb:
    post:
      description: Create a new hardware mapping.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMappingUsb-RB'
        description: Create a new hardware mapping.
      operationId: newClusterMappingUsb
      summary: Create a new hardware mapping.
    summary: usb
    get:
      description: List USB Hardware Mappings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMappingUsb'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMappingUsb-RB'
        description: List USB Hardware Mappings
      operationId: getClusterMappingUsb
      summary: List USB Hardware Mappings
  /cluster/mapping/usb/{id}:
    get:
      description: Get USB Mapping.
      responses: ""
      parameter:
      - name: id
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: getClusterMappingUsbById
      summary: Get USB Mapping.
    summary: id
    delete:
      description: Remove Hardware Mapping.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterMappingUsbById
      summary: Remove Hardware Mapping.
    put:
      description: Update a hardware mapping.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: The ID of the logical USB mapping.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMappingUsb-RB'
        description: Update a hardware mapping.
      operationId: setClusterMappingUsbById
      summary: Update a hardware mapping.
  /cluster/metrics:
    summary: metrics
    get:
      tags:
      - cluster
      description: Metrics index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetrics'
      summary: Metrics index.
      operationId: getClusterMetrics
  /cluster/metrics/export:
    summary: export
    get:
      description: Retrieve metrics of the cluster.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsExport'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMetricsExport-RB'
        description: Retrieve metrics of the cluster.
      operationId: getClusterMetricsExport
      summary: Retrieve metrics of the cluster.
  /cluster/metrics/server:
    summary: server
    get:
      tags:
      - cluster
      description: List configured metric servers.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsServer'
      summary: List configured metric servers.
      operationId: getClusterMetricsServer
  /cluster/metrics/server/{id}:
    post:
      description: Create a new external metric server config
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: The ID of the entry.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMetricsServer-RB'
        description: Create a new external metric server config
      operationId: newClusterMetricsServerById
      summary: Create a new external metric server config
    get:
      description: Read metric server configuration.
      responses: ""
      parameter:
      - name: id
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: getClusterMetricsServerById
      summary: Read metric server configuration.
    summary: id
    delete:
      description: Remove Metric server.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterMetricsServerById
      summary: Remove Metric server.
    put:
      description: Update metric server configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: The ID of the entry.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMetricsServer-RB'
        description: Update metric server configuration.
      operationId: setClusterMetricsServerById
      summary: Update metric server configuration.
  /cluster/nextid:
    summary: nextid
    get:
      description: Get next free VMID. Pass a VMID to assert that its free (at time of check).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNextid'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterNextid-RB'
        description: Get next free VMID. Pass a VMID to assert that its free (at time of check).
      operationId: getClusterNextid
      summary: Get next free VMID. Pass a VMID to assert that its free (at time of check).
  /cluster/notifications:
    summary: notifications
    get:
      tags:
      - cluster
      description: Index for notification-related API endpoints.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotifications'
      summary: Index for notification-related API endpoints.
      operationId: getClusterNotifications
  /cluster/notifications/endpoints:
    summary: endpoints
    get:
      tags:
      - cluster
      description: Index for all available endpoint types.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpoints'
      summary: Index for all available endpoint types.
      operationId: getClusterNotificationsEndpoints
  /cluster/notifications/endpoints/gotify:
    post:
      description: Create a new gotify endpoint
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsGotify-RB'
        description: Create a new gotify endpoint
      operationId: newClusterNotificationsEndpointsGotify
      summary: Create a new gotify endpoint
    summary: gotify
    get:
      tags:
      - cluster
      description: Returns a list of all gotify endpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsGotify-GET'
      summary: Returns a list of all gotify endpoints
      operationId: getClusterNotificationsEndpointsGotify
  /cluster/notifications/endpoints/gotify/{name}:
    get:
      description: Return a specific gotify endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsGotify'
      parameter:
      - name: name
        in: path
        description: Name of the endpoint.
        required: true
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsGotifyByName
      summary: Return a specific gotify endpoint
    summary: name
    delete:
      description: Remove gotify endpoint
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterNotificationsEndpointsGotifyByName
      summary: Remove gotify endpoint
    put:
      description: Update existing gotify endpoint
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsGotify-RB'
        description: Update existing gotify endpoint
      operationId: setClusterNotificationsEndpointsGotifyByName
      summary: Update existing gotify endpoint
  /cluster/notifications/endpoints/sendmail:
    post:
      description: Create a new sendmail endpoint
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsSendmail-RB'
        description: Create a new sendmail endpoint
      operationId: newClusterNotificationsEndpointsSendmail
      summary: Create a new sendmail endpoint
    summary: sendmail
    get:
      tags:
      - cluster
      description: Returns a list of all sendmail endpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSendmail-GET'
      summary: Returns a list of all sendmail endpoints
      operationId: getClusterNotificationsEndpointsSendmail
  /cluster/notifications/endpoints/sendmail/{name}:
    get:
      description: Return a specific sendmail endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSendmail'
      parameter:
      - name: name
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsSendmailByName
      summary: Return a specific sendmail endpoint
    summary: name
    delete:
      description: Remove sendmail endpoint
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterNotificationsEndpointsSendmailByName
      summary: Remove sendmail endpoint
    put:
      description: Update existing sendmail endpoint
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsSendmail-RB'
        description: Update existing sendmail endpoint
      operationId: setClusterNotificationsEndpointsSendmailByName
      summary: Update existing sendmail endpoint
  /cluster/notifications/endpoints/smtp:
    post:
      description: Create a new smtp endpoint
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsSmtp-RB'
        description: Create a new smtp endpoint
      operationId: newClusterNotificationsEndpointsSmtp
      summary: Create a new smtp endpoint
    summary: smtp
    get:
      tags:
      - cluster
      description: Returns a list of all smtp endpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSmtp-GET'
      summary: Returns a list of all smtp endpoints
      operationId: getClusterNotificationsEndpointsSmtp
  /cluster/notifications/endpoints/smtp/{name}:
    get:
      description: Return a specific smtp endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSmtp'
      parameter:
      - name: name
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsSmtpByName
      summary: Return a specific smtp endpoint
    summary: name
    delete:
      description: Remove smtp endpoint
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterNotificationsEndpointsSmtpByName
      summary: Remove smtp endpoint
    put:
      description: Update existing smtp endpoint
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsSmtp-RB'
        description: Update existing smtp endpoint
      operationId: setClusterNotificationsEndpointsSmtpByName
      summary: Update existing smtp endpoint
  /cluster/notifications/endpoints/webhook:
    post:
      description: Create a new webhook endpoint
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsWebhook-RB'
        description: Create a new webhook endpoint
      operationId: newClusterNotificationsEndpointsWebhook
      summary: Create a new webhook endpoint
    summary: webhook
    get:
      tags:
      - cluster
      description: Returns a list of all webhook endpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsWebhook-GET'
      summary: Returns a list of all webhook endpoints
      operationId: getClusterNotificationsEndpointsWebhook
  /cluster/notifications/endpoints/webhook/{name}:
    get:
      description: Return a specific webhook endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsWebhook'
      parameter:
      - name: name
        in: path
        description: Name of the endpoint.
        required: true
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsWebhookByName
      summary: Return a specific webhook endpoint
    summary: name
    delete:
      description: Remove webhook endpoint
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterNotificationsEndpointsWebhookByName
      summary: Remove webhook endpoint
    put:
      description: Update existing webhook endpoint
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsWebhook-RB'
        description: Update existing webhook endpoint
      operationId: setClusterNotificationsEndpointsWebhookByName
      summary: Update existing webhook endpoint
  /cluster/notifications/matcher-field-values:
    summary: matcher-field-values
    get:
      tags:
      - cluster
      description: Returns known notification metadata fields and their known values
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatcherfieldvalues'
      summary: Returns known notification metadata fields and their known values
      operationId: getClusterNotificationsMatcherfieldvalues
  /cluster/notifications/matcher-fields:
    summary: matcher-fields
    get:
      tags:
      - cluster
      description: Returns known notification metadata fields
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatcherfields'
      summary: Returns known notification metadata fields
      operationId: getClusterNotificationsMatcherfields
  /cluster/notifications/matchers:
    post:
      description: Create a new matcher
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsMatchers-RB'
        description: Create a new matcher
      operationId: newClusterNotificationsMatchers
      summary: Create a new matcher
    summary: matchers
    get:
      tags:
      - cluster
      description: Returns a list of all matchers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatchers-GET'
      summary: Returns a list of all matchers
      operationId: getClusterNotificationsMatchers
  /cluster/notifications/matchers/{name}:
    get:
      description: Return a specific matcher
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatchers'
      parameter:
      - name: name
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: getClusterNotificationsMatchersByName
      summary: Return a specific matcher
    summary: name
    delete:
      description: Remove matcher
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: 
        required: true
      tags:
      - cluster
      operationId: removeClusterNotificationsMatchersByName
      summary: Remove matcher
    put:
      description: Update existing matcher
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: Name of the matcher.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsMatchers-RB'
        description: Update existing matcher
      operationId: setClusterNotificationsMatchersByName
      summary: Update existing matcher
  /cluster/notifications/targets:
    summary: targets
    get:
      tags:
      - cluster
      description: Returns a list of all entities that can be used as notification targets.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsTargets'
      summary: Returns a list of all entities that can be used as notification targets.
      operationId: getClusterNotificationsTargets
  /cluster/notifications/targets/{name}/test:
    summary: test
    post:
      description: Send a test notification to a provided target.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: Name of the target.
        required: true
      tags:
      - cluster
      operationId: newClusterNotificationsTargetsTestByName
      summary: Send a test notification to a provided target.
  /cluster/options:
    summary: options
    get:
      tags:
      - cluster
      description: Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.
      responses: ""
      summary: Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.
      operationId: getClusterOptions
    put:
      description: Set datacenter options.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterOptions-RB'
        description: Set datacenter options.
      operationId: setClusterOptions
      summary: Set datacenter options.
  /cluster/replication:
    post:
      description: Create a new replication job
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterReplication-RB'
        description: Create a new replication job
      operationId: newClusterReplication
      summary: Create a new replication job
    summary: replication
    get:
      tags:
      - cluster
      description: List replication jobs.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterReplication'
      summary: List replication jobs.
      operationId: getClusterReplication
  /cluster/replication/{id}:
    get:
      description: Read replication job configuration.
      responses: ""
      parameter:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
      tags:
      - cluster
      operationId: getClusterReplicationById
      summary: Read replication job configuration.
    summary: id
    delete:
      description: Mark replication job for removal.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterReplication-RB'
        description: Mark replication job for removal.
      operationId: removeClusterReplicationById
      summary: Mark replication job for removal.
    put:
      description: Update replication job configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterReplication-RB'
        description: Update replication job configuration.
      operationId: setClusterReplicationById
      summary: Update replication job configuration.
  /cluster/resources:
    summary: resources
    get:
      description: Resources index (cluster wide).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResources'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterResources-RB'
        description: Resources index (cluster wide).
      operationId: getClusterResources
      summary: Resources index (cluster wide).
  /cluster/sdn:
    summary: sdn
    get:
      tags:
      - cluster
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdn'
      summary: Directory index.
      operationId: getClusterSdn
    put:
      tags:
      - cluster
      description: Apply sdn controller changes && reload.
      responses: ""
      summary: Apply sdn controller changes && reload.
      operationId: setClusterSdn
  /cluster/sdn/controllers:
    post:
      description: Create a new sdn controller object.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnControllers-RB'
        description: Create a new sdn controller object.
      operationId: newClusterSdnControllers
      summary: Create a new sdn controller object.
    summary: controllers
    get:
      description: SDN controllers index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnControllers'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnControllers-RB'
        description: SDN controllers index.
      operationId: getClusterSdnControllers
      summary: SDN controllers index.
  /cluster/sdn/controllers/{controller}:
    get:
      description: Read sdn controller configuration.
      responses: ""
      parameter:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnControllers-RB'
        description: Read sdn controller configuration.
      operationId: getClusterSdnControllersByController
      summary: Read sdn controller configuration.
    summary: controller
    delete:
      description: Delete sdn controller object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
      tags:
      - cluster
      operationId: removeClusterSdnControllersByController
      summary: Delete sdn controller object configuration.
    put:
      description: Update sdn controller object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnControllers-RB'
        description: Update sdn controller object configuration.
      operationId: setClusterSdnControllersByController
      summary: Update sdn controller object configuration.
  /cluster/sdn/dns:
    post:
      description: Create a new sdn dns object.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnDns-RB'
        description: Create a new sdn dns object.
      operationId: newClusterSdnDns
      summary: Create a new sdn dns object.
    summary: dns
    get:
      description: SDN dns index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnDns'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnDns-RB'
        description: SDN dns index.
      operationId: getClusterSdnDns
      summary: SDN dns index.
  /cluster/sdn/dns/{dns}:
    get:
      description: Read sdn dns configuration.
      responses: ""
      parameter:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
      tags:
      - cluster
      operationId: getClusterSdnDnsByDns
      summary: Read sdn dns configuration.
    summary: dns
    delete:
      description: Delete sdn dns object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
      tags:
      - cluster
      operationId: removeClusterSdnDnsByDns
      summary: Delete sdn dns object configuration.
    put:
      description: Update sdn dns object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnDns-RB'
        description: Update sdn dns object configuration.
      operationId: setClusterSdnDnsByDns
      summary: Update sdn dns object configuration.
  /cluster/sdn/ipams:
    post:
      description: Create a new sdn ipam object.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnIpams-RB'
        description: Create a new sdn ipam object.
      operationId: newClusterSdnIpams
      summary: Create a new sdn ipam object.
    summary: ipams
    get:
      description: SDN ipams index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnIpams'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnIpams-RB'
        description: SDN ipams index.
      operationId: getClusterSdnIpams
      summary: SDN ipams index.
  /cluster/sdn/ipams/{ipam}:
    get:
      description: Read sdn ipam configuration.
      responses: ""
      parameter:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
      tags:
      - cluster
      operationId: getClusterSdnIpamsByIpam
      summary: Read sdn ipam configuration.
    summary: ipam
    delete:
      description: Delete sdn ipam object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
      tags:
      - cluster
      operationId: removeClusterSdnIpamsByIpam
      summary: Delete sdn ipam object configuration.
    put:
      description: Update sdn ipam object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnIpams-RB'
        description: Update sdn ipam object configuration.
      operationId: setClusterSdnIpamsByIpam
      summary: Update sdn ipam object configuration.
  /cluster/sdn/ipams/{ipam}/status:
    summary: status
    get:
      description: List PVE IPAM Entries
      responses: ""
      parameter:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
      tags:
      - cluster
      operationId: getClusterSdnIpamsStatusByIpam
      summary: List PVE IPAM Entries
  /cluster/sdn/vnets:
    post:
      description: Create a new sdn vnet object.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnets-RB'
        description: Create a new sdn vnet object.
      operationId: newClusterSdnVnets
      summary: Create a new sdn vnet object.
    summary: vnets
    get:
      description: SDN vnets index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnets'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnets-RB'
        description: SDN vnets index.
      operationId: getClusterSdnVnets
      summary: SDN vnets index.
  /cluster/sdn/vnets/{vnet}:
    get:
      description: Read sdn vnet configuration.
      responses: ""
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnets-RB'
        description: Read sdn vnet configuration.
      operationId: getClusterSdnVnetsByVnet
      summary: Read sdn vnet configuration.
    summary: vnet
    delete:
      description: Delete sdn vnet object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      operationId: removeClusterSdnVnetsByVnet
      summary: Delete sdn vnet object configuration.
    put:
      description: Update sdn vnet object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnets-RB'
        description: Update sdn vnet object configuration.
      operationId: setClusterSdnVnetsByVnet
      summary: Update sdn vnet object configuration.
  /cluster/sdn/vnets/{vnet}/firewall:
    summary: firewall
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewall'
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      operationId: getClusterSdnVnetsFirewallByVnet
      summary: Directory index.
  /cluster/sdn/vnets/{vnet}/firewall/options:
    summary: options
    get:
      description: Get vnet firewall options.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallOptions'
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      operationId: getClusterSdnVnetsFirewallOptionsByVnet
      summary: Get vnet firewall options.
    put:
      description: Set Firewall options.
      responses:
        "200":
          description: OK
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsFirewallOptions-RB'
        description: Set Firewall options.
      operationId: setClusterSdnVnetsFirewallOptionsByVnet
      summary: Set Firewall options.
  /cluster/sdn/vnets/{vnet}/firewall/rules:
    post:
      description: Create new rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsFirewallRules-RB'
        description: Create new rule.
      operationId: newClusterSdnVnetsFirewallRulesByVnet
      summary: Create new rule.
    summary: rules
    get:
      description: List rules.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallRules-GET'
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      operationId: getClusterSdnVnetsFirewallRulesByVnet
      summary: List rules.
  /cluster/sdn/vnets/{vnet}/firewall/rules/{pos}:
    get:
      description: Get single rule data.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallRules'
      parameter:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      operationId: getClusterSdnVnetsFirewallRulesByVnetAndPos
      summary: Get single rule data.
    summary: pos
    delete:
      description: Delete rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterSdnVnetsFirewallRules-RB'
        description: Delete rule.
      operationId: removeClusterSdnVnetsFirewallRulesByVnetAndPos
      summary: Delete rule.
    put:
      description: Modify rule data.
      responses:
        "200":
          description: OK
      parameter:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsFirewallRules-RB'
        description: Modify rule data.
      operationId: setClusterSdnVnetsFirewallRulesByVnetAndPos
      summary: Modify rule data.
  /cluster/sdn/vnets/{vnet}/ips:
    post:
      description: Create IP Mapping in a VNet
      responses:
        "200":
          description: OK
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsIps-RB'
        description: Create IP Mapping in a VNet
      operationId: newClusterSdnVnetsIpsByVnet
      summary: Create IP Mapping in a VNet
    summary: ips
    delete:
      description: Delete IP Mappings in a VNet
      responses:
        "200":
          description: OK
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterSdnVnetsIps-RB'
        description: Delete IP Mappings in a VNet
      operationId: removeClusterSdnVnetsIpsByVnet
      summary: Delete IP Mappings in a VNet
    put:
      description: Update IP Mapping in a VNet
      responses:
        "200":
          description: OK
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsIps-RB'
        description: Update IP Mapping in a VNet
      operationId: setClusterSdnVnetsIpsByVnet
      summary: Update IP Mapping in a VNet
  /cluster/sdn/vnets/{vnet}/subnets:
    post:
      description: Create a new sdn subnet object.
      responses:
        "200":
          description: OK
      parameter:
      - name: vnet
        in: path
        description: associated vnet
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsSubnets-RB'
        description: Create a new sdn subnet object.
      operationId: newClusterSdnVnetsSubnetsByVnet
      summary: Create a new sdn subnet object.
    summary: subnets
    get:
      description: SDN subnets index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsSubnets'
      parameter:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnetsSubnets-RB'
        description: SDN subnets index.
      operationId: getClusterSdnVnetsSubnetsByVnet
      summary: SDN subnets index.
  /cluster/sdn/vnets/{vnet}/subnets/{subnet}:
    get:
      description: Read sdn subnet configuration.
      responses: ""
      parameter:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnetsSubnets-RB'
        description: Read sdn subnet configuration.
      operationId: getClusterSdnVnetsSubnetsByVnetAndSubnet
      summary: Read sdn subnet configuration.
    summary: subnet
    delete:
      description: Delete sdn subnet object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
      tags:
      - cluster
      operationId: removeClusterSdnVnetsSubnetsByVnetAndSubnet
      summary: Delete sdn subnet object configuration.
    put:
      description: Update sdn subnet object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
      - name: vnet
        in: path
        description: associated vnet
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsSubnets-RB'
        description: Update sdn subnet object configuration.
      operationId: setClusterSdnVnetsSubnetsByVnetAndSubnet
      summary: Update sdn subnet object configuration.
  /cluster/sdn/zones:
    post:
      description: Create a new sdn zone object.
      responses:
        "200":
          description: OK
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnZones-RB'
        description: Create a new sdn zone object.
      operationId: newClusterSdnZones
      summary: Create a new sdn zone object.
    summary: zones
    get:
      description: SDN zones index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnZones'
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnZones-RB'
        description: SDN zones index.
      operationId: getClusterSdnZones
      summary: SDN zones index.
  /cluster/sdn/zones/{zone}:
    get:
      description: Read sdn zone configuration.
      responses: ""
      parameter:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnZones-RB'
        description: Read sdn zone configuration.
      operationId: getClusterSdnZonesByZone
      summary: Read sdn zone configuration.
    summary: zone
    delete:
      description: Delete sdn zone object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
      tags:
      - cluster
      operationId: removeClusterSdnZonesByZone
      summary: Delete sdn zone object configuration.
    put:
      description: Update sdn zone object configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
      tags:
      - cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnZones-RB'
        description: Update sdn zone object configuration.
      operationId: setClusterSdnZonesByZone
      summary: Update sdn zone object configuration.
  /cluster/status:
    summary: status
    get:
      tags:
      - cluster
      description: Get cluster status information.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
      summary: Get cluster status information.
      operationId: getClusterStatus
  /cluster/tasks:
    summary: tasks
    get:
      tags:
      - cluster
      description: List recent tasks (cluster wide).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterTasks'
      summary: List recent tasks (cluster wide).
      operationId: getClusterTasks
  /nodes:
    summary: nodes
    get:
      tags:
      - nodes
      description: Cluster node index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nodes'
      summary: Cluster node index.
      operationId: getNodes
  /nodes/{node}:
    summary: node
    get:
      description: Node index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nodes-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesByNode
      summary: Node index.
  /nodes/{node}/aplinfo:
    post:
      description: Download appliance templates.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAplinfo-RB'
        description: Download appliance templates.
      operationId: newNodesAplinfoByNode
      summary: Download appliance templates.
    summary: aplinfo
    get:
      description: Get list of appliances.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAplinfo'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesAplinfoByNode
      summary: Get list of appliances.
  /nodes/{node}/apt:
    summary: apt
    get:
      description: Directory index for apt (Advanced Package Tool).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesApt'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesAptByNode
      summary: Directory index for apt (Advanced Package Tool).
  /nodes/{node}/apt/changelog:
    summary: changelog
    get:
      description: Get package changelogs.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesAptChangelog-RB'
        description: Get package changelogs.
      operationId: getNodesAptChangelogByNode
      summary: Get package changelogs.
  /nodes/{node}/apt/repositories:
    post:
      description: Change the properties of a repository. Currently only allows enabling/disabling.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAptRepositories-RB'
        description: Change the properties of a repository. Currently only allows enabling/disabling.
      operationId: newNodesAptRepositoriesByNode
      summary: Change the properties of a repository. Currently only allows enabling/disabling.
    summary: repositories
    get:
      description: Get APT repository information.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptRepositories'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesAptRepositoriesByNode
      summary: Get APT repository information.
    put:
      description: Add a standard repository to the configuration
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesAptRepositories-RB'
        description: Add a standard repository to the configuration
      operationId: setNodesAptRepositoriesByNode
      summary: Add a standard repository to the configuration
  /nodes/{node}/apt/update:
    post:
      description: This is used to resynchronize the package index files from their sources (apt-get update).
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAptUpdate-RB'
        description: This is used to resynchronize the package index files from their sources (apt-get update).
      operationId: newNodesAptUpdateByNode
      summary: This is used to resynchronize the package index files from their sources (apt-get update).
    summary: update
    get:
      description: List available updates.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptUpdate'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesAptUpdateByNode
      summary: List available updates.
  /nodes/{node}/apt/versions:
    summary: versions
    get:
      description: Get package information for important Proxmox packages.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptVersions'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesAptVersionsByNode
      summary: Get package information for important Proxmox packages.
  /nodes/{node}/capabilities:
    summary: capabilities
    get:
      description: Node capabilities index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilities'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCapabilitiesByNode
      summary: Node capabilities index.
  /nodes/{node}/capabilities/qemu:
    summary: qemu
    get:
      description: QEMU capabilities index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemu'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCapabilitiesQemuByNode
      summary: QEMU capabilities index.
  /nodes/{node}/capabilities/qemu/cpu:
    summary: cpu
    get:
      description: List all custom and default CPU models.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemuCpu'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCapabilitiesQemuCpuByNode
      summary: List all custom and default CPU models.
  /nodes/{node}/capabilities/qemu/machines:
    summary: machines
    get:
      description: Get available QEMU/KVM machine types.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemuMachines'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCapabilitiesQemuMachinesByNode
      summary: Get available QEMU/KVM machine types.
  /nodes/{node}/ceph:
    summary: ceph
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCeph'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephByNode
      summary: Directory index.
  /nodes/{node}/ceph/cfg:
    summary: cfg
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCfg'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephCfgByNode
      summary: Directory index.
  /nodes/{node}/ceph/cfg/db:
    summary: db
    get:
      description: Get the Ceph configuration database.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCfgDb'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephCfgDbByNode
      summary: Get the Ceph configuration database.
  /nodes/{node}/ceph/cfg/raw:
    summary: raw
    get:
      description: Get the Ceph configuration file.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephCfgRawByNode
      summary: Get the Ceph configuration file.
  /nodes/{node}/ceph/cfg/value:
    summary: value
    get:
      description: Get configured values from either the config file or config DB.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephCfgValue-RB'
        description: Get configured values from either the config file or config DB.
      operationId: getNodesCephCfgValueByNode
      summary: Get configured values from either the config file or config DB.
  /nodes/{node}/ceph/cmd-safety:
    summary: cmd-safety
    get:
      description: Heuristical check if it is safe to perform an action.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCmdsafety'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephCmdsafety-RB'
        description: Heuristical check if it is safe to perform an action.
      operationId: getNodesCephCmdsafetyByNode
      summary: Heuristical check if it is safe to perform an action.
  /nodes/{node}/ceph/crush:
    summary: crush
    get:
      description: Get OSD crush map
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephCrushByNode
      summary: Get OSD crush map
  /nodes/{node}/ceph/fs:
    summary: fs
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephFs'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephFsByNode
      summary: Directory index.
  /nodes/{node}/ceph/fs/{name}:
    summary: name
    post:
      description: Create a Ceph filesystem
      responses: ""
      parameter:
      - name: name
        in: path
        description: The ceph filesystem name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephFs-RB'
        description: Create a Ceph filesystem
      operationId: newNodesCephFsByNodeAndName
      summary: Create a Ceph filesystem
  /nodes/{node}/ceph/init:
    summary: init
    post:
      description: Create initial ceph default configuration and setup symlinks.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephInit-RB'
        description: Create initial ceph default configuration and setup symlinks.
      operationId: newNodesCephInitByNode
      summary: Create initial ceph default configuration and setup symlinks.
  /nodes/{node}/ceph/log:
    summary: log
    get:
      description: Read ceph log
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephLog'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephLog-RB'
        description: Read ceph log
      operationId: getNodesCephLogByNode
      summary: Read ceph log
  /nodes/{node}/ceph/mds:
    summary: mds
    get:
      description: MDS directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMds'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephMdsByNode
      summary: MDS directory index.
  /nodes/{node}/ceph/mds/{name}:
    post:
      description: Create Ceph Metadata Server (MDS)
      responses: ""
      parameter:
      - name: name
        in: path
        description: The ID for the mds, when omitted the same as the nodename
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephMds-RB'
        description: Create Ceph Metadata Server (MDS)
      operationId: newNodesCephMdsByNodeAndName
      summary: Create Ceph Metadata Server (MDS)
    summary: name
    delete:
      description: Destroy Ceph Metadata Server
      responses: ""
      parameter:
      - name: name
        in: path
        description: The name (ID) of the mds
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: removeNodesCephMdsByNodeAndName
      summary: Destroy Ceph Metadata Server
  /nodes/{node}/ceph/mgr:
    summary: mgr
    get:
      description: MGR directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMgr'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephMgrByNode
      summary: MGR directory index.
  /nodes/{node}/ceph/mgr/{id}:
    post:
      description: Create Ceph Manager
      responses: ""
      parameter:
      - name: id
        in: path
        description: The ID for the manager, when omitted the same as the nodename
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: newNodesCephMgrByNodeAndId
      summary: Create Ceph Manager
    summary: id
    delete:
      description: Destroy Ceph Manager.
      responses: ""
      parameter:
      - name: id
        in: path
        description: The ID of the manager
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: removeNodesCephMgrByNodeAndId
      summary: Destroy Ceph Manager.
  /nodes/{node}/ceph/mon:
    summary: mon
    get:
      description: Get Ceph monitor list.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMon'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephMonByNode
      summary: Get Ceph monitor list.
  /nodes/{node}/ceph/mon/{monid}:
    post:
      description: Create Ceph Monitor and Manager
      responses: ""
      parameter:
      - name: monid
        in: path
        description: The ID for the monitor, when omitted the same as the nodename
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephMon-RB'
        description: Create Ceph Monitor and Manager
      operationId: newNodesCephMonByNodeAndMonid
      summary: Create Ceph Monitor and Manager
    summary: monid
    delete:
      description: Destroy Ceph Monitor and Manager.
      responses: ""
      parameter:
      - name: monid
        in: path
        description: Monitor ID
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: removeNodesCephMonByNodeAndMonid
      summary: Destroy Ceph Monitor and Manager.
  /nodes/{node}/ceph/osd:
    post:
      description: Create OSD
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephOsd-RB'
        description: Create OSD
      operationId: newNodesCephOsdByNode
      summary: Create OSD
    summary: osd
    get:
      description: Get Ceph osd list/tree.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephOsdByNode
      summary: Get Ceph osd list/tree.
  /nodes/{node}/ceph/osd/{osdid}:
    get:
      description: OSD index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsd'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: osdid
        in: path
        description: OSD ID
        required: true
      tags:
      - nodes
      operationId: getNodesCephOsdByNodeAndOsdid
      summary: OSD index.
    summary: osdid
    delete:
      description: Destroy OSD
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: osdid
        in: path
        description: OSD ID
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCephOsd-RB'
        description: Destroy OSD
      operationId: removeNodesCephOsdByNodeAndOsdid
      summary: Destroy OSD
  /nodes/{node}/ceph/osd/{osdid}/in:
    summary: in
    post:
      description: ceph osd in
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: osdid
        in: path
        description: OSD ID
        required: true
      tags:
      - nodes
      operationId: newNodesCephOsdInByNodeAndOsdid
      summary: ceph osd in
  /nodes/{node}/ceph/osd/{osdid}/lv-info:
    summary: lv-info
    get:
      description: Get OSD volume details
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsdLvinfo'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: osdid
        in: path
        description: OSD ID
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephOsdLvinfo-RB'
        description: Get OSD volume details
      operationId: getNodesCephOsdLvinfoByNodeAndOsdid
      summary: Get OSD volume details
  /nodes/{node}/ceph/osd/{osdid}/metadata:
    summary: metadata
    get:
      description: Get OSD details
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsdMetadata'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: osdid
        in: path
        description: OSD ID
        required: true
      tags:
      - nodes
      operationId: getNodesCephOsdMetadataByNodeAndOsdid
      summary: Get OSD details
  /nodes/{node}/ceph/osd/{osdid}/out:
    summary: out
    post:
      description: ceph osd out
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: osdid
        in: path
        description: OSD ID
        required: true
      tags:
      - nodes
      operationId: newNodesCephOsdOutByNodeAndOsdid
      summary: ceph osd out
  /nodes/{node}/ceph/osd/{osdid}/scrub:
    summary: scrub
    post:
      description: Instruct the OSD to scrub.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: osdid
        in: path
        description: OSD ID
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephOsdScrub-RB'
        description: Instruct the OSD to scrub.
      operationId: newNodesCephOsdScrubByNodeAndOsdid
      summary: Instruct the OSD to scrub.
  /nodes/{node}/ceph/pool:
    post:
      description: Create Ceph pool
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephPool-RB'
        description: Create Ceph pool
      operationId: newNodesCephPoolByNode
      summary: Create Ceph pool
    summary: pool
    get:
      description: List all pools and their settings (which are settable by the POST/PUT endpoints).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPool'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephPoolByNode
      summary: List all pools and their settings (which are settable by the POST/PUT endpoints).
  /nodes/{node}/ceph/pool/{name}:
    get:
      description: Pool index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPool-GET'
      parameter:
      - name: name
        in: path
        description: The name of the pool.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephPoolByNodeAndName
      summary: Pool index.
    summary: name
    delete:
      description: Destroy pool
      responses: ""
      parameter:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCephPool-RB'
        description: Destroy pool
      operationId: removeNodesCephPoolByNodeAndName
      summary: Destroy pool
    put:
      description: Change POOL settings
      responses: ""
      parameter:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesCephPool-RB'
        description: Change POOL settings
      operationId: setNodesCephPoolByNodeAndName
      summary: Change POOL settings
  /nodes/{node}/ceph/pool/{name}/status:
    summary: status
    get:
      description: Show the current pool status.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPoolStatus'
      parameter:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephPoolStatus-RB'
        description: Show the current pool status.
      operationId: getNodesCephPoolStatusByNodeAndName
      summary: Show the current pool status.
  /nodes/{node}/ceph/restart:
    summary: restart
    post:
      description: Restart ceph services.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephRestart-RB'
        description: Restart ceph services.
      operationId: newNodesCephRestartByNode
      summary: Restart ceph services.
  /nodes/{node}/ceph/rules:
    summary: rules
    get:
      description: List ceph rules.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephRules'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephRulesByNode
      summary: List ceph rules.
  /nodes/{node}/ceph/start:
    summary: start
    post:
      description: Start ceph services.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephStart-RB'
        description: Start ceph services.
      operationId: newNodesCephStartByNode
      summary: Start ceph services.
  /nodes/{node}/ceph/status:
    summary: status
    get:
      description: Get ceph status.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCephStatusByNode
      summary: Get ceph status.
  /nodes/{node}/ceph/stop:
    summary: stop
    post:
      description: Stop ceph services.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephStop-RB'
        description: Stop ceph services.
      operationId: newNodesCephStopByNode
      summary: Stop ceph services.
  /nodes/{node}/certificates:
    summary: certificates
    get:
      description: Node index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificates'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCertificatesByNode
      summary: Node index.
  /nodes/{node}/certificates/acme:
    summary: acme
    get:
      description: ACME index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesAcme'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCertificatesAcmeByNode
      summary: ACME index.
  /nodes/{node}/certificates/acme/certificate:
    post:
      description: Order a new certificate from ACME-compatible CA.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCertificatesAcmeCertificate-RB'
        description: Order a new certificate from ACME-compatible CA.
      operationId: newNodesCertificatesAcmeCertificateByNode
      summary: Order a new certificate from ACME-compatible CA.
    summary: certificate
    delete:
      description: Revoke existing certificate from CA.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: removeNodesCertificatesAcmeCertificateByNode
      summary: Revoke existing certificate from CA.
    put:
      description: Renew existing certificate from CA.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesCertificatesAcmeCertificate-RB'
        description: Renew existing certificate from CA.
      operationId: setNodesCertificatesAcmeCertificateByNode
      summary: Renew existing certificate from CA.
  /nodes/{node}/certificates/custom:
    post:
      description: Upload or update custom certificate chain and key.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesCustom'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCertificatesCustom-RB'
        description: Upload or update custom certificate chain and key.
      operationId: newNodesCertificatesCustomByNode
      summary: Upload or update custom certificate chain and key.
    summary: custom
    delete:
      description: DELETE custom certificate chain and key.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCertificatesCustom-RB'
        description: DELETE custom certificate chain and key.
      operationId: removeNodesCertificatesCustomByNode
      summary: DELETE custom certificate chain and key.
  /nodes/{node}/certificates/info:
    summary: info
    get:
      description: Get information about node's certificates.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesInfo'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesCertificatesInfoByNode
      summary: Get information about node's certificates.
  /nodes/{node}/config:
    summary: config
    get:
      description: Get node configuration options.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesConfig'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesConfig-RB'
        description: Get node configuration options.
      operationId: getNodesConfigByNode
      summary: Get node configuration options.
    put:
      description: Set node configuration options.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesConfig-RB'
        description: Set node configuration options.
      operationId: setNodesConfigByNode
      summary: Set node configuration options.
  /nodes/{node}/disks:
    summary: disks
    get:
      description: Node index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisks'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesDisksByNode
      summary: Node index.
  /nodes/{node}/disks/directory:
    post:
      description: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksDirectory-RB'
        description: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
      operationId: newNodesDisksDirectoryByNode
      summary: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
    summary: directory
    get:
      description: PVE Managed Directory storages.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksDirectory'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesDisksDirectoryByNode
      summary: PVE Managed Directory storages.
  /nodes/{node}/disks/directory/{name}:
    delete:
      description: Unmounts the storage and removes the mount unit.
      responses: ""
      parameter:
      - name: name
        in: path
        description: The storage identifier.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksDirectory-RB'
        description: Unmounts the storage and removes the mount unit.
      operationId: removeNodesDisksDirectoryByNodeAndName
      summary: Unmounts the storage and removes the mount unit.
    summary: name
  /nodes/{node}/disks/initgpt:
    summary: initgpt
    post:
      description: Initialize Disk with GPT
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksInitgpt-RB'
        description: Initialize Disk with GPT
      operationId: newNodesDisksInitgptByNode
      summary: Initialize Disk with GPT
  /nodes/{node}/disks/list:
    summary: list
    get:
      description: List local disks.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksList'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesDisksList-RB'
        description: List local disks.
      operationId: getNodesDisksListByNode
      summary: List local disks.
  /nodes/{node}/disks/lvm:
    post:
      description: Create an LVM Volume Group
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksLvm-RB'
        description: Create an LVM Volume Group
      operationId: newNodesDisksLvmByNode
      summary: Create an LVM Volume Group
    summary: lvm
    get:
      description: List LVM Volume Groups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksLvm'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesDisksLvmByNode
      summary: List LVM Volume Groups
  /nodes/{node}/disks/lvm/{name}:
    delete:
      description: Remove an LVM Volume Group.
      responses: ""
      parameter:
      - name: name
        in: path
        description: The storage identifier.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksLvm-RB'
        description: Remove an LVM Volume Group.
      operationId: removeNodesDisksLvmByNodeAndName
      summary: Remove an LVM Volume Group.
    summary: name
  /nodes/{node}/disks/lvmthin:
    post:
      description: Create an LVM thinpool
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksLvmthin-RB'
        description: Create an LVM thinpool
      operationId: newNodesDisksLvmthinByNode
      summary: Create an LVM thinpool
    summary: lvmthin
    get:
      description: List LVM thinpools
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksLvmthin'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesDisksLvmthinByNode
      summary: List LVM thinpools
  /nodes/{node}/disks/lvmthin/{name}:
    delete:
      description: Remove an LVM thin pool.
      responses: ""
      parameter:
      - name: name
        in: path
        description: The storage identifier.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksLvmthin-RB'
        description: Remove an LVM thin pool.
      operationId: removeNodesDisksLvmthinByNodeAndName
      summary: Remove an LVM thin pool.
    summary: name
  /nodes/{node}/disks/smart:
    summary: smart
    get:
      description: Get SMART Health of a disk.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksSmart'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesDisksSmart-RB'
        description: Get SMART Health of a disk.
      operationId: getNodesDisksSmartByNode
      summary: Get SMART Health of a disk.
  /nodes/{node}/disks/wipedisk:
    put:
      description: Wipe a disk or partition.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesDisksWipedisk-RB'
        description: Wipe a disk or partition.
      operationId: setNodesDisksWipediskByNode
      summary: Wipe a disk or partition.
    summary: wipedisk
  /nodes/{node}/disks/zfs:
    post:
      description: Create a ZFS pool.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksZfs-RB'
        description: Create a ZFS pool.
      operationId: newNodesDisksZfsByNode
      summary: Create a ZFS pool.
    summary: zfs
    get:
      description: List Zpools.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksZfs-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesDisksZfsByNode
      summary: List Zpools.
  /nodes/{node}/disks/zfs/{name}:
    get:
      description: Get details about a zpool.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksZfs'
      parameter:
      - name: name
        in: path
        description: The storage identifier.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesDisksZfsByNodeAndName
      summary: Get details about a zpool.
    summary: name
    delete:
      description: Destroy a ZFS pool.
      responses: ""
      parameter:
      - name: name
        in: path
        description: The storage identifier.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksZfs-RB'
        description: Destroy a ZFS pool.
      operationId: removeNodesDisksZfsByNodeAndName
      summary: Destroy a ZFS pool.
  /nodes/{node}/dns:
    summary: dns
    get:
      description: Read DNS settings.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDns'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesDnsByNode
      summary: Read DNS settings.
    put:
      description: Write DNS settings.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesDns-RB'
        description: Write DNS settings.
      operationId: setNodesDnsByNode
      summary: Write DNS settings.
  /nodes/{node}/execute:
    summary: execute
    post:
      description: Execute multiple commands in order, root only.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesExecute'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesExecute-RB'
        description: Execute multiple commands in order, root only.
      operationId: newNodesExecuteByNode
      summary: Execute multiple commands in order, root only.
  /nodes/{node}/firewall:
    summary: firewall
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewall'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesFirewallByNode
      summary: Directory index.
  /nodes/{node}/firewall/log:
    summary: log
    get:
      description: Read firewall log
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallLog'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesFirewallLog-RB'
        description: Read firewall log
      operationId: getNodesFirewallLogByNode
      summary: Read firewall log
  /nodes/{node}/firewall/options:
    summary: options
    get:
      description: Get host firewall options.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallOptions'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesFirewallOptionsByNode
      summary: Get host firewall options.
    put:
      description: Set Firewall options.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesFirewallOptions-RB'
        description: Set Firewall options.
      operationId: setNodesFirewallOptionsByNode
      summary: Set Firewall options.
  /nodes/{node}/firewall/rules:
    post:
      description: Create new rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesFirewallRules-RB'
        description: Create new rule.
      operationId: newNodesFirewallRulesByNode
      summary: Create new rule.
    summary: rules
    get:
      description: List rules.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallRules-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesFirewallRulesByNode
      summary: List rules.
  /nodes/{node}/firewall/rules/{pos}:
    get:
      description: Get single rule data.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallRules'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - nodes
      operationId: getNodesFirewallRulesByNodeAndPos
      summary: Get single rule data.
    summary: pos
    delete:
      description: Delete rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesFirewallRules-RB'
        description: Delete rule.
      operationId: removeNodesFirewallRulesByNodeAndPos
      summary: Delete rule.
    put:
      description: Modify rule data.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesFirewallRules-RB'
        description: Modify rule data.
      operationId: setNodesFirewallRulesByNodeAndPos
      summary: Modify rule data.
  /nodes/{node}/hardware:
    summary: hardware
    get:
      description: Index of hardware types
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardware'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesHardwareByNode
      summary: Index of hardware types
  /nodes/{node}/hardware/pci:
    summary: pci
    get:
      description: List local PCI devices.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePci'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesHardwarePci-RB'
        description: List local PCI devices.
      operationId: getNodesHardwarePciByNode
      summary: List local PCI devices.
  /nodes/{node}/hardware/pci/{pci-id-or-mapping}:
    summary: pci-id-or-mapping
    get:
      description: Index of available pci methods
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePci-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pci-id-or-mapping
        in: path
        description: 
        required: true
      tags:
      - nodes
      operationId: getNodesHardwarePciByNodeAndPciidormapping
      summary: Index of available pci methods
  /nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev:
    summary: mdev
    get:
      description: List mediated device types for given PCI device.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePciMdev'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pci-id-or-mapping
        in: path
        description: The PCI ID or mapping to list the mdev types for.
        required: true
      tags:
      - nodes
      operationId: getNodesHardwarePciMdevByNodeAndPciidormapping
      summary: List mediated device types for given PCI device.
  /nodes/{node}/hardware/usb:
    summary: usb
    get:
      description: List local USB devices.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwareUsb'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesHardwareUsbByNode
      summary: List local USB devices.
  /nodes/{node}/hosts:
    post:
      description: Write /etc/hosts.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesHosts-RB'
        description: Write /etc/hosts.
      operationId: newNodesHostsByNode
      summary: Write /etc/hosts.
    summary: hosts
    get:
      description: Get the content of /etc/hosts.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHosts'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesHostsByNode
      summary: Get the content of /etc/hosts.
  /nodes/{node}/journal:
    summary: journal
    get:
      description: Read Journal
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesJournal-RB'
        description: Read Journal
      operationId: getNodesJournalByNode
      summary: Read Journal
  /nodes/{node}/lxc:
    post:
      description: Create or restore a container.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxc-RB'
        description: Create or restore a container.
      operationId: newNodesLxcByNode
      summary: Create or restore a container.
    summary: lxc
    get:
      description: LXC container index (per node).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxc'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcByNode
      summary: LXC container index (per node).
  /nodes/{node}/lxc/{vmid}:
    get:
      description: Directory index
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcByNodeAndVmid
      summary: Directory index
    summary: vmid
    delete:
      description: Destroy the container (also delete all uses files).
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxc-RB'
        description: Destroy the container (also delete all uses files).
      operationId: removeNodesLxcByNodeAndVmid
      summary: Destroy the container (also delete all uses files).
  /nodes/{node}/lxc/{vmid}/clone:
    summary: clone
    post:
      description: Create a container clone/copy
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcClone-RB'
        description: Create a container clone/copy
      operationId: newNodesLxcCloneByNodeAndVmid
      summary: Create a container clone/copy
  /nodes/{node}/lxc/{vmid}/config:
    summary: config
    get:
      description: Get container configuration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcConfig'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcConfig-RB'
        description: Get container configuration.
      operationId: getNodesLxcConfigByNodeAndVmid
      summary: Get container configuration.
    put:
      description: Set container options.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcConfig-RB'
        description: Set container options.
      operationId: setNodesLxcConfigByNodeAndVmid
      summary: Set container options.
  /nodes/{node}/lxc/{vmid}/feature:
    summary: feature
    get:
      description: Check if feature for virtual machine is available.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFeature'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFeature-RB'
        description: Check if feature for virtual machine is available.
      operationId: getNodesLxcFeatureByNodeAndVmid
      summary: Check if feature for virtual machine is available.
  /nodes/{node}/lxc/{vmid}/firewall:
    summary: firewall
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewall'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallByNodeAndVmid
      summary: Directory index.
  /nodes/{node}/lxc/{vmid}/firewall/aliases:
    post:
      description: Create IP or Network Alias.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallAliases-RB'
        description: Create IP or Network Alias.
      operationId: newNodesLxcFirewallAliasesByNodeAndVmid
      summary: Create IP or Network Alias.
    summary: aliases
    get:
      description: List aliases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallAliases'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallAliasesByNodeAndVmid
      summary: List aliases
  /nodes/{node}/lxc/{vmid}/firewall/aliases/{name}:
    get:
      description: Read alias.
      responses: ""
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallAliasesByNodeAndVmidAndName
      summary: Read alias.
    summary: name
    delete:
      description: Remove IP or Network alias.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallAliases-RB'
        description: Remove IP or Network alias.
      operationId: removeNodesLxcFirewallAliasesByNodeAndVmidAndName
      summary: Remove IP or Network alias.
    put:
      description: Update IP or Network alias.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallAliases-RB'
        description: Update IP or Network alias.
      operationId: setNodesLxcFirewallAliasesByNodeAndVmidAndName
      summary: Update IP or Network alias.
  /nodes/{node}/lxc/{vmid}/firewall/ipset:
    post:
      description: Create new IPSet
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallIpset-RB'
        description: Create new IPSet
      operationId: newNodesLxcFirewallIpsetByNodeAndVmid
      summary: Create new IPSet
    summary: ipset
    get:
      description: List IPSets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallIpset'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallIpsetByNodeAndVmid
      summary: List IPSets
  /nodes/{node}/lxc/{vmid}/firewall/ipset/{name}:
    post:
      description: Add IP or Network to IPSet.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallIpset-RB'
        description: Add IP or Network to IPSet.
      operationId: newNodesLxcFirewallIpsetByNodeAndVmidAndName
      summary: Add IP or Network to IPSet.
    get:
      description: List IPSet content
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallIpset-GET'
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallIpsetByNodeAndVmidAndName
      summary: List IPSet content
    summary: name
    delete:
      description: Delete IPSet
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallIpset-RB'
        description: Delete IPSet
      operationId: removeNodesLxcFirewallIpsetByNodeAndVmidAndName
      summary: Delete IPSet
  /nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}:
    get:
      description: Read IP or Network settings from IPSet.
      responses: ""
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      summary: Read IP or Network settings from IPSet.
    summary: cidr
    delete:
      description: Remove IP or Network from IPSet.
      responses:
        "200":
          description: OK
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallIpset-RB'
        description: Remove IP or Network from IPSet.
      operationId: removeNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      summary: Remove IP or Network from IPSet.
    put:
      description: Update IP or Network settings
      responses:
        "200":
          description: OK
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallIpset-RB'
        description: Update IP or Network settings
      operationId: setNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      summary: Update IP or Network settings
  /nodes/{node}/lxc/{vmid}/firewall/log:
    summary: log
    get:
      description: Read firewall log
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallLog'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFirewallLog-RB'
        description: Read firewall log
      operationId: getNodesLxcFirewallLogByNodeAndVmid
      summary: Read firewall log
  /nodes/{node}/lxc/{vmid}/firewall/options:
    summary: options
    get:
      description: Get VM firewall options.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallOptions'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallOptionsByNodeAndVmid
      summary: Get VM firewall options.
    put:
      description: Set Firewall options.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallOptions-RB'
        description: Set Firewall options.
      operationId: setNodesLxcFirewallOptionsByNodeAndVmid
      summary: Set Firewall options.
  /nodes/{node}/lxc/{vmid}/firewall/refs:
    summary: refs
    get:
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRefs'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFirewallRefs-RB'
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      operationId: getNodesLxcFirewallRefsByNodeAndVmid
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
  /nodes/{node}/lxc/{vmid}/firewall/rules:
    post:
      description: Create new rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallRules-RB'
        description: Create new rule.
      operationId: newNodesLxcFirewallRulesByNodeAndVmid
      summary: Create new rule.
    summary: rules
    get:
      description: List rules.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRules-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallRulesByNodeAndVmid
      summary: List rules.
  /nodes/{node}/lxc/{vmid}/firewall/rules/{pos}:
    get:
      description: Get single rule data.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRules'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcFirewallRulesByNodeAndVmidAndPos
      summary: Get single rule data.
    summary: pos
    delete:
      description: Delete rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallRules-RB'
        description: Delete rule.
      operationId: removeNodesLxcFirewallRulesByNodeAndVmidAndPos
      summary: Delete rule.
    put:
      description: Modify rule data.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallRules-RB'
        description: Modify rule data.
      operationId: setNodesLxcFirewallRulesByNodeAndVmidAndPos
      summary: Modify rule data.
  /nodes/{node}/lxc/{vmid}/interfaces:
    summary: interfaces
    get:
      description: Get IP addresses of the specified container interface.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcInterfaces'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcInterfacesByNodeAndVmid
      summary: Get IP addresses of the specified container interface.
  /nodes/{node}/lxc/{vmid}/migrate:
    summary: migrate
    post:
      description: Migrate the container to another node. Creates a new migration task.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMigrate-RB'
        description: Migrate the container to another node. Creates a new migration task.
      operationId: newNodesLxcMigrateByNodeAndVmid
      summary: Migrate the container to another node. Creates a new migration task.
  /nodes/{node}/lxc/{vmid}/move_volume:
    summary: movevolume
    post:
      description: Move a rootfs-/mp-volume to a different storage or to a different container.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMovevolume-RB'
        description: Move a rootfs-/mp-volume to a different storage or to a different container.
      operationId: newNodesLxcMovevolumeByNodeAndVmid
      summary: Move a rootfs-/mp-volume to a different storage or to a different container.
  /nodes/{node}/lxc/{vmid}/mtunnel:
    summary: mtunnel
    post:
      description: Migration tunnel endpoint - only for internal use by CT migration.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMtunnel-RB'
        description: Migration tunnel endpoint - only for internal use by CT migration.
      operationId: newNodesLxcMtunnelByNodeAndVmid
      summary: Migration tunnel endpoint - only for internal use by CT migration.
  /nodes/{node}/lxc/{vmid}/mtunnelwebsocket:
    summary: mtunnelwebsocket
    get:
      description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcMtunnelwebsocket'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcMtunnelwebsocket-RB'
        description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      operationId: getNodesLxcMtunnelwebsocketByNodeAndVmid
      summary: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
  /nodes/{node}/lxc/{vmid}/pending:
    summary: pending
    get:
      description: Get container configuration, including pending changes.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcPending'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcPendingByNodeAndVmid
      summary: Get container configuration, including pending changes.
  /nodes/{node}/lxc/{vmid}/remote_migrate:
    summary: remotemigrate
    post:
      description: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcRemotemigrate-RB'
        description: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
      operationId: newNodesLxcRemotemigrateByNodeAndVmid
      summary: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
  /nodes/{node}/lxc/{vmid}/resize:
    put:
      description: Resize a container mount point.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcResize-RB'
        description: Resize a container mount point.
      operationId: setNodesLxcResizeByNodeAndVmid
      summary: Resize a container mount point.
    summary: resize
  /nodes/{node}/lxc/{vmid}/rrd:
    summary: rrd
    get:
      description: Read VM RRD statistics (returns PNG)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcRrd'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcRrd-RB'
        description: Read VM RRD statistics (returns PNG)
      operationId: getNodesLxcRrdByNodeAndVmid
      summary: Read VM RRD statistics (returns PNG)
  /nodes/{node}/lxc/{vmid}/rrddata:
    summary: rrddata
    get:
      description: Read VM RRD statistics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcRrddata'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcRrddata-RB'
        description: Read VM RRD statistics
      operationId: getNodesLxcRrddataByNodeAndVmid
      summary: Read VM RRD statistics
  /nodes/{node}/lxc/{vmid}/snapshot:
    post:
      description: Snapshot a container.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSnapshot-RB'
        description: Snapshot a container.
      operationId: newNodesLxcSnapshotByNodeAndVmid
      summary: Snapshot a container.
    summary: snapshot
    get:
      description: List all snapshots.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcSnapshot'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcSnapshotByNodeAndVmid
      summary: List all snapshots.
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}:
    get:
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcSnapshot-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcSnapshotByNodeAndVmidAndSnapname
      summary: ""
    summary: snapname
    delete:
      description: Delete a LXC snapshot.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcSnapshot-RB'
        description: Delete a LXC snapshot.
      operationId: removeNodesLxcSnapshotByNodeAndVmidAndSnapname
      summary: Delete a LXC snapshot.
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config:
    summary: config
    get:
      description: Get snapshot configuration
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcSnapshotConfigByNodeAndVmidAndSnapname
      summary: Get snapshot configuration
    put:
      description: Update snapshot metadata.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcSnapshotConfig-RB'
        description: Update snapshot metadata.
      operationId: setNodesLxcSnapshotConfigByNodeAndVmidAndSnapname
      summary: Update snapshot metadata.
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback:
    summary: rollback
    post:
      description: Rollback LXC state to specified snapshot.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSnapshotRollback-RB'
        description: Rollback LXC state to specified snapshot.
      operationId: newNodesLxcSnapshotRollbackByNodeAndVmidAndSnapname
      summary: Rollback LXC state to specified snapshot.
  /nodes/{node}/lxc/{vmid}/spiceproxy:
    summary: spiceproxy
    post:
      description: Returns a SPICE configuration to connect to the CT.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSpiceproxy-RB'
        description: Returns a SPICE configuration to connect to the CT.
      operationId: newNodesLxcSpiceproxyByNodeAndVmid
      summary: Returns a SPICE configuration to connect to the CT.
  /nodes/{node}/lxc/{vmid}/status:
    summary: status
    get:
      description: Directory index
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcStatusByNodeAndVmid
      summary: Directory index
  /nodes/{node}/lxc/{vmid}/status/current:
    summary: current
    get:
      description: Get virtual machine status.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcStatusCurrent'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesLxcStatusCurrentByNodeAndVmid
      summary: Get virtual machine status.
  /nodes/{node}/lxc/{vmid}/status/reboot:
    summary: reboot
    post:
      description: Reboot the container by shutting it down, and starting it again. Applies pending changes.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusReboot-RB'
        description: Reboot the container by shutting it down, and starting it again. Applies pending changes.
      operationId: newNodesLxcStatusRebootByNodeAndVmid
      summary: Reboot the container by shutting it down, and starting it again. Applies pending changes.
  /nodes/{node}/lxc/{vmid}/status/resume:
    summary: resume
    post:
      description: Resume the container.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesLxcStatusResumeByNodeAndVmid
      summary: Resume the container.
  /nodes/{node}/lxc/{vmid}/status/shutdown:
    summary: shutdown
    post:
      description: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusShutdown-RB'
        description: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
      operationId: newNodesLxcStatusShutdownByNodeAndVmid
      summary: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
  /nodes/{node}/lxc/{vmid}/status/start:
    summary: start
    post:
      description: Start the container.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusStart-RB'
        description: Start the container.
      operationId: newNodesLxcStatusStartByNodeAndVmid
      summary: Start the container.
  /nodes/{node}/lxc/{vmid}/status/stop:
    summary: stop
    post:
      description: Stop the container. This will abruptly stop all processes running in the container.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusStop-RB'
        description: Stop the container. This will abruptly stop all processes running in the container.
      operationId: newNodesLxcStatusStopByNodeAndVmid
      summary: Stop the container. This will abruptly stop all processes running in the container.
  /nodes/{node}/lxc/{vmid}/status/suspend:
    summary: suspend
    post:
      description: Suspend the container. This is experimental.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesLxcStatusSuspendByNodeAndVmid
      summary: Suspend the container. This is experimental.
  /nodes/{node}/lxc/{vmid}/template:
    summary: template
    post:
      description: Create a Template.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesLxcTemplateByNodeAndVmid
      summary: Create a Template.
  /nodes/{node}/lxc/{vmid}/termproxy:
    summary: termproxy
    post:
      description: Creates a TCP proxy connection.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesLxcTermproxyByNodeAndVmid
      summary: Creates a TCP proxy connection.
  /nodes/{node}/lxc/{vmid}/vncproxy:
    summary: vncproxy
    post:
      description: Creates a TCP VNC proxy connections.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcVncproxy-RB'
        description: Creates a TCP VNC proxy connections.
      operationId: newNodesLxcVncproxyByNodeAndVmid
      summary: Creates a TCP VNC proxy connections.
  /nodes/{node}/lxc/{vmid}/vncwebsocket:
    summary: vncwebsocket
    get:
      description: Opens a weksocket for VNC traffic.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcVncwebsocket'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcVncwebsocket-RB'
        description: Opens a weksocket for VNC traffic.
      operationId: getNodesLxcVncwebsocketByNodeAndVmid
      summary: Opens a weksocket for VNC traffic.
  /nodes/{node}/migrateall:
    summary: migrateall
    post:
      description: Migrate all VMs and Containers.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesMigrateall-RB'
        description: Migrate all VMs and Containers.
      operationId: newNodesMigrateallByNode
      summary: Migrate all VMs and Containers.
  /nodes/{node}/netstat:
    summary: netstat
    get:
      description: Read tap/vm network device interface counters
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetstat'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesNetstatByNode
      summary: Read tap/vm network device interface counters
  /nodes/{node}/network:
    post:
      description: Create network device configuration
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesNetwork-RB'
        description: Create network device configuration
      operationId: newNodesNetworkByNode
      summary: Create network device configuration
    get:
      description: List available networks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetwork-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesNetwork-RB'
        description: List available networks
      operationId: getNodesNetworkByNode
      summary: List available networks
    summary: network
    delete:
      description: Revert network configuration changes.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: removeNodesNetworkByNode
      summary: Revert network configuration changes.
    put:
      description: Reload network configuration
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: setNodesNetworkByNode
      summary: Reload network configuration
  /nodes/{node}/network/{iface}:
    get:
      description: Read network device configuration
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetwork'
      parameter:
      - name: iface
        in: path
        description: Network interface name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesNetworkByNodeAndIface
      summary: Read network device configuration
    summary: iface
    delete:
      description: Delete network device configuration
      responses:
        "200":
          description: OK
      parameter:
      - name: iface
        in: path
        description: Network interface name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: removeNodesNetworkByNodeAndIface
      summary: Delete network device configuration
    put:
      description: Update network device configuration
      responses:
        "200":
          description: OK
      parameter:
      - name: iface
        in: path
        description: Network interface name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesNetwork-RB'
        description: Update network device configuration
      operationId: setNodesNetworkByNodeAndIface
      summary: Update network device configuration
  /nodes/{node}/qemu:
    post:
      description: Create or restore a virtual machine.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemu-RB'
        description: Create or restore a virtual machine.
      operationId: newNodesQemuByNode
      summary: Create or restore a virtual machine.
    summary: qemu
    get:
      description: Virtual machine index (per node).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemu'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemu-RB'
        description: Virtual machine index (per node).
      operationId: getNodesQemuByNode
      summary: Virtual machine index (per node).
  /nodes/{node}/qemu/{vmid}:
    get:
      description: Directory index
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuByNodeAndVmid
      summary: Directory index
    summary: vmid
    delete:
      description: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemu-RB'
        description: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
      operationId: removeNodesQemuByNodeAndVmid
      summary: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
  /nodes/{node}/qemu/{vmid}/agent:
    post:
      description: Execute QEMU Guest Agent commands.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgent-RB'
        description: Execute QEMU Guest Agent commands.
      operationId: newNodesQemuAgentByNodeAndVmid
      summary: Execute QEMU Guest Agent commands.
    summary: agent
    get:
      description: QEMU Guest Agent command index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgent'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentByNodeAndVmid
      summary: QEMU Guest Agent command index.
  /nodes/{node}/qemu/{vmid}/agent/exec:
    summary: exec
    post:
      description: Executes the given command in the vm via the guest-agent and returns an object with the pid.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentExec'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentExec-RB'
        description: Executes the given command in the vm via the guest-agent and returns an object with the pid.
      operationId: newNodesQemuAgentExecByNodeAndVmid
      summary: Executes the given command in the vm via the guest-agent and returns an object with the pid.
  /nodes/{node}/qemu/{vmid}/agent/exec-status:
    summary: exec-status
    get:
      description: Gets the status of the given pid started by the guest-agent
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentExecstatus'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuAgentExecstatus-RB'
        description: Gets the status of the given pid started by the guest-agent
      operationId: getNodesQemuAgentExecstatusByNodeAndVmid
      summary: Gets the status of the given pid started by the guest-agent
  /nodes/{node}/qemu/{vmid}/agent/file-read:
    summary: file-read
    get:
      description: Reads the given file via guest agent. Is limited to 16777216 bytes.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentFileread'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuAgentFileread-RB'
        description: Reads the given file via guest agent. Is limited to 16777216 bytes.
      operationId: getNodesQemuAgentFilereadByNodeAndVmid
      summary: Reads the given file via guest agent. Is limited to 16777216 bytes.
  /nodes/{node}/qemu/{vmid}/agent/file-write:
    summary: file-write
    post:
      description: Writes the given file via guest agent.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentFilewrite-RB'
        description: Writes the given file via guest agent.
      operationId: newNodesQemuAgentFilewriteByNodeAndVmid
      summary: Writes the given file via guest agent.
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze:
    summary: fsfreeze-freeze
    post:
      description: Execute fsfreeze-freeze.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentFsfreezefreezeByNodeAndVmid
      summary: Execute fsfreeze-freeze.
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-status:
    summary: fsfreeze-status
    post:
      description: Execute fsfreeze-status.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentFsfreezestatusByNodeAndVmid
      summary: Execute fsfreeze-status.
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw:
    summary: fsfreeze-thaw
    post:
      description: Execute fsfreeze-thaw.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentFsfreezethawByNodeAndVmid
      summary: Execute fsfreeze-thaw.
  /nodes/{node}/qemu/{vmid}/agent/fstrim:
    summary: fstrim
    post:
      description: Execute fstrim.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentFstrimByNodeAndVmid
      summary: Execute fstrim.
  /nodes/{node}/qemu/{vmid}/agent/get-fsinfo:
    summary: get-fsinfo
    get:
      description: Execute get-fsinfo.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGetfsinfoByNodeAndVmid
      summary: Execute get-fsinfo.
  /nodes/{node}/qemu/{vmid}/agent/get-host-name:
    summary: get-host-name
    get:
      description: Execute get-host-name.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGethostnameByNodeAndVmid
      summary: Execute get-host-name.
  /nodes/{node}/qemu/{vmid}/agent/get-memory-block-info:
    summary: get-memory-block-info
    get:
      description: Execute get-memory-block-info.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGetmemoryblockinfoByNodeAndVmid
      summary: Execute get-memory-block-info.
  /nodes/{node}/qemu/{vmid}/agent/get-memory-blocks:
    summary: get-memory-blocks
    get:
      description: Execute get-memory-blocks.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGetmemoryblocksByNodeAndVmid
      summary: Execute get-memory-blocks.
  /nodes/{node}/qemu/{vmid}/agent/get-osinfo:
    summary: get-osinfo
    get:
      description: Execute get-osinfo.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGetosinfoByNodeAndVmid
      summary: Execute get-osinfo.
  /nodes/{node}/qemu/{vmid}/agent/get-time:
    summary: get-time
    get:
      description: Execute get-time.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGettimeByNodeAndVmid
      summary: Execute get-time.
  /nodes/{node}/qemu/{vmid}/agent/get-timezone:
    summary: get-timezone
    get:
      description: Execute get-timezone.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGettimezoneByNodeAndVmid
      summary: Execute get-timezone.
  /nodes/{node}/qemu/{vmid}/agent/get-users:
    summary: get-users
    get:
      description: Execute get-users.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGetusersByNodeAndVmid
      summary: Execute get-users.
  /nodes/{node}/qemu/{vmid}/agent/get-vcpus:
    summary: get-vcpus
    get:
      description: Execute get-vcpus.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentGetvcpusByNodeAndVmid
      summary: Execute get-vcpus.
  /nodes/{node}/qemu/{vmid}/agent/info:
    summary: info
    get:
      description: Execute info.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentInfoByNodeAndVmid
      summary: Execute info.
  /nodes/{node}/qemu/{vmid}/agent/network-get-interfaces:
    summary: network-get-interfaces
    get:
      description: Execute network-get-interfaces.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuAgentNetworkgetinterfacesByNodeAndVmid
      summary: Execute network-get-interfaces.
  /nodes/{node}/qemu/{vmid}/agent/ping:
    summary: ping
    post:
      description: Execute ping.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentPingByNodeAndVmid
      summary: Execute ping.
  /nodes/{node}/qemu/{vmid}/agent/set-user-password:
    summary: set-user-password
    post:
      description: Sets the password for the given user to the given password
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentSetuserpassword-RB'
        description: Sets the password for the given user to the given password
      operationId: newNodesQemuAgentSetuserpasswordByNodeAndVmid
      summary: Sets the password for the given user to the given password
  /nodes/{node}/qemu/{vmid}/agent/shutdown:
    summary: shutdown
    post:
      description: Execute shutdown.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentShutdownByNodeAndVmid
      summary: Execute shutdown.
  /nodes/{node}/qemu/{vmid}/agent/suspend-disk:
    summary: suspend-disk
    post:
      description: Execute suspend-disk.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentSuspenddiskByNodeAndVmid
      summary: Execute suspend-disk.
  /nodes/{node}/qemu/{vmid}/agent/suspend-hybrid:
    summary: suspend-hybrid
    post:
      description: Execute suspend-hybrid.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentSuspendhybridByNodeAndVmid
      summary: Execute suspend-hybrid.
  /nodes/{node}/qemu/{vmid}/agent/suspend-ram:
    summary: suspend-ram
    post:
      description: Execute suspend-ram.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: newNodesQemuAgentSuspendramByNodeAndVmid
      summary: Execute suspend-ram.
  /nodes/{node}/qemu/{vmid}/clone:
    summary: clone
    post:
      description: Create a copy of virtual machine/template.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuClone-RB'
        description: Create a copy of virtual machine/template.
      operationId: newNodesQemuCloneByNodeAndVmid
      summary: Create a copy of virtual machine/template.
  /nodes/{node}/qemu/{vmid}/cloudinit:
    summary: cloudinit
    get:
      description: Get the cloudinit configuration with both current and pending values.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuCloudinit'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuCloudinitByNodeAndVmid
      summary: Get the cloudinit configuration with both current and pending values.
    put:
      description: Regenerate and change cloudinit config drive.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: setNodesQemuCloudinitByNodeAndVmid
      summary: Regenerate and change cloudinit config drive.
  /nodes/{node}/qemu/{vmid}/cloudinit/dump:
    summary: dump
    get:
      description: Get automatically generated cloudinit config.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuCloudinitDump-RB'
        description: Get automatically generated cloudinit config.
      operationId: getNodesQemuCloudinitDumpByNodeAndVmid
      summary: Get automatically generated cloudinit config.
  /nodes/{node}/qemu/{vmid}/config:
    post:
      description: Set virtual machine options (asynchronous API).
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuConfig-RB'
        description: Set virtual machine options (asynchronous API).
      operationId: newNodesQemuConfigByNodeAndVmid
      summary: Set virtual machine options (asynchronous API).
    summary: config
    get:
      description: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuConfig'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuConfig-RB'
        description: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
      operationId: getNodesQemuConfigByNodeAndVmid
      summary: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
    put:
      description: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuConfig-RB'
        description: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
      operationId: setNodesQemuConfigByNodeAndVmid
      summary: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
  /nodes/{node}/qemu/{vmid}/feature:
    summary: feature
    get:
      description: Check if feature for virtual machine is available.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFeature'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFeature-RB'
        description: Check if feature for virtual machine is available.
      operationId: getNodesQemuFeatureByNodeAndVmid
      summary: Check if feature for virtual machine is available.
  /nodes/{node}/qemu/{vmid}/firewall:
    summary: firewall
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewall'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallByNodeAndVmid
      summary: Directory index.
  /nodes/{node}/qemu/{vmid}/firewall/aliases:
    post:
      description: Create IP or Network Alias.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallAliases-RB'
        description: Create IP or Network Alias.
      operationId: newNodesQemuFirewallAliasesByNodeAndVmid
      summary: Create IP or Network Alias.
    summary: aliases
    get:
      description: List aliases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallAliases'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallAliasesByNodeAndVmid
      summary: List aliases
  /nodes/{node}/qemu/{vmid}/firewall/aliases/{name}:
    get:
      description: Read alias.
      responses: ""
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallAliasesByNodeAndVmidAndName
      summary: Read alias.
    summary: name
    delete:
      description: Remove IP or Network alias.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallAliases-RB'
        description: Remove IP or Network alias.
      operationId: removeNodesQemuFirewallAliasesByNodeAndVmidAndName
      summary: Remove IP or Network alias.
    put:
      description: Update IP or Network alias.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: Alias name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallAliases-RB'
        description: Update IP or Network alias.
      operationId: setNodesQemuFirewallAliasesByNodeAndVmidAndName
      summary: Update IP or Network alias.
  /nodes/{node}/qemu/{vmid}/firewall/ipset:
    post:
      description: Create new IPSet
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallIpset-RB'
        description: Create new IPSet
      operationId: newNodesQemuFirewallIpsetByNodeAndVmid
      summary: Create new IPSet
    summary: ipset
    get:
      description: List IPSets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallIpset'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallIpsetByNodeAndVmid
      summary: List IPSets
  /nodes/{node}/qemu/{vmid}/firewall/ipset/{name}:
    post:
      description: Add IP or Network to IPSet.
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallIpset-RB'
        description: Add IP or Network to IPSet.
      operationId: newNodesQemuFirewallIpsetByNodeAndVmidAndName
      summary: Add IP or Network to IPSet.
    get:
      description: List IPSet content
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallIpset-GET'
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallIpsetByNodeAndVmidAndName
      summary: List IPSet content
    summary: name
    delete:
      description: Delete IPSet
      responses:
        "200":
          description: OK
      parameter:
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallIpset-RB'
        description: Delete IPSet
      operationId: removeNodesQemuFirewallIpsetByNodeAndVmidAndName
      summary: Delete IPSet
  /nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}:
    get:
      description: Read IP or Network settings from IPSet.
      responses: ""
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      summary: Read IP or Network settings from IPSet.
    summary: cidr
    delete:
      description: Remove IP or Network from IPSet.
      responses:
        "200":
          description: OK
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallIpset-RB'
        description: Remove IP or Network from IPSet.
      operationId: removeNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      summary: Remove IP or Network from IPSet.
    put:
      description: Update IP or Network settings
      responses:
        "200":
          description: OK
      parameter:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
      - name: name
        in: path
        description: IP set name.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallIpset-RB'
        description: Update IP or Network settings
      operationId: setNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      summary: Update IP or Network settings
  /nodes/{node}/qemu/{vmid}/firewall/log:
    summary: log
    get:
      description: Read firewall log
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallLog'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFirewallLog-RB'
        description: Read firewall log
      operationId: getNodesQemuFirewallLogByNodeAndVmid
      summary: Read firewall log
  /nodes/{node}/qemu/{vmid}/firewall/options:
    summary: options
    get:
      description: Get VM firewall options.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallOptions'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallOptionsByNodeAndVmid
      summary: Get VM firewall options.
    put:
      description: Set Firewall options.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallOptions-RB'
        description: Set Firewall options.
      operationId: setNodesQemuFirewallOptionsByNodeAndVmid
      summary: Set Firewall options.
  /nodes/{node}/qemu/{vmid}/firewall/refs:
    summary: refs
    get:
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRefs'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFirewallRefs-RB'
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      operationId: getNodesQemuFirewallRefsByNodeAndVmid
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
  /nodes/{node}/qemu/{vmid}/firewall/rules:
    post:
      description: Create new rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallRules-RB'
        description: Create new rule.
      operationId: newNodesQemuFirewallRulesByNodeAndVmid
      summary: Create new rule.
    summary: rules
    get:
      description: List rules.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRules-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallRulesByNodeAndVmid
      summary: List rules.
  /nodes/{node}/qemu/{vmid}/firewall/rules/{pos}:
    get:
      description: Get single rule data.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRules'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuFirewallRulesByNodeAndVmidAndPos
      summary: Get single rule data.
    summary: pos
    delete:
      description: Delete rule.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallRules-RB'
        description: Delete rule.
      operationId: removeNodesQemuFirewallRulesByNodeAndVmidAndPos
      summary: Delete rule.
    put:
      description: Modify rule data.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallRules-RB'
        description: Modify rule data.
      operationId: setNodesQemuFirewallRulesByNodeAndVmidAndPos
      summary: Modify rule data.
  /nodes/{node}/qemu/{vmid}/migrate:
    post:
      description: Migrate virtual machine. Creates a new migration task.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMigrate-RB'
        description: Migrate virtual machine. Creates a new migration task.
      operationId: newNodesQemuMigrateByNodeAndVmid
      summary: Migrate virtual machine. Creates a new migration task.
    summary: migrate
    get:
      description: Get preconditions for migration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuMigrate'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuMigrate-RB'
        description: Get preconditions for migration.
      operationId: getNodesQemuMigrateByNodeAndVmid
      summary: Get preconditions for migration.
  /nodes/{node}/qemu/{vmid}/monitor:
    summary: monitor
    post:
      description: Execute QEMU monitor commands.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMonitor-RB'
        description: Execute QEMU monitor commands.
      operationId: newNodesQemuMonitorByNodeAndVmid
      summary: Execute QEMU monitor commands.
  /nodes/{node}/qemu/{vmid}/move_disk:
    summary: movedisk
    post:
      description: Move volume to different storage or to a different VM.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMovedisk-RB'
        description: Move volume to different storage or to a different VM.
      operationId: newNodesQemuMovediskByNodeAndVmid
      summary: Move volume to different storage or to a different VM.
  /nodes/{node}/qemu/{vmid}/mtunnel:
    summary: mtunnel
    post:
      description: Migration tunnel endpoint - only for internal use by VM migration.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMtunnel-RB'
        description: Migration tunnel endpoint - only for internal use by VM migration.
      operationId: newNodesQemuMtunnelByNodeAndVmid
      summary: Migration tunnel endpoint - only for internal use by VM migration.
  /nodes/{node}/qemu/{vmid}/mtunnelwebsocket:
    summary: mtunnelwebsocket
    get:
      description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuMtunnelwebsocket'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuMtunnelwebsocket-RB'
        description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      operationId: getNodesQemuMtunnelwebsocketByNodeAndVmid
      summary: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
  /nodes/{node}/qemu/{vmid}/pending:
    summary: pending
    get:
      description: Get the virtual machine configuration with both current and pending values.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuPending'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuPendingByNodeAndVmid
      summary: Get the virtual machine configuration with both current and pending values.
  /nodes/{node}/qemu/{vmid}/remote_migrate:
    summary: remotemigrate
    post:
      description: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuRemotemigrate-RB'
        description: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
      operationId: newNodesQemuRemotemigrateByNodeAndVmid
      summary: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
  /nodes/{node}/qemu/{vmid}/resize:
    put:
      description: Extend volume size.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuResize-RB'
        description: Extend volume size.
      operationId: setNodesQemuResizeByNodeAndVmid
      summary: Extend volume size.
    summary: resize
  /nodes/{node}/qemu/{vmid}/rrd:
    summary: rrd
    get:
      description: Read VM RRD statistics (returns PNG)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuRrd'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuRrd-RB'
        description: Read VM RRD statistics (returns PNG)
      operationId: getNodesQemuRrdByNodeAndVmid
      summary: Read VM RRD statistics (returns PNG)
  /nodes/{node}/qemu/{vmid}/rrddata:
    summary: rrddata
    get:
      description: Read VM RRD statistics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuRrddata'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuRrddata-RB'
        description: Read VM RRD statistics
      operationId: getNodesQemuRrddataByNodeAndVmid
      summary: Read VM RRD statistics
  /nodes/{node}/qemu/{vmid}/sendkey:
    put:
      description: Send key event to virtual machine.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuSendkey-RB'
        description: Send key event to virtual machine.
      operationId: setNodesQemuSendkeyByNodeAndVmid
      summary: Send key event to virtual machine.
    summary: sendkey
  /nodes/{node}/qemu/{vmid}/snapshot:
    post:
      description: Snapshot a VM.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSnapshot-RB'
        description: Snapshot a VM.
      operationId: newNodesQemuSnapshotByNodeAndVmid
      summary: Snapshot a VM.
    summary: snapshot
    get:
      description: List all snapshots.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuSnapshot'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuSnapshotByNodeAndVmid
      summary: List all snapshots.
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}:
    get:
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuSnapshot-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuSnapshotByNodeAndVmidAndSnapname
      summary: ""
    summary: snapname
    delete:
      description: Delete a VM snapshot.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuSnapshot-RB'
        description: Delete a VM snapshot.
      operationId: removeNodesQemuSnapshotByNodeAndVmidAndSnapname
      summary: Delete a VM snapshot.
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config:
    summary: config
    get:
      description: Get snapshot configuration
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuSnapshotConfigByNodeAndVmidAndSnapname
      summary: Get snapshot configuration
    put:
      description: Update snapshot metadata.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuSnapshotConfig-RB'
        description: Update snapshot metadata.
      operationId: setNodesQemuSnapshotConfigByNodeAndVmidAndSnapname
      summary: Update snapshot metadata.
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback:
    summary: rollback
    post:
      description: Rollback VM state to specified snapshot.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSnapshotRollback-RB'
        description: Rollback VM state to specified snapshot.
      operationId: newNodesQemuSnapshotRollbackByNodeAndVmidAndSnapname
      summary: Rollback VM state to specified snapshot.
  /nodes/{node}/qemu/{vmid}/spiceproxy:
    summary: spiceproxy
    post:
      description: Returns a SPICE configuration to connect to the VM.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSpiceproxy-RB'
        description: Returns a SPICE configuration to connect to the VM.
      operationId: newNodesQemuSpiceproxyByNodeAndVmid
      summary: Returns a SPICE configuration to connect to the VM.
  /nodes/{node}/qemu/{vmid}/status:
    summary: status
    get:
      description: Directory index
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuStatusByNodeAndVmid
      summary: Directory index
  /nodes/{node}/qemu/{vmid}/status/current:
    summary: current
    get:
      description: Get virtual machine status.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuStatusCurrent'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      operationId: getNodesQemuStatusCurrentByNodeAndVmid
      summary: Get virtual machine status.
  /nodes/{node}/qemu/{vmid}/status/reboot:
    summary: reboot
    post:
      description: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusReboot-RB'
        description: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
      operationId: newNodesQemuStatusRebootByNodeAndVmid
      summary: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
  /nodes/{node}/qemu/{vmid}/status/reset:
    summary: reset
    post:
      description: Reset virtual machine.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusReset-RB'
        description: Reset virtual machine.
      operationId: newNodesQemuStatusResetByNodeAndVmid
      summary: Reset virtual machine.
  /nodes/{node}/qemu/{vmid}/status/resume:
    summary: resume
    post:
      description: Resume virtual machine.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusResume-RB'
        description: Resume virtual machine.
      operationId: newNodesQemuStatusResumeByNodeAndVmid
      summary: Resume virtual machine.
  /nodes/{node}/qemu/{vmid}/status/shutdown:
    summary: shutdown
    post:
      description: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusShutdown-RB'
        description: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
      operationId: newNodesQemuStatusShutdownByNodeAndVmid
      summary: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
  /nodes/{node}/qemu/{vmid}/status/start:
    summary: start
    post:
      description: Start virtual machine.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusStart-RB'
        description: Start virtual machine.
      operationId: newNodesQemuStatusStartByNodeAndVmid
      summary: Start virtual machine.
  /nodes/{node}/qemu/{vmid}/status/stop:
    summary: stop
    post:
      description: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusStop-RB'
        description: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
      operationId: newNodesQemuStatusStopByNodeAndVmid
      summary: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
  /nodes/{node}/qemu/{vmid}/status/suspend:
    summary: suspend
    post:
      description: Suspend virtual machine.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusSuspend-RB'
        description: Suspend virtual machine.
      operationId: newNodesQemuStatusSuspendByNodeAndVmid
      summary: Suspend virtual machine.
  /nodes/{node}/qemu/{vmid}/template:
    summary: template
    post:
      description: Create a Template.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuTemplate-RB'
        description: Create a Template.
      operationId: newNodesQemuTemplateByNodeAndVmid
      summary: Create a Template.
  /nodes/{node}/qemu/{vmid}/termproxy:
    summary: termproxy
    post:
      description: Creates a TCP proxy connections.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuTermproxy-RB'
        description: Creates a TCP proxy connections.
      operationId: newNodesQemuTermproxyByNodeAndVmid
      summary: Creates a TCP proxy connections.
  /nodes/{node}/qemu/{vmid}/unlink:
    put:
      description: Unlink/delete disk images.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuUnlink-RB'
        description: Unlink/delete disk images.
      operationId: setNodesQemuUnlinkByNodeAndVmid
      summary: Unlink/delete disk images.
    summary: unlink
  /nodes/{node}/qemu/{vmid}/vncproxy:
    summary: vncproxy
    post:
      description: Creates a TCP VNC proxy connections.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuVncproxy-RB'
        description: Creates a TCP VNC proxy connections.
      operationId: newNodesQemuVncproxyByNodeAndVmid
      summary: Creates a TCP VNC proxy connections.
  /nodes/{node}/qemu/{vmid}/vncwebsocket:
    summary: vncwebsocket
    get:
      description: Opens a weksocket for VNC traffic.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuVncwebsocket'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuVncwebsocket-RB'
        description: Opens a weksocket for VNC traffic.
      operationId: getNodesQemuVncwebsocketByNodeAndVmid
      summary: Opens a weksocket for VNC traffic.
  /nodes/{node}/query-url-metadata:
    summary: query-url-metadata
    get:
      description: 'Query metadata of an URL: file size, file name and mime type.'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQueryurlmetadata'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQueryurlmetadata-RB'
        description: 'Query metadata of an URL: file size, file name and mime type.'
      operationId: getNodesQueryurlmetadataByNode
      summary: 'Query metadata of an URL: file size, file name and mime type.'
  /nodes/{node}/replication:
    summary: replication
    get:
      description: List status of all replication jobs on this node.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplication'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesReplication-RB'
        description: List status of all replication jobs on this node.
      operationId: getNodesReplicationByNode
      summary: List status of all replication jobs on this node.
  /nodes/{node}/replication/{id}:
    summary: id
    get:
      description: Directory index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplication-GET'
      parameter:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesReplicationByNodeAndId
      summary: Directory index.
  /nodes/{node}/replication/{id}/log:
    summary: log
    get:
      description: Read replication job log.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplicationLog'
      parameter:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesReplicationLog-RB'
        description: Read replication job log.
      operationId: getNodesReplicationLogByNodeAndId
      summary: Read replication job log.
  /nodes/{node}/replication/{id}/schedule_now:
    summary: schedulenow
    post:
      description: Schedule replication job to start as soon as possible.
      responses: ""
      parameter:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: newNodesReplicationSchedulenowByNodeAndId
      summary: Schedule replication job to start as soon as possible.
  /nodes/{node}/replication/{id}/status:
    summary: status
    get:
      description: Get replication job status.
      responses: ""
      parameter:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesReplicationStatusByNodeAndId
      summary: Get replication job status.
  /nodes/{node}/report:
    summary: report
    get:
      description: Gather various systems information about a node
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesReportByNode
      summary: Gather various systems information about a node
  /nodes/{node}/rrd:
    summary: rrd
    get:
      description: Read node RRD statistics (returns PNG)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesRrd'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesRrd-RB'
        description: Read node RRD statistics (returns PNG)
      operationId: getNodesRrdByNode
      summary: Read node RRD statistics (returns PNG)
  /nodes/{node}/rrddata:
    summary: rrddata
    get:
      description: Read node RRD statistics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesRrddata'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesRrddata-RB'
        description: Read node RRD statistics
      operationId: getNodesRrddataByNode
      summary: Read node RRD statistics
  /nodes/{node}/scan:
    summary: scan
    get:
      description: Index of available scan methods
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScan'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesScanByNode
      summary: Index of available scan methods
  /nodes/{node}/scan/cifs:
    summary: cifs
    get:
      description: Scan remote CIFS server.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanCifs'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanCifs-RB'
        description: Scan remote CIFS server.
      operationId: getNodesScanCifsByNode
      summary: Scan remote CIFS server.
  /nodes/{node}/scan/glusterfs:
    summary: glusterfs
    get:
      description: Scan remote GlusterFS server.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanGlusterfs'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanGlusterfs-RB'
        description: Scan remote GlusterFS server.
      operationId: getNodesScanGlusterfsByNode
      summary: Scan remote GlusterFS server.
  /nodes/{node}/scan/iscsi:
    summary: iscsi
    get:
      description: Scan remote iSCSI server.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanIscsi'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanIscsi-RB'
        description: Scan remote iSCSI server.
      operationId: getNodesScanIscsiByNode
      summary: Scan remote iSCSI server.
  /nodes/{node}/scan/lvm:
    summary: lvm
    get:
      description: List local LVM volume groups.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanLvm'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesScanLvmByNode
      summary: List local LVM volume groups.
  /nodes/{node}/scan/lvmthin:
    summary: lvmthin
    get:
      description: List local LVM Thin Pools.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanLvmthin'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanLvmthin-RB'
        description: List local LVM Thin Pools.
      operationId: getNodesScanLvmthinByNode
      summary: List local LVM Thin Pools.
  /nodes/{node}/scan/nfs:
    summary: nfs
    get:
      description: Scan remote NFS server.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanNfs'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanNfs-RB'
        description: Scan remote NFS server.
      operationId: getNodesScanNfsByNode
      summary: Scan remote NFS server.
  /nodes/{node}/scan/pbs:
    summary: pbs
    get:
      description: Scan remote Proxmox Backup Server.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanPbs'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanPbs-RB'
        description: Scan remote Proxmox Backup Server.
      operationId: getNodesScanPbsByNode
      summary: Scan remote Proxmox Backup Server.
  /nodes/{node}/scan/zfs:
    summary: zfs
    get:
      description: Scan zfs pool list on local node.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanZfs'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesScanZfsByNode
      summary: Scan zfs pool list on local node.
  /nodes/{node}/sdn:
    summary: sdn
    get:
      description: SDN index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdn'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesSdnByNode
      summary: SDN index.
  /nodes/{node}/sdn/zones:
    summary: zones
    get:
      description: Get status for all zones.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdnZones'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesSdnZonesByNode
      summary: Get status for all zones.
  /nodes/{node}/sdn/zones/{zone}:
    summary: zone
    get:
      description: ""
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
      tags:
      - nodes
      operationId: getNodesSdnZonesByNodeAndZone
      summary: ""
  /nodes/{node}/sdn/zones/{zone}/content:
    summary: content
    get:
      description: List zone content.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdnZonesContent'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
      tags:
      - nodes
      operationId: getNodesSdnZonesContentByNodeAndZone
      summary: List zone content.
  /nodes/{node}/services:
    summary: services
    get:
      description: Service list.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesServices'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesServicesByNode
      summary: Service list.
  /nodes/{node}/services/{service}:
    summary: service
    get:
      description: Directory index
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: service
        in: path
        description: Service ID
        required: true
      tags:
      - nodes
      operationId: getNodesServicesByNodeAndService
      summary: Directory index
  /nodes/{node}/services/{service}/reload:
    summary: reload
    post:
      description: Reload service. Falls back to restart if service cannot be reloaded.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: service
        in: path
        description: Service ID
        required: true
      tags:
      - nodes
      operationId: newNodesServicesReloadByNodeAndService
      summary: Reload service. Falls back to restart if service cannot be reloaded.
  /nodes/{node}/services/{service}/restart:
    summary: restart
    post:
      description: Hard restart service. Use reload if you want to reduce interruptions.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: service
        in: path
        description: Service ID
        required: true
      tags:
      - nodes
      operationId: newNodesServicesRestartByNodeAndService
      summary: Hard restart service. Use reload if you want to reduce interruptions.
  /nodes/{node}/services/{service}/start:
    summary: start
    post:
      description: Start service.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: service
        in: path
        description: Service ID
        required: true
      tags:
      - nodes
      operationId: newNodesServicesStartByNodeAndService
      summary: Start service.
  /nodes/{node}/services/{service}/state:
    summary: state
    get:
      description: Read service properties
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: service
        in: path
        description: Service ID
        required: true
      tags:
      - nodes
      operationId: getNodesServicesStateByNodeAndService
      summary: Read service properties
  /nodes/{node}/services/{service}/stop:
    summary: stop
    post:
      description: Stop service.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: service
        in: path
        description: Service ID
        required: true
      tags:
      - nodes
      operationId: newNodesServicesStopByNodeAndService
      summary: Stop service.
  /nodes/{node}/spiceshell:
    summary: spiceshell
    post:
      description: Creates a SPICE shell.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSpiceshell-RB'
        description: Creates a SPICE shell.
      operationId: newNodesSpiceshellByNode
      summary: Creates a SPICE shell.
  /nodes/{node}/startall:
    summary: startall
    post:
      description: Start all VMs and containers located on this node (by default only those with onboot=1).
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStartall-RB'
        description: Start all VMs and containers located on this node (by default only those with onboot=1).
      operationId: newNodesStartallByNode
      summary: Start all VMs and containers located on this node (by default only those with onboot=1).
  /nodes/{node}/status:
    post:
      description: Reboot or shutdown a node.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStatus-RB'
        description: Reboot or shutdown a node.
      operationId: newNodesStatusByNode
      summary: Reboot or shutdown a node.
    summary: status
    get:
      description: Read node status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStatus'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesStatusByNode
      summary: Read node status
  /nodes/{node}/stopall:
    summary: stopall
    post:
      description: Stop all VMs and Containers.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStopall-RB'
        description: Stop all VMs and Containers.
      operationId: newNodesStopallByNode
      summary: Stop all VMs and Containers.
  /nodes/{node}/storage:
    summary: storage
    get:
      description: Get status for all datastores.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorage'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorage-RB'
        description: Get status for all datastores.
      operationId: getNodesStorageByNode
      summary: Get status for all datastores.
  /nodes/{node}/storage/{storage}:
    summary: storage
    get:
      description: ""
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      operationId: getNodesStorageByNodeAndStorage
      summary: ""
  /nodes/{node}/storage/{storage}/content:
    post:
      description: Allocate disk images.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageContent-RB'
        description: Allocate disk images.
      operationId: newNodesStorageContentByNodeAndStorage
      summary: Allocate disk images.
    summary: content
    get:
      description: List storage content.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageContent-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageContent-RB'
        description: List storage content.
      operationId: getNodesStorageContentByNodeAndStorage
      summary: List storage content.
  /nodes/{node}/storage/{storage}/content/{volume}:
    post:
      description: Copy a volume. This is experimental code - do not use.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      - name: volume
        in: path
        description: Source volume identifier
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageContent-RB'
        description: Copy a volume. This is experimental code - do not use.
      operationId: newNodesStorageContentByNodeAndStorageAndVolume
      summary: Copy a volume. This is experimental code - do not use.
    get:
      description: Get volume attributes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageContent'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      - name: volume
        in: path
        description: Volume identifier
        required: true
      tags:
      - nodes
      operationId: getNodesStorageContentByNodeAndStorageAndVolume
      summary: Get volume attributes
    summary: volume
    delete:
      description: Delete volume
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      - name: volume
        in: path
        description: Volume identifier
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesStorageContent-RB'
        description: Delete volume
      operationId: removeNodesStorageContentByNodeAndStorageAndVolume
      summary: Delete volume
    put:
      description: Update volume attributes
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      - name: volume
        in: path
        description: Volume identifier
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesStorageContent-RB'
        description: Update volume attributes
      operationId: setNodesStorageContentByNodeAndStorageAndVolume
      summary: Update volume attributes
  /nodes/{node}/storage/{storage}/download-url:
    summary: download-url
    post:
      description: Download templates, ISO images and OVAs by using an URL.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageDownloadurl-RB'
        description: Download templates, ISO images and OVAs by using an URL.
      operationId: newNodesStorageDownloadurlByNodeAndStorage
      summary: Download templates, ISO images and OVAs by using an URL.
  /nodes/{node}/storage/{storage}/file-restore/download:
    summary: download
    get:
      description: Extract a file or directory (as zip archive) from a PBS backup.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageFilerestoreDownload'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageFilerestoreDownload-RB'
        description: Extract a file or directory (as zip archive) from a PBS backup.
      operationId: getNodesStorageFilerestoreDownloadByNodeAndStorage
      summary: Extract a file or directory (as zip archive) from a PBS backup.
  /nodes/{node}/storage/{storage}/file-restore/list:
    summary: list
    get:
      description: List files and directories for single file restore under the given path.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageFilerestoreList'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageFilerestoreList-RB'
        description: List files and directories for single file restore under the given path.
      operationId: getNodesStorageFilerestoreListByNodeAndStorage
      summary: List files and directories for single file restore under the given path.
  /nodes/{node}/storage/{storage}/import-metadata:
    summary: import-metadata
    get:
      description: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageImportmetadata'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageImportmetadata-RB'
        description: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
      operationId: getNodesStorageImportmetadataByNodeAndStorage
      summary: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
  /nodes/{node}/storage/{storage}/prunebackups:
    get:
      description: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStoragePrunebackups'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStoragePrunebackups-RB'
        description: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
      operationId: getNodesStoragePrunebackupsByNodeAndStorage
      summary: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
    summary: prunebackups
    delete:
      description: Prune backups. Only those using the standard naming scheme are considered.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesStoragePrunebackups-RB'
        description: Prune backups. Only those using the standard naming scheme are considered.
      operationId: removeNodesStoragePrunebackupsByNodeAndStorage
      summary: Prune backups. Only those using the standard naming scheme are considered.
  /nodes/{node}/storage/{storage}/rrd:
    summary: rrd
    get:
      description: Read storage RRD statistics (returns PNG).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageRrd'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageRrd-RB'
        description: Read storage RRD statistics (returns PNG).
      operationId: getNodesStorageRrdByNodeAndStorage
      summary: Read storage RRD statistics (returns PNG).
  /nodes/{node}/storage/{storage}/rrddata:
    summary: rrddata
    get:
      description: Read storage RRD statistics.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageRrddata'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageRrddata-RB'
        description: Read storage RRD statistics.
      operationId: getNodesStorageRrddataByNodeAndStorage
      summary: Read storage RRD statistics.
  /nodes/{node}/storage/{storage}/status:
    summary: status
    get:
      description: Read storage status.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      operationId: getNodesStorageStatusByNodeAndStorage
      summary: Read storage status.
  /nodes/{node}/storage/{storage}/upload:
    summary: upload
    post:
      description: Upload templates, ISO images and OVAs.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageUpload-RB'
        description: Upload templates, ISO images and OVAs.
      operationId: newNodesStorageUploadByNodeAndStorage
      summary: Upload templates, ISO images and OVAs.
  /nodes/{node}/subscription:
    post:
      description: Update subscription info.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSubscription-RB'
        description: Update subscription info.
      operationId: newNodesSubscriptionByNode
      summary: Update subscription info.
    get:
      description: Read subscription info.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSubscription'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesSubscriptionByNode
      summary: Read subscription info.
    summary: subscription
    delete:
      description: Delete subscription key of this node.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: removeNodesSubscriptionByNode
      summary: Delete subscription key of this node.
    put:
      description: Set subscription key.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesSubscription-RB'
        description: Set subscription key.
      operationId: setNodesSubscriptionByNode
      summary: Set subscription key.
  /nodes/{node}/suspendall:
    summary: suspendall
    post:
      description: Suspend all VMs.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSuspendall-RB'
        description: Suspend all VMs.
      operationId: newNodesSuspendallByNode
      summary: Suspend all VMs.
  /nodes/{node}/syslog:
    summary: syslog
    get:
      description: Read system log
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSyslog'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesSyslog-RB'
        description: Read system log
      operationId: getNodesSyslogByNode
      summary: Read system log
  /nodes/{node}/tasks:
    summary: tasks
    get:
      description: Read task list for one node (finished tasks).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasks'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesTasks-RB'
        description: Read task list for one node (finished tasks).
      operationId: getNodesTasksByNode
      summary: Read task list for one node (finished tasks).
  /nodes/{node}/tasks/{upid}:
    get:
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasks-GET'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: upid
        in: path
        description: 
        required: true
      tags:
      - nodes
      operationId: getNodesTasksByNodeAndUpid
      summary: ""
    summary: upid
    delete:
      description: Stop a task.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: upid
        in: path
        description: 
        required: true
      tags:
      - nodes
      operationId: removeNodesTasksByNodeAndUpid
      summary: Stop a task.
  /nodes/{node}/tasks/{upid}/log:
    summary: log
    get:
      description: Read task log.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasksLog'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: upid
        in: path
        description: The task's unique ID.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesTasksLog-RB'
        description: Read task log.
      operationId: getNodesTasksLogByNodeAndUpid
      summary: Read task log.
  /nodes/{node}/tasks/{upid}/status:
    summary: status
    get:
      description: Read task status.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasksStatus'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      - name: upid
        in: path
        description: The task's unique ID.
        required: true
      tags:
      - nodes
      operationId: getNodesTasksStatusByNodeAndUpid
      summary: Read task status.
  /nodes/{node}/termproxy:
    summary: termproxy
    post:
      description: Creates a VNC Shell proxy.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesTermproxy-RB'
        description: Creates a VNC Shell proxy.
      operationId: newNodesTermproxyByNode
      summary: Creates a VNC Shell proxy.
  /nodes/{node}/time:
    summary: time
    get:
      description: Read server time and time zone settings.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTime'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesTimeByNode
      summary: Read server time and time zone settings.
    put:
      description: Set time zone.
      responses:
        "200":
          description: OK
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesTime-RB'
        description: Set time zone.
      operationId: setNodesTimeByNode
      summary: Set time zone.
  /nodes/{node}/version:
    summary: version
    get:
      description: API version details
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVersion'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      operationId: getNodesVersionByNode
      summary: API version details
  /nodes/{node}/vncshell:
    summary: vncshell
    post:
      description: Creates a VNC Shell proxy.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesVncshell-RB'
        description: Creates a VNC Shell proxy.
      operationId: newNodesVncshellByNode
      summary: Creates a VNC Shell proxy.
  /nodes/{node}/vncwebsocket:
    summary: vncwebsocket
    get:
      description: Opens a websocket for VNC traffic.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVncwebsocket'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVncwebsocket-RB'
        description: Opens a websocket for VNC traffic.
      operationId: getNodesVncwebsocketByNode
      summary: Opens a websocket for VNC traffic.
  /nodes/{node}/vzdump:
    summary: vzdump
    post:
      description: Create backup.
      responses: ""
      parameter:
      - name: node
        in: path
        description: Only run if executed on this node.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesVzdump-RB'
        description: Create backup.
      operationId: newNodesVzdumpByNode
      summary: Create backup.
  /nodes/{node}/vzdump/defaults:
    summary: defaults
    get:
      description: Get the currently configured vzdump defaults.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVzdumpDefaults'
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVzdumpDefaults-RB'
        description: Get the currently configured vzdump defaults.
      operationId: getNodesVzdumpDefaultsByNode
      summary: Get the currently configured vzdump defaults.
  /nodes/{node}/vzdump/extractconfig:
    summary: extractconfig
    get:
      description: Extract configuration from vzdump backup archive.
      responses: ""
      parameter:
      - name: node
        in: path
        description: The cluster node name.
        required: true
      tags:
      - nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVzdumpExtractconfig-RB'
        description: Extract configuration from vzdump backup archive.
      operationId: getNodesVzdumpExtractconfigByNode
      summary: Extract configuration from vzdump backup archive.
  /nodes/{node}/wakeonlan:
    summary: wakeonlan
    post:
      description: Try to wake a node via 'wake on LAN' network packet.
      responses: ""
      parameter:
      - name: node
        in: path
        description: target node for wake on LAN packet
        required: true
      tags:
      - nodes
      operationId: newNodesWakeonlanByNode
      summary: Try to wake a node via 'wake on LAN' network packet.
  /pools:
    post:
      description: Create new pool.
      responses:
        "200":
          description: OK
      tags:
      - pools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-Pools-RB'
        description: Create new pool.
      operationId: newPools
      summary: Create new pool.
    get:
      description: List pools or get pool configuration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pools-GET'
      tags:
      - pools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Pools-RB'
        description: List pools or get pool configuration.
      operationId: getPools
      summary: List pools or get pool configuration.
    summary: pools
    delete:
      description: Delete pool.
      responses:
        "200":
          description: OK
      tags:
      - pools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-Pools-RB'
        description: Delete pool.
      operationId: removePools
      summary: Delete pool.
    put:
      description: Update pool.
      responses:
        "200":
          description: OK
      tags:
      - pools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Pools-RB'
        description: Update pool.
      operationId: setPools
      summary: Update pool.
  /pools/{poolid}:
    get:
      description: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pools'
      parameter:
      - name: poolid
        in: path
        description: 
        required: true
      tags:
      - pools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Pools-RB'
        description: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
      operationId: getPoolsByPoolid
      summary: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
    summary: poolid
    delete:
      description: Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').
      responses:
        "200":
          description: OK
      parameter:
      - name: poolid
        in: path
        description: 
        required: true
      tags:
      - pools
      operationId: removePoolsByPoolid
      summary: Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').
    put:
      description: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
      responses:
        "200":
          description: OK
      parameter:
      - name: poolid
        in: path
        description: 
        required: true
      tags:
      - pools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Pools-RB'
        description: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
      operationId: setPoolsByPoolid
      summary: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
  /storage:
    post:
      description: Create a new storage.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-Storage-RB'
        description: Create a new storage.
      operationId: newStorage
      summary: Create a new storage.
    summary: storage
    get:
      description: Storage index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage-GET'
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Storage-RB'
        description: Storage index.
      operationId: getStorage
      summary: Storage index.
  /storage/{storage}:
    get:
      description: Read storage configuration.
      responses: ""
      parameter:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - storage
      operationId: getStorageByStorage
      summary: Read storage configuration.
    summary: storage
    delete:
      description: Delete storage configuration.
      responses:
        "200":
          description: OK
      parameter:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - storage
      operationId: removeStorageByStorage
      summary: Delete storage configuration.
    put:
      description: Update storage configuration.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage-PUT'
      parameter:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
      tags:
      - storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Storage-RB'
        description: Update storage configuration.
      operationId: setStorageByStorage
      summary: Update storage configuration.
  /version:
    summary: version
    get:
      tags:
      - version
      description: API version details, including some parts of the global datacenter config.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      summary: API version details, including some parts of the global datacenter config.
      operationId: getVersion
components:
  schemas:
    GET-NodesQemuFirewallLog-RB:
      type: object
      properties:
        start:
          type: integer
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        until:
          type: integer
        node:
          type: string
        limit:
          type: integer
        since:
          type: integer
    AccessDomains:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          realm:
            type: string
          tfa:
            type: string
            enum:
            - yubico
            - oath
          comment:
            type: string
    POST-NodesLxcStatusReboot-RB:
      type: object
      properties:
        node:
          type: string
        timeout:
          type: integer
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-ClusterHaGroups-RB:
      type: object
      properties:
        nodes:
          type: string
        restricted:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        type:
          type: string
          enum:
          - group
        comment:
          maxLength: 4096
          type: string
        group:
          type: string
        nofailback:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-NodesFirewallRules-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        delete:
          type: string
        node:
          type: string
        sport:
          type: string
        moveto:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    GET-NodesTasks-RB:
      type: object
      properties:
        source:
          type: string
          enum:
          - archive
          - active
          - all
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        typefilter:
          type: string
        userfilter:
          type: string
        until:
          type: integer
        start:
          type: integer
        node:
          type: string
        limit:
          type: integer
        errors:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        statusfilter:
          type: string
        since:
          type: integer
    GET-NodesRrddata-RB:
      type: object
      properties:
        node:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    GET-NodesQemuVncwebsocket-RB:
      type: object
      properties:
        node:
          type: string
        vncticket:
          maxLength: 512
          type: string
        port:
          type: integer
          minimum: 5900
          maximum: 5999
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesStorage-RB:
      type: object
      properties:
        enabled:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        target:
          type: string
        node:
          type: string
        content:
          type: string
        storage:
          type: string
        format:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesLxc:
      type: array
      items:
        type: object
        properties:
          netout:
            type: integer
          cpus:
            type: number
          vmid:
            type: integer
            minimum: 100
            maximum: 999999999
          maxdisk:
            type: integer
          template:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          diskread:
            type: integer
          netin:
            type: integer
          diskwrite:
            type: integer
          tags:
            type: string
          maxmem:
            type: integer
          name:
            type: string
          uptime:
            type: integer
          status:
            type: string
            enum:
            - stopped
            - running
          lock:
            type: string
          maxswap:
            type: integer
          disk:
            type: integer
    PUT-NodesLxcSnapshotConfig-RB:
      type: object
      properties:
        node:
          type: string
        description:
          type: string
        snapname:
          maxLength: 40
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesLxcFirewallRules-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        node:
          type: string
        sport:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    POST-NodesLxcStatusStop-RB:
      type: object
      properties:
        node:
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        overrule-shutdown:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-ClusterAcmePlugins-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - dns
          - standalone
    NodesStorageFilerestoreList:
      type: array
      items:
        type: object
        properties:
          mtime:
            type: integer
          size:
            type: integer
          filepath:
            type: string
          type:
            type: string
          leaf:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          text:
            type: string
    POST-NodesStorageContent-RB:
      type: object
      properties:
        node:
          type: string
        volume:
          type: string
        target_node:
          type: string
        storage:
          type: string
        target:
          type: string
    ClusterMetrics:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesQemuFirewallOptions-RB:
      type: object
      properties:
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        radv:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ipfilter:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        macfilter:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        delete:
          type: string
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        node:
          type: string
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 64
          type: string
        ndp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        dhcp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesCephOsdScrub-RB:
      type: object
      properties:
        node:
          type: string
        deep:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        osdid:
          type: integer
    ClusterMetricsExport:
      type: object
      properties:
        data:
          type: array
          items:
            additionalProperties: 0
            properties:
              id:
                description: Unique identifier for this metric object, for instance 'node/<nodename>' or 'qemu/<vmid>'.
                type: string
              metric:
                description: Name of the metric.
                type: string
              timestamp:
                description: Time at which this metric was observed
                type: integer
              type:
                description: Type of the metric.
                enum:
                - gauge
                - counter
                - derive
                type: string
              value:
                description: Metric value.
                type: number
            type: object
    PUT-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        gateway:
          type: string
        snat:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        delete:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        dnszoneprefix:
          type: string
        dhcp-range:
          type: array
          items:
            format: pve-sdn-dhcp-range
            type: string
        subnet:
          type: string
        vnet:
          type: string
        dhcp-dns-server:
          type: string
    ClusterNotificationsEndpointsGotify:
      type: object
      properties:
        name:
          type: string
        server:
          type: string
        digest:
          maxLength: 64
          type: string
        comment:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    DELETE-NodesLxcSnapshot-RB:
      type: object
      properties:
        node:
          type: string
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        snapname:
          maxLength: 40
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesLxcSnapshot-GET:
      type: array
      items:
        type: object
        properties: {}
    NodesDisks:
      type: array
      items:
        type: object
        properties: {}
    NodesScanNfs:
      type: array
      items:
        type: object
        properties:
          options:
            type: string
          path:
            type: string
    DELETE-ClusterReplication-RB:
      type: object
      properties:
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        keep:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesLxcRemotemigrate-RB:
      type: object
      properties:
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        node:
          type: string
        delete:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        target-bridge:
          type: string
        restart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        bwlimit:
          minimum: "0"
          type: number
        target-vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        target-storage:
          type: string
        online:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        timeout:
          type: integer
        target-endpoint:
          type: string
    ClusterAcmeAccount:
      type: object
      properties:
        location:
          type: string
        account:
          type: object
        directory:
          pattern: ^https?://.*
          type: string
        tos:
          type: string
    POST-NodesQemu-RB:
      type: object
      properties:
        protection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        watchdog:
          type: string
        args:
          type: string
        cdrom:
          type: string
        bwlimit:
          minimum: "0"
          type: integer
        machine:
          type: string
        ipconfig[n]:
          type: string
        cpuunits:
          type: integer
          minimum: 1
          maximum: 262144
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        scsi[n]:
          type: string
        cores:
          minimum: 1
          type: integer
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
        import-working-storage:
          type: string
        vga:
          type: string
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        usb[n]:
          type: string
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        sshkeys:
          type: string
        ciupgrade:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vcpus:
          minimum: 1
          type: integer
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        spice_enhancements:
          type: string
        migrate_speed:
          type: integer
        hotplug:
          type: string
        freeze:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        pool:
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        startup:
          type: string
        efidisk0:
          type: string
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        nameserver:
          type: string
        amd-sev:
          type: string
        live-restore:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        hookscript:
          type: string
        sata[n]:
          type: string
        unique:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        storage:
          type: string
        onboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        cicustom:
          type: string
        numa[n]:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        ide[n]:
          type: string
        net[n]:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        acpi:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        audio0:
          type: string
        localtime:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        sockets:
          minimum: 1
          type: integer
        tags:
          type: string
        searchdomain:
          type: string
        hostpci[n]:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        migrate_downtime:
          type: number
        vmstatestorage:
          type: string
        tablet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        cpulimit:
          type: number
          maximum: 128
        ivshmem:
          type: string
        start:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        memory:
          type: string
        tdf:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        rng0:
          type: string
        node:
          type: string
        shares:
          type: integer
          maximum: 50000
        cipassword:
          type: string
        reboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        archive:
          maxLength: 255
          type: string
        name:
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        boot:
          type: string
        numa:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        affinity:
          type: string
        keephugepages:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        description:
          maxLength: 8192
          type: string
        tpmstate0:
          type: string
        virtio[n]:
          type: string
        ciuser:
          type: string
        smbios1:
          maxLength: 512
          type: string
        agent:
          type: string
        balloon:
          type: integer
        smp:
          minimum: 1
          type: integer
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        autostart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        unused[n]:
          type: string
        kvm:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        cpu:
          type: string
    POST-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        nomatch:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        node:
          type: string
        cidr:
          type: string
    POST-NodesQemuVncproxy-RB:
      type: object
      properties:
        node:
          type: string
        websocket:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        generate-password:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesQemuMigrate:
      type: object
      properties:
        not_allowed_nodes:
          type: object
        mapped-resources:
          type: array
          items: 
        local_disks:
          type: array
          items: 
        local_resources:
          type: array
          items: 
        running:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        allowed_nodes:
          type: array
          items: 
    DELETE-ClusterFirewallGroups-RB:
      type: object
      properties:
        group:
          type: string
          maxLength: 18
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
    POST-ClusterConfigJoin-RB:
      type: object
      properties:
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        password:
          maxLength: 128
          type: string
        hostname:
          type: string
        nodeid:
          minimum: 1
          type: integer
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        link[n]:
          type: string
        votes:
          type: integer
    NodesDisksZfs:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        action:
          type: string
        state:
          type: string
        errors:
          type: string
        children:
          type: array
          items:
            properties:
              cksum:
                optional: 1
                type: number
              msg:
                description: An optional message about the vdev.
                type: string
              name:
                description: The name of the vdev or section.
                type: string
              read:
                optional: 1
                type: number
              state:
                description: The state of the vdev.
                optional: 1
                type: string
              write:
                optional: 1
                type: number
            type: object
        scan:
          type: string
    POST-NodesQemuSnapshotRollback-RB:
      type: object
      properties:
        node:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        snapname:
          maxLength: 40
          type: string
        start:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-ClusterNotificationsMatchers-RB:
      type: object
      properties:
        name:
          type: string
        match-calendar:
          type: array
          items:
            type: string
        match-severity:
          type: array
          items:
            type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        target:
          type: array
          items:
            format: pve-configid
            type: string
        match-field:
          type: array
          items:
            type: string
        invert-match:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        mode:
          type: string
          enum:
          - all
          - any
    NodesQemuFirewallIpset:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            maxLength: 64
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
    NodesApt:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    NodesScanLvmthin:
      type: array
      items:
        type: object
        properties:
          lv:
            type: string
    GET-NodesRrd-RB:
      type: object
      properties:
        ds:
          type: string
        node:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    NodesLxcInterfaces:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          inet:
            type: string
          hwaddr:
            type: string
          inet6:
            type: string
    GET-NodesCephOsdLvinfo-RB:
      type: object
      properties:
        node:
          type: string
        type:
          type: string
          enum:
          - block
          - db
          - wal
        osdid:
          type: integer
    GET-NodesLxcFeature-RB:
      type: object
      properties:
        node:
          type: string
        feature:
          type: string
          enum:
          - snapshot
          - clone
          - copy
        snapname:
          maxLength: 40
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesAptUpdate-RB:
      type: object
      properties:
        node:
          type: string
        notify:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        quiet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    ClusterMappingPci:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
          map:
            type: array
            items:
              description: A mapping for a node.
              type: string
          checks:
            type: array
            items:
              properties:
                message:
                  description: The message of the error
                  type: string
                severity:
                  description: The severity of the error
                  enum:
                  - warning
                  - error
                  type: string
              type: object
          id:
            type: string
    AccessUsersToken-POST:
      type: object
      properties:
        info:
          type: object
          properties:
            comment:
              optional: 1
              type: string
            expire:
              description: API token expiration date (seconds since epoch). '0' means no expiration date.
              minimum: 0
              optional: 1
              type: integer
            privsep:
              default: 1
              description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
              optional: 1
              type: boolean
        full-tokenid:
          type: string
        value:
          type: string
    POST-NodesQemuStatusReset-RB:
      type: object
      properties:
        node:
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesCephMon-RB:
      type: object
      properties:
        node:
          type: string
        monid:
          type: string
          maxLength: 200
          pattern: '[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?'
        mon-address:
          type: string
    PUT-NodesDisksWipedisk-RB:
      type: object
      properties:
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
        node:
          type: string
    NodesLxcFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
          cidr:
            type: string
          nomatch:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    NodesStatus:
      type: object
      properties:
        boot-info:
          type: object
          properties:
            mode:
              description: Through which firmware the system got booted.
              enum:
              - efi
              - legacy-bios
              type: string
            secureboot:
              description: System is booted in secure mode, only applicable for the "efi" mode.
              optional: 1
              type: boolean
        current-kernel:
          type: object
          properties:
            machine:
              description: Hardware (architecture) type
              type: string
            release:
              description: OS kernel release (e.g., "6.8.0")
              type: string
            sysname:
              description: OS kernel name (e.g., "Linux")
              type: string
            version:
              description: OS kernel version with build info
              type: string
    DELETE-NodesQemuFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        pos:
          type: integer
    PUT-ClusterNotificationsEndpointsGotify-RB:
      type: object
      properties:
        name:
          type: string
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        token:
          type: string
        server:
          type: string
    NodesAptVersions:
      type: array
      items:
        type: object
        properties: {}
    ClusterResources:
      type: array
      items:
        type: object
        properties:
          maxdisk:
            type: integer
          status:
            type: string
          node:
            type: string
          netout:
            type: integer
          mem:
            type: integer
          diskwrite:
            type: integer
          diskread:
            type: integer
          template:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          type:
            type: string
            enum:
            - node
            - storage
            - pool
            - qemu
            - lxc
            - openvz
            - sdn
          name:
            type: string
          pool:
            type: string
          cpu:
            type: number
          maxcpu:
            type: number
          level:
            type: string
          plugintype:
            type: string
          maxmem:
            type: integer
          vmid:
            type: integer
            minimum: 100
            maximum: 999999999
          lock:
            type: string
          hastate:
            type: string
          cgroup-mode:
            type: integer
          content:
            type: string
          storage:
            type: string
          netin:
            type: integer
          disk:
            type: integer
          tags:
            type: string
          id:
            type: string
          uptime:
            type: integer
    NodesRrd:
      type: object
      properties:
        filename:
          type: string
    NodesVncwebsocket:
      type: object
      properties:
        port:
          type: string
    NodesQemuCloudinit:
      type: array
      items:
        type: object
        properties:
          key:
            type: string
          pending:
            type: string
          delete:
            type: integer
            maximum: 1
          value:
            type: string
    GET-NodesCephCmdsafety-RB:
      type: object
      properties:
        node:
          type: string
        action:
          type: string
          enum:
          - stop
          - destroy
        id:
          type: string
        service:
          type: string
          enum:
          - osd
          - mon
          - mds
    POST-NodesSubscription-RB:
      type: object
      properties:
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
    GET-NodesTasksLog-RB:
      type: object
      properties:
        limit:
          type: integer
        node:
          type: string
        download:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        upid:
          type: string
        start:
          type: integer
    NodesFirewallLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    NodesSyslog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    ClusterBackup:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            maxLength: 50
            pattern: '\S+'
    ClusterNotificationsMatchers:
      type: object
      properties:
        name:
          type: string
        match-calendar:
          type: array
          items:
            type: string
        match-severity:
          type: array
          items:
            type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        target:
          type: array
          items:
            format: pve-configid
            type: string
        match-field:
          type: array
          items:
            type: string
        invert-match:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        mode:
          type: string
          enum:
          - all
          - any
    GET-ClusterHaResources-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - ct
          - vm
    ClusterFirewallGroups-GET:
      type: array
      items:
        type: object
        properties:
          group:
            type: string
            maxLength: 18
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
    GET-NodesQemuConfig-RB:
      type: object
      properties:
        node:
          type: string
        snapshot:
          maxLength: 40
          type: string
        current:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesLxcMtunnel-RB:
      type: object
      properties:
        node:
          type: string
        bridges:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        storages:
          type: string
    NodesLxcRrddata:
      type: array
      items:
        type: object
        properties: {}
    PUT-ClusterSdnIpams-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        section:
          type: integer
        ipam:
          type: string
        digest:
          maxLength: 64
          type: string
        url:
          type: string
        token:
          type: string
    ClusterReplication:
      type: array
      items:
        type: object
        properties: {}
    NodesQemuFeature:
      type: object
      properties:
        nodes:
          type: array
          items:
            type: string
        hasFeature:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesQemuFirewallRules-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        node:
          type: string
        sport:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    NodesStorageRrd:
      type: object
      properties:
        filename:
          type: string
    NodesLxcVncwebsocket:
      type: object
      properties:
        port:
          type: string
    NodesCephPool-GET:
      type: array
      items:
        type: object
        properties: {}
    PUT-AccessPassword-RB:
      type: object
      properties:
        password:
          type: string
          maxLength: 64
          minLength: 8
        confirmation-password:
          type: string
          maxLength: 64
          minLength: 5
        userid:
          maxLength: 64
          type: string
    ClusterNotificationsEndpointsSmtp-GET:
      type: array
      items:
        type: object
        properties:
          mailto-user:
            type: array
            items:
              format: pve-userid
              type: string
          mode:
            type: string
            enum:
            - insecure
            - starttls
            - tls
          username:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          disable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          comment:
            type: string
          author:
            type: string
          mailto:
            type: array
            items:
              format: email-or-username
              type: string
          server:
            type: string
          name:
            type: string
          port:
            type: integer
          from-address:
            type: string
    NodesFirewallOptions:
      type: object
      properties:
        nf_conntrack_max:
          minimum: 32768
          type: integer
        nf_conntrack_tcp_timeout_established:
          minimum: 7875
          type: integer
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nf_conntrack_tcp_timeout_syn_recv:
          type: integer
          minimum: 30
          maximum: 60
        tcpflags:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        protection_synflood_rate:
          type: integer
        nosmurfs:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nf_conntrack_helpers:
          type: string
        log_nf_conntrack:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nf_conntrack_allow_invalid:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        protection_synflood:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nftables:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        protection_synflood_burst:
          type: integer
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ndp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tcp_flags_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        smurf_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
    Pools:
      type: object
      properties:
        comment:
          type: string
        members:
          type: array
          items:
            additionalProperties: 1
            properties:
              id:
                type: string
              node:
                type: string
              storage:
                optional: 1
                type: string
              type:
                enum:
                - qemu
                - lxc
                - openvz
                - storage
                type: string
              vmid:
                optional: 1
                type: integer
            type: object
    POST-AccessDomains-RB:
      type: object
      properties:
        bind_dn:
          maxLength: 256
          type: string
        default:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        client-key:
          maxLength: 256
          type: string
        tfa:
          maxLength: 128
          type: string
        capath:
          type: string
        prompt:
          pattern: (?:none|login|consent|select_account|\S+)
          type: string
        group_name_attr:
          maxLength: 256
          type: string
        domain:
          type: string
          maxLength: 256
          pattern: '\S+'
        user_attr:
          type: string
          maxLength: 256
          pattern: '\S{2,}'
        verify:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        case-sensitive:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        type:
          type: string
          enum:
          - ad
          - ldap
          - openid
          - pam
          - pve
        group_dn:
          maxLength: 256
          type: string
        issuer-url:
          maxLength: 256
          type: string
        check-connection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        certkey:
          type: string
        filter:
          maxLength: 2048
          type: string
        acr-values:
          pattern: ^[^\x00-\x1F\x7F <>#"]*$
          type: string
        realm:
          maxLength: 32
          type: string
        client-id:
          maxLength: 256
          type: string
        server2:
          maxLength: 256
          type: string
        user_classes:
          type: string
        cert:
          type: string
        secure:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        username-claim:
          type: string
        group_filter:
          maxLength: 2048
          type: string
        sslversion:
          type: string
          enum:
          - tlsv1
          - tlsv1_1
          - tlsv1_2
          - tlsv1_3
        mode:
          type: string
          enum:
          - ldap
          - ldaps
          - ldap+starttls
        port:
          type: integer
          minimum: 1
          maximum: 65535
        scopes:
          type: string
        sync-defaults-options:
          type: string
        base_dn:
          maxLength: 256
          type: string
        sync_attributes:
          pattern: '\w+=[^,]+(,\s*\w+=[^,]+)*'
          type: string
        autocreate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          maxLength: 4096
          type: string
        group_classes:
          type: string
        server1:
          maxLength: 256
          type: string
        password:
          type: string
    POST-NodesCephStart-RB:
      type: object
      properties:
        service:
          pattern: (ceph|mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
        node:
          type: string
    GET-ClusterNextid-RB:
      type: object
      properties:
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesCephOsdLvinfo:
      type: object
      properties:
        creation_time:
          type: string
        lv_name:
          type: string
        vg_name:
          type: string
        lv_size:
          type: integer
        lv_path:
          type: string
        lv_uuid:
          type: string
    POST-ClusterConfigNodes-RB:
      type: object
      properties:
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        votes:
          type: integer
        new_node_ip:
          type: string
        nodeid:
          minimum: 1
          type: integer
        node:
          type: string
        link[n]:
          type: string
        apiversion:
          type: integer
    POST-NodesCephStop-RB:
      type: object
      properties:
        service:
          pattern: (ceph|mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
        node:
          type: string
    ClusterFirewallAliases:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
          cidr:
            type: string
    NodesNetstat:
      type: array
      items:
        type: object
        properties: {}
    NodesFirewall:
      type: array
      items:
        type: object
        properties: {}
    ClusterBackupIncludedvolumes:
      type: object
      properties:
        children:
          type: array
          items:
            properties:
              children:
                description: The volumes of the guest with the information if they will be included in backups.
                items:
                  properties:
                    id:
                      description: Configuration key of the volume.
                      type: string
                    included:
                      description: Whether the volume is included in the backup or not.
                      type: boolean
                    name:
                      description: Name of the volume.
                      type: string
                    reason:
                      description: The reason why the volume is included (or excluded).
                      type: string
                  type: object
                optional: 1
                type: array
              id:
                description: VMID of the guest.
                type: integer
              name:
                description: Name of the guest
                optional: 1
                type: string
              type:
                description: Type of the guest, VM, CT or unknown for removed but not purged guests.
                enum:
                - qemu
                - lxc
                - unknown
                type: string
            type: object
    NodesVersion:
      type: object
      properties:
        release:
          type: string
        version:
          type: string
        repoid:
          type: string
    POST-NodesQemuStatusReboot-RB:
      type: object
      properties:
        node:
          type: string
        timeout:
          type: integer
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesVzdump-RB:
      type: object
      properties:
        stopwait:
          type: integer
        node:
          type: string
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        protected:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        lockwait:
          type: integer
        ionice:
          type: integer
          maximum: 8
        notification-target:
          type: string
        exclude:
          type: string
        dumpdir:
          type: string
        fleecing:
          type: string
        pool:
          type: string
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        all:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        remove:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tmpdir:
          type: string
        mailto:
          type: string
        bwlimit:
          type: integer
        quiet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: string
        mailnotification:
          type: string
          enum:
          - always
          - failure
        script:
          type: string
        stdexcludes:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        zstd:
          type: integer
        prune-backups:
          type: string
        stdout:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        storage:
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        notes-template:
          maxLength: 1024
          type: string
        performance:
          type: string
        exclude-path:
          type: array
          items:
            type: string
        stop:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        maxfiles:
          minimum: 1
          type: integer
        pigz:
          type: integer
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        job-id:
          type: string
          maxLength: 50
          pattern: '\S+'
    PUT-ClusterNotificationsEndpointsSmtp-RB:
      type: object
      properties:
        from-address:
          type: string
        password:
          type: string
        port:
          type: integer
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        comment:
          type: string
        username:
          type: string
        author:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        server:
          type: string
        digest:
          maxLength: 64
          type: string
        name:
          type: string
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
    POST-NodesQemuAgentFilewrite-RB:
      type: object
      properties:
        encode:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        content:
          maxLength: 61440
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        file:
          type: string
    DELETE-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        vnet:
          type: string
    POST-AccessTfa-RB:
      type: object
      properties:
        description:
          maxLength: 255
          type: string
        challenge:
          type: string
        type:
          type: string
          enum:
          - totp
          - u2f
          - webauthn
          - recovery
          - yubico
        password:
          type: string
          maxLength: 64
          minLength: 5
        totp:
          type: string
        value:
          type: string
        userid:
          maxLength: 64
          type: string
    NodesCephFs:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          data_pool:
            type: string
          metadata_pool:
            type: string
    NodesQemuMtunnelwebsocket:
      type: object
      properties:
        socket:
          type: string
        port:
          type: string
    POST-NodesLxcClone-RB:
      type: object
      properties:
        description:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        target:
          type: string
        snapname:
          maxLength: 40
          type: string
        storage:
          type: string
        node:
          type: string
        hostname:
          type: string
        bwlimit:
          minimum: "0"
          type: number
        newid:
          type: integer
          minimum: 100
          maximum: 999999999
        full:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        pool:
          type: string
    POST-NodesStopall-RB:
      type: object
      properties:
        node:
          type: string
        force-stop:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vms:
          type: string
        timeout:
          type: integer
          maximum: 7200
    POST-NodesCephRestart-RB:
      type: object
      properties:
        service:
          pattern: (mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
        node:
          type: string
    PUT-ClusterFirewallOptions-RB:
      type: object
      properties:
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        delete:
          type: string
        ebtables:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 64
          type: string
        log_ratelimit:
          type: string
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        enable:
          type: integer
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    PUT-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        nomatch:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        digest:
          maxLength: 64
          type: string
        node:
          type: string
        cidr:
          type: string
    NodesQemuPending:
      type: array
      items:
        type: object
        properties:
          key:
            type: string
          pending:
            type: string
          delete:
            type: integer
            maximum: 2
          value:
            type: string
    PUT-ClusterAcmeAccount-RB:
      type: object
      properties:
        contact:
          type: string
        name:
          type: string
    PUT-NodesAptRepositories-RB:
      type: object
      properties:
        node:
          type: string
        digest:
          maxLength: 80
          type: string
        handle:
          type: string
    POST-ClusterSdnControllers-RB:
      type: object
      properties:
        loopback:
          type: string
        isis-domain:
          type: string
        isis-ifaces:
          type: string
        node:
          type: string
        type:
          type: string
          enum:
          - bgp
          - evpn
          - faucet
          - isis
        asn:
          type: integer
          maximum: 4294967296
        isis-net:
          type: string
        controller:
          type: string
        ebgp-multihop:
          type: integer
        bgp-multipath-as-path-relax:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ebgp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        peers:
          type: string
    PUT-NodesQemuFirewallRules-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        delete:
          type: string
        node:
          type: string
        sport:
          type: string
        moveto:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    GET-NodesQemuFeature-RB:
      type: object
      properties:
        node:
          type: string
        feature:
          type: string
          enum:
          - snapshot
          - clone
          - copy
        snapname:
          maxLength: 40
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    PUT-NodesStorageContent-RB:
      type: object
      properties:
        node:
          type: string
        volume:
          type: string
        protected:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        notes:
          type: string
        storage:
          type: string
    POST-NodesDisksDirectory-RB:
      type: object
      properties:
        name:
          type: string
        add_storage:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        filesystem:
          type: string
          enum:
          - ext4
          - xfs
        device:
          type: string
    NodesNetwork-GET:
      type: array
      items:
        type: object
        properties: {}
    POST-ClusterJobsRealmsync-RB:
      type: object
      properties:
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        id:
          maxLength: 64
          type: string
        comment:
          maxLength: 512
          type: string
        enabled:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        realm:
          maxLength: 32
          type: string
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        schedule:
          maxLength: 128
          type: string
        enable-new:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    DELETE-NodesLxcFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        pos:
          type: integer
    POST-AccessOpenidLogin-RB:
      type: object
      properties:
        code:
          maxLength: 4096
          type: string
        state:
          maxLength: 1024
          type: string
        redirect-url:
          maxLength: 255
          type: string
    NodesQemuSnapshot-GET:
      type: array
      items:
        type: object
        properties: {}
    NodesDisksDirectory:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          device:
            type: string
          path:
            type: string
          options:
            type: string
          unitfile:
            type: string
    NodesCephCfgDb:
      type: array
      items:
        type: object
        properties:
          value:
            type: string
          name:
            type: string
          section:
            type: string
          level:
            type: string
          mask:
            type: string
          can_update_at_runtime:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    PUT-ClusterFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        digest:
          maxLength: 64
          type: string
        comment:
          type: string
        cidr:
          type: string
        nomatch:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    ClusterNotificationsEndpointsSendmail:
      type: object
      properties:
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        name:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        author:
          type: string
        digest:
          maxLength: 64
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        from-address:
          type: string
    ClusterHaResources-GET:
      type: array
      items:
        type: object
        properties:
          sid:
            type: string
    GET-NodesStorageImportmetadata-RB:
      type: object
      properties:
        node:
          type: string
        volume:
          type: string
        storage:
          type: string
    PUT-ClusterSdnControllers-RB:
      type: object
      properties:
        ebgp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ebgp-multihop:
          type: integer
        loopback:
          type: string
        isis-ifaces:
          type: string
        bgp-multipath-as-path-relax:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        controller:
          type: string
        asn:
          type: integer
          maximum: 4294967296
        delete:
          maxLength: 4096
          type: string
        isis-net:
          type: string
        node:
          type: string
        peers:
          type: string
        digest:
          maxLength: 64
          type: string
        isis-domain:
          type: string
    PUT-NodesQemuSnapshotConfig-RB:
      type: object
      properties:
        node:
          type: string
        description:
          type: string
        snapname:
          maxLength: 40
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesHardwarePciMdev:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          type:
            type: string
          description:
            type: string
          available:
            type: integer
    DELETE-NodesDisksDirectory-RB:
      type: object
      properties:
        name:
          type: string
        cleanup-config:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        cleanup-disks:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-ClusterNotificationsEndpointsSendmail-RB:
      type: object
      properties:
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        name:
          type: string
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        author:
          type: string
        digest:
          maxLength: 64
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        from-address:
          type: string
    NodesLxcRrd:
      type: object
      properties:
        filename:
          type: string
    PUT-NodesLxcFirewallRules-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        delete:
          type: string
        node:
          type: string
        sport:
          type: string
        moveto:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    NodesCephCfg:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesAplinfo-RB:
      type: object
      properties:
        node:
          type: string
        storage:
          type: string
        template:
          maxLength: 255
          type: string
    AccessUsersToken-GET:
      type: array
      items:
        type: object
        properties:
          privsep:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          tokenid:
            pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
            type: string
          expire:
            type: integer
          comment:
            type: string
    NodesHardware:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
    POST-NodesQemuStatusStart-RB:
      type: object
      properties:
        timeout:
          type: integer
        force-cpu:
          type: string
        migratedfrom:
          type: string
        migration_type:
          type: string
          enum:
          - secure
          - insecure
        node:
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        stateuri:
          maxLength: 128
          type: string
        targetstorage:
          type: string
        migration_network:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        machine:
          type: string
    POST-NodesDisksInitgpt-RB:
      type: object
      properties:
        node:
          type: string
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
        uuid:
          type: string
          maxLength: 36
          pattern: '[a-fA-F0-9\-]+'
    ClusterNotificationsEndpoints:
      type: array
      items:
        type: object
        properties: {}
    ClusterBackupinfoNotbackedup:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          type:
            type: string
            enum:
            - qemu
            - lxc
          vmid:
            type: integer
    GET-ClusterSdnControllers-RB:
      type: object
      properties:
        pending:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        running:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        controller:
          type: string
    ClusterCeph:
      type: array
      items:
        type: object
        properties: {}
    ClusterNotifications:
      type: array
      items:
        type: object
        properties: {}
    PUT-ClusterSdnDns-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        url:
          type: string
        reversemaskv6:
          type: integer
        dns:
          type: string
        ttl:
          type: integer
        key:
          type: string
    GET-ClusterSdnDns-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - powerdns
    GET-NodesStorageRrd-RB:
      type: object
      properties:
        ds:
          type: string
        node:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        storage:
          type: string
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    ClusterJobsScheduleanalyze:
      type: array
      items:
        type: object
        properties:
          timestamp:
            type: integer
          utc:
            type: string
    NodesCapabilities:
      type: array
      items:
        type: object
        properties: {}
    ClusterHaGroups:
      type: array
      items:
        type: object
        properties:
          group:
            type: string
    NodesSdnZones:
      type: array
      items:
        type: object
        properties:
          zone:
            type: string
          status:
            type: string
            enum:
            - available
            - pending
            - error
    PUT-NodesNetwork-RB:
      type: object
      properties:
        mtu:
          type: integer
          minimum: 1280
          maximum: 65520
        address6:
          type: string
        bond-primary:
          type: string
        ovs_bridge:
          type: string
        node:
          type: string
        bond_mode:
          type: string
          enum:
          - balance-rr
          - active-backup
          - balance-xor
          - broadcast
          - 802.3ad
          - balance-tlb
          - balance-alb
          - balance-slb
          - lacp-balance-slb
          - lacp-balance-tcp
        comments6:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        bridge_vids:
          type: string
        slaves:
          type: string
        netmask:
          type: string
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - unknown
        ovs_ports:
          type: string
        address:
          type: string
        cidr:
          type: string
        comments:
          type: string
        cidr6:
          type: string
        vlan-raw-device:
          type: string
        netmask6:
          type: integer
          maximum: 128
        gateway:
          type: string
        bridge_vlan_aware:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ovs_tag:
          type: integer
          minimum: 1
          maximum: 4094
        ovs_bonds:
          type: string
        bond_xmit_hash_policy:
          type: string
          enum:
          - layer2
          - layer2+3
          - layer3+4
        ovs_options:
          maxLength: 1024
          type: string
        delete:
          type: string
        bridge_ports:
          type: string
        vlan-id:
          type: integer
          minimum: 1
          maximum: 4094
        gateway6:
          type: string
        autostart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    ClusterSdnDns:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          dns:
            type: string
    GET-NodesStorageContent-RB:
      type: object
      properties:
        node:
          type: string
        storage:
          type: string
        content:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesCephMgr:
      type: array
      items:
        type: object
        properties:
          name:
            type: 
          state:
            type: string
          host:
            type: string
          addr:
            type: string
    DELETE-NodesCephPool-RB:
      type: object
      properties:
        name:
          type: string
        node:
          type: string
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        remove_ecprofile:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        remove_storages:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        gateway:
          type: string
        snat:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        dhcp-range:
          type: array
          items:
            format: pve-sdn-dhcp-range
            type: string
        type:
          type: string
          enum:
          - subnet
        dnszoneprefix:
          type: string
        subnet:
          type: string
        vnet:
          type: string
        dhcp-dns-server:
          type: string
    NodesScanCifs:
      type: array
      items:
        type: object
        properties:
          share:
            type: string
          description:
            type: string
    AccessRoles-GET:
      type: array
      items:
        type: object
        properties:
          privs:
            type: string
          special:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          roleid:
            type: string
    POST-NodesSpiceshell-RB:
      type: object
      properties:
        node:
          type: string
        cmd:
          type: string
          enum:
          - upgrade
          - ceph_install
          - login
        proxy:
          type: string
        cmd-opts:
          type: string
    POST-NodesDisksZfs-RB:
      type: object
      properties:
        name:
          type: string
        devices:
          type: string
        draid-config:
          type: string
        raidlevel:
          type: string
          enum:
          - single
          - mirror
          - raid10
          - raidz
          - raidz2
          - raidz3
          - draid
          - draid2
          - draid3
        ashift:
          type: integer
          minimum: 9
          maximum: 16
        compression:
          type: string
          enum:
          - "on"
          - "off"
          - gzip
          - lz4
          - lzjb
          - zle
          - zstd
        node:
          type: string
        add_storage:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesLxc-RB:
      type: object
      properties:
        mp[n]:
          type: string
        unique:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nameserver:
          type: string
        net[n]:
          type: string
        hookscript:
          type: string
        restore:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        start:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        cpuunits:
          type: integer
          maximum: 500000
        cpulimit:
          type: number
          maximum: 8192
        console:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ssh-public-keys:
          type: string
        rootfs:
          type: string
        node:
          type: string
        protection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tty:
          type: integer
          maximum: 6
        pool:
          type: string
        unused[n]:
          type: string
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ostemplate:
          maxLength: 255
          type: string
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        swap:
          type: integer
        features:
          type: string
        bwlimit:
          minimum: "0"
          type: number
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        debug:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        unprivileged:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        searchdomain:
          type: string
        hostname:
          maxLength: 255
          type: string
        startup:
          type: string
        cores:
          type: integer
          minimum: 1
          maximum: 8192
        dev[n]:
          type: string
        storage:
          type: string
        memory:
          minimum: 16
          type: integer
        description:
          maxLength: 8192
          type: string
        onboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tags:
          type: string
        timezone:
          type: string
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        password:
          minLength: 5
          type: string
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
        ignore-unpack-errors:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesDisksLvm-RB:
      type: object
      properties:
        name:
          type: string
        add_storage:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        device:
          type: string
    NodesFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    ClusterConfigNodes:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        corosync_authkey:
          type: string
        corosync_conf:
          type: string
    NodesLxcFirewallRefs:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          scope:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          ref:
            type: string
          comment:
            type: string
    GET-NodesVzdumpDefaults-RB:
      type: object
      properties:
        storage:
          type: string
        node:
          type: string
    DELETE-NodesLxc-RB:
      type: object
      properties:
        node:
          type: string
        purge:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        destroy-unreferenced-disks:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesQemuFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    Nodes-GET:
      type: array
      items:
        type: object
        properties: {}
    GET-ClusterMetricsExport-RB:
      type: object
      properties:
        history:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        local-only:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        start-time:
          type: integer
    PUT-AccessAcl-RB:
      type: object
      properties:
        groups:
          type: string
        delete:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        users:
          type: string
        roles:
          type: string
        propagate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        path:
          type: string
        tokens:
          type: string
    POST-NodesCertificatesAcmeCertificate-RB:
      type: object
      properties:
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
    NodesSdn:
      type: array
      items:
        type: object
        properties: {}
    POST-AccessUsers-RB:
      type: object
      properties:
        groups:
          type: string
        userid:
          maxLength: 64
          type: string
        comment:
          maxLength: 2048
          type: string
        email:
          maxLength: 254
          type: string
        password:
          type: string
          maxLength: 64
          minLength: 8
        lastname:
          maxLength: 1024
          type: string
        expire:
          type: integer
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        firstname:
          maxLength: 1024
          type: string
    NodesLxcFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    NodesQemuRrddata:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesScanGlusterfs-RB:
      type: object
      properties:
        server:
          type: string
        node:
          type: string
    POST-NodesQemuTemplate-RB:
      type: object
      properties:
        node:
          type: string
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesLxcConfig-RB:
      type: object
      properties:
        node:
          type: string
        snapshot:
          maxLength: 40
          type: string
        current:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesScanCifs-RB:
      type: object
      properties:
        node:
          type: string
        username:
          type: string
        password:
          type: string
        domain:
          type: string
        server:
          type: string
    ClusterSdnVnetsFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    PUT-AccessUsersToken-RB:
      type: object
      properties:
        privsep:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        userid:
          maxLength: 64
          type: string
        tokenid:
          pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
          type: string
        expire:
          type: integer
        comment:
          type: string
    PUT-NodesTime-RB:
      type: object
      properties:
        timezone:
          type: string
        node:
          type: string
    ClusterNotificationsEndpointsWebhook:
      type: object
      properties:
        secret:
          type: array
          items:
            type: string
        name:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        header:
          type: array
          items:
            type: string
        digest:
          maxLength: 64
          type: string
        url:
          type: string
        body:
          type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
    ClusterHaResources:
      type: object
      properties:
        comment:
          type: string
        type:
          type: string
        digest:
          type: string
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        sid:
          type: string
        max_relocate:
          type: integer
        max_restart:
          type: integer
        group:
          type: string
    POST-NodesExecute-RB:
      type: object
      properties:
        commands:
          type: string
        node:
          type: string
    NodesCapabilitiesQemuMachines:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
            - q35
            - i440fx
          id:
            type: string
          version:
            type: string
    POST-ClusterBackup-RB:
      type: object
      properties:
        stopwait:
          type: integer
        node:
          type: string
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        starttime:
          pattern: '\d{1,2}:\d{1,2}'
          type: string
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        protected:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        lockwait:
          type: integer
        ionice:
          type: integer
          maximum: 8
        repeat-missed:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        exclude:
          type: string
        dumpdir:
          type: string
        id:
          type: string
        fleecing:
          type: string
        pool:
          type: string
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        all:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          maxLength: 512
          type: string
        remove:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tmpdir:
          type: string
        mailto:
          type: string
        bwlimit:
          type: integer
        notification-target:
          type: string
        vmid:
          type: string
        mailnotification:
          type: string
          enum:
          - always
          - failure
        script:
          type: string
        stdexcludes:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        zstd:
          type: integer
        prune-backups:
          type: string
        stop:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        storage:
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        quiet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        notes-template:
          maxLength: 1024
          type: string
        dow:
          type: string
        performance:
          type: string
        exclude-path:
          type: array
          items:
            type: string
        enabled:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        maxfiles:
          minimum: 1
          type: integer
        pigz:
          type: integer
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        schedule:
          maxLength: 128
          type: string
    ClusterNotificationsEndpointsGotify-GET:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          server:
            type: string
          comment:
            type: string
          disable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    AccessUsersToken:
      type: object
      properties:
        privsep:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        expire:
          type: integer
        comment:
          type: string
    NodesStorageContent-GET:
      type: array
      items:
        type: object
        properties:
          parent:
            type: string
          vmid:
            type: integer
          encrypted:
            type: string
          used:
            type: integer
          protected:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          volid:
            type: string
          size:
            type: integer
          verification:
            type: object
            properties:
              state:
                description: Last backup verification state.
                type: string
              upid:
                description: Last backup verification UPID.
                type: string
          ctime:
            type: integer
          notes:
            type: string
          format:
            type: string
    GET-NodesScanIscsi-RB:
      type: object
      properties:
        portal:
          type: string
        node:
          type: string
    AccessAcl:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
            - user
            - group
            - token
          path:
            type: string
          roleid:
            type: string
          propagate:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          ugid:
            type: string
    NodesCeph:
      type: array
      items:
        type: object
        properties: {}
    NodesAptRepositories:
      type: object
      properties:
        errors:
          type: array
          items:
            properties:
              error:
                description: The error message
                type: string
              path:
                description: Path to the problematic file.
                type: string
            type: object
        digest:
          type: string
        infos:
          type: array
          items:
            properties:
              index:
                description: Index of the associated repository within the file.
                type: string
              kind:
                description: Kind of the information (e.g. warning).
                type: string
              message:
                description: Information message.
                type: string
              path:
                description: Path to the associated file.
                type: string
              property:
                description: Property from which the info originates.
                optional: 1
                type: string
            type: object
        files:
          type: array
          items:
            properties:
              digest:
                description: Digest of the file as bytes.
                items:
                  type: integer
                type: array
              file-type:
                description: Format of the file.
                enum:
                - list
                - sources
                type: string
              path:
                description: Path to the problematic file.
                type: string
              repositories:
                description: The parsed repositories.
                items:
                  properties:
                    Comment:
                      description: Associated comment
                      optional: 1
                      type: string
                    Components:
                      description: List of repository components
                      items:
                        type: string
                      optional: 1
                      type: array
                    Enabled:
                      description: Whether the repository is enabled or not
                      type: boolean
                    FileType:
                      description: Format of the defining file.
                      enum:
                      - list
                      - sources
                      type: string
                    Options:
                      description: Additional options
                      items:
                        properties:
                          Key:
                            type: string
                          Values:
                            items:
                              type: string
                            type: array
                        type: object
                      optional: 1
                      type: array
                    Suites:
                      description: List of package distribuitions
                      items:
                        type: string
                      type: array
                    Types:
                      description: List of package types.
                      items:
                        enum:
                        - deb
                        - deb-src
                        type: string
                      type: array
                    URIs:
                      description: List of repository URIs.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            type: object
        standard-repos:
          type: array
          items:
            properties:
              handle:
                description: Handle to identify the repository.
                type: string
              name:
                description: Full name of the repository.
                type: string
              status:
                description: Indicating enabled/disabled status, if the repository is configured.
                optional: 1
                type: boolean
            type: object
    DELETE-NodesCephOsd-RB:
      type: object
      properties:
        node:
          type: string
        cleanup:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        osdid:
          type: integer
    NodesCapabilitiesQemuCpu:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          custom:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          vendor:
            type: string
    NodesScan:
      type: array
      items:
        type: object
        properties:
          method:
            type: string
    ClusterSdnZones:
      type: array
      items:
        type: object
        properties:
          nodes:
            type: string
          zone:
            type: string
          dhcp:
            type: string
          ipam:
            type: string
          type:
            type: string
          dnszone:
            type: string
          reversedns:
            type: string
          mtu:
            type: integer
          dns:
            type: string
          state:
            type: string
          pending:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    GET-NodesLxcRrddata-RB:
      type: object
      properties:
        node:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    ClusterFirewallGroups-GET-AV:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    PUT-ClusterJobsRealmsync-RB:
      type: object
      properties:
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        id:
          maxLength: 64
          type: string
        delete:
          maxLength: 4096
          type: string
        comment:
          maxLength: 512
          type: string
        enabled:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        schedule:
          maxLength: 128
          type: string
        enable-new:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-ClusterMetricsServer-RB:
      type: object
      properties:
        organization:
          type: string
        token:
          type: string
        port:
          type: integer
          minimum: 1
          maximum: 65536
        id:
          type: string
        influxdbproto:
          type: string
          enum:
          - udp
          - http
          - https
        bucket:
          type: string
        max-body-size:
          minimum: 1
          type: integer
        verify-certificate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        proto:
          type: string
          enum:
          - udp
          - tcp
        timeout:
          type: integer
        server:
          type: string
        mtu:
          type: integer
          minimum: 512
          maximum: 65536
        api-path-prefix:
          type: string
        path:
          type: string
        type:
          type: string
          enum:
          - graphite
          - influxdb
    ClusterFirewallRules:
      type: object
      properties:
        action:
          type: string
        icmp-type:
          type: string
        macro:
          type: string
        comment:
          type: string
        ipversion:
          type: integer
        source:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        type:
          type: string
        enable:
          type: integer
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        iface:
          type: string
    PUT-ClusterMappingPci-RB:
      type: object
      properties:
        description:
          maxLength: 4096
          type: string
        id:
          type: string
        delete:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        mdev:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        map:
          type: array
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. Used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              iommugroup:
                description: The IOMMU group in which the device is to be expected in. Used for detecting hardware changes.
                optional: 1
                type: integer
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the device. If the function is omitted, the whole device is mapped. In that case use the attributes of the first device. You can give multiple paths as a semicolon seperated list, the first available will then be chosen on guest start.
                pattern: (?:[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?;)*[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?
                type: string
              subsystem-id:
                description: The subsystem vendor and device ID that is expected. Used for detecting hardware changes.
                optional: 1
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
            type: string
    ClusterLog:
      type: array
      items:
        type: object
        properties: {}
    NodesReplicationLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    DELETE-NodesDisksLvmthin-RB:
      type: object
      properties:
        name:
          type: string
        cleanup-config:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        volume-group:
          type: string
        cleanup-disks:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-AccessRoles-RB:
      type: object
      properties:
        roleid:
          type: string
        privs:
          type: string
    GET-NodesDisksList-RB:
      type: object
      properties:
        node:
          type: string
        skipsmart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        type:
          type: string
          enum:
          - unused
          - journal_disks
        include-partitions:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    Storage:
      type: object
      properties:
        config:
          type: object
          properties: 
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        storage:
          type: string
    POST-NodesCephInit-RB:
      type: object
      properties:
        min_size:
          type: integer
          minimum: 1
          maximum: 7
        network:
          maxLength: 128
          type: string
        disable_cephx:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        cluster-network:
          maxLength: 128
          type: string
        node:
          type: string
        pg_bits:
          type: integer
          minimum: 6
          maximum: 14
        size:
          type: integer
          minimum: 1
          maximum: 7
    AccessTfa-GET-AV:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
            - totp
            - u2f
            - webauthn
            - recovery
            - yubico
          description:
            type: string
          id:
            type: string
          created:
            type: integer
          enable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    ClusterSdnVnetsSubnets:
      type: array
      items:
        type: object
        properties: {}
    NodesQemuFirewallLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    GET-NodesQemuRrddata-RB:
      type: object
      properties:
        node:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    DELETE-NodesStorageContent-RB:
      type: object
      properties:
        node:
          type: string
        delay:
          type: integer
          minimum: 1
          maximum: 30
        volume:
          type: string
        storage:
          type: string
    DELETE-ClusterFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        digest:
          maxLength: 64
          type: string
        cidr:
          type: string
    ClusterAcme:
      type: array
      items:
        type: object
        properties: {}
    NodesCertificatesAcme:
      type: array
      items:
        type: object
        properties: {}
    DELETE-NodesQemuSnapshot-RB:
      type: object
      properties:
        node:
          type: string
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        snapname:
          maxLength: 40
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesCephLog-RB:
      type: object
      properties:
        limit:
          type: integer
        node:
          type: string
        start:
          type: integer
    GET-Storage-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
    GET-AccessUsers-RB:
      type: object
      properties:
        enabled:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        full:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    AccessGroups:
      type: object
      properties:
        comment:
          type: string
        members:
          type: array
          items:
            description: Full User ID, in the `name@realm` format.
            format: pve-userid
            maxLength: 64
            type: string
    PUT-ClusterCephFlags-RB:
      type: object
      properties:
        value:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        flag:
          type: string
          enum:
          - nobackfill
          - nodeep-scrub
          - nodown
          - noin
          - noout
          - norebalance
          - norecover
          - noscrub
          - notieragent
          - noup
          - pause
    ClusterMetricsServer:
      type: array
      items:
        type: object
        properties:
          server:
            type: string
          type:
            type: string
          id:
            type: string
          port:
            type: integer
          disable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    PUT-ClusterReplication-RB:
      type: object
      properties:
        source:
          type: string
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        delete:
          maxLength: 4096
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          maxLength: 4096
          type: string
        remove_job:
          type: string
          enum:
          - local
          - full
        digest:
          maxLength: 64
          type: string
        rate:
          minimum: 1
          type: number
        schedule:
          maxLength: 128
          type: string
    PUT-NodesCephPool-RB:
      type: object
      properties:
        crush_rule:
          type: string
          title: Crush Rule Name
        name:
          type: string
          title: Name
        min_size:
          type: integer
          minimum: 1
          title: Min Size
          maximum: 7
        target_size_ratio:
          type: number
          title: PG Autoscale Target Ratio
        target_size:
          type: string
          title: PG Autoscale Target Size
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
        pg_num_min:
          type: integer
          title: min. PG Num
          maximum: 32768
        application:
          type: string
          enum:
          - rbd
          - cephfs
          - rgw
          title: Application
        size:
          type: integer
          minimum: 1
          title: Size
          maximum: 7
        node:
          type: string
        pg_num:
          type: integer
          minimum: 1
          title: PG Num
          maximum: 32768
        pg_autoscale_mode:
          type: string
          enum:
          - "on"
          - "off"
          - warn
          title: PG Autoscale Mode
    NodesStorageContent:
      type: object
      properties:
        size:
          type: integer
        used:
          type: integer
        protected:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        path:
          type: string
        notes:
          type: string
        format:
          type: string
    POST-NodesQemuMonitor-RB:
      type: object
      properties:
        node:
          type: string
        command:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    AccessUsers:
      type: object
      properties:
        groups:
          type: array
          items:
            format: pve-groupid
            type: string
        tokens:
          type: object
          properties:
            comment:
              optional: 1
              type: string
            expire:
              description: API token expiration date (seconds since epoch). '0' means no expiration date.
              minimum: 0
              optional: 1
              type: integer
            privsep:
              default: 1
              description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
              optional: 1
              type: boolean
        comment:
          maxLength: 2048
          type: string
        email:
          maxLength: 254
          type: string
        lastname:
          maxLength: 1024
          type: string
        expire:
          type: integer
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        firstname:
          maxLength: 1024
          type: string
    PUT-AccessRoles-RB:
      type: object
      properties:
        privs:
          type: string
        roleid:
          type: string
        append:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesVzdumpDefaults:
      type: object
      properties:
        stopwait:
          type: integer
        node:
          type: string
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        protected:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        lockwait:
          type: integer
        ionice:
          type: integer
          maximum: 8
        notification-target:
          type: string
        exclude:
          type: string
        dumpdir:
          type: string
        fleecing:
          type: string
        pool:
          type: string
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        all:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        remove:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tmpdir:
          type: string
        mailto:
          type: string
        bwlimit:
          type: integer
        quiet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: string
        mailnotification:
          type: string
          enum:
          - always
          - failure
        script:
          type: string
        stdexcludes:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        zstd:
          type: integer
        prune-backups:
          type: string
        storage:
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        notes-template:
          maxLength: 1024
          type: string
        performance:
          type: string
        exclude-path:
          type: array
          items:
            type: string
        stop:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        maxfiles:
          minimum: 1
          type: integer
        pigz:
          type: integer
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
    GET-ClusterSdnVnets-RB:
      type: object
      properties:
        pending:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        running:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vnet:
          type: string
    ClusterFirewallGroups:
      type: object
      properties:
        action:
          type: string
        icmp-type:
          type: string
        macro:
          type: string
        comment:
          type: string
        ipversion:
          type: integer
        source:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        type:
          type: string
        enable:
          type: integer
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        iface:
          type: string
    ClusterCephFlags-GET:
      type: integer
      minimum: 0
      maximum: 1
      description: 
    NodesQemuAgent:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesStorageUpload-RB:
      type: object
      properties:
        tmpfilename:
          pattern: /var/tmp/pveupload-[0-9a-f]+
          type: string
        checksum-algorithm:
          type: string
          enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
        node:
          type: string
        content:
          type: string
          enum:
          - iso
          - vztmpl
          - import
        checksum:
          type: string
        storage:
          type: string
        filename:
          maxLength: 255
          type: string
    DELETE-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        cidr:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesAptChangelog-RB:
      type: object
      properties:
        node:
          type: string
        name:
          type: string
        version:
          type: string
    ClusterHa:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    GET-NodesLxcMtunnelwebsocket-RB:
      type: object
      properties:
        node:
          type: string
        ticket:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        socket:
          type: string
    GET-NodesScanPbs-RB:
      type: object
      properties:
        username:
          type: string
        node:
          type: string
        port:
          type: integer
          minimum: 1
          maximum: 65535
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        password:
          type: string
        server:
          type: string
    NodesExecute:
      type: array
      items:
        type: object
        properties: {}
    PUT-AccessDomains-RB:
      type: object
      properties:
        bind_dn:
          maxLength: 256
          type: string
        default:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        client-key:
          maxLength: 256
          type: string
        tfa:
          maxLength: 128
          type: string
        capath:
          type: string
        prompt:
          pattern: (?:none|login|consent|select_account|\S+)
          type: string
        group_name_attr:
          maxLength: 256
          type: string
        filter:
          maxLength: 2048
          type: string
        domain:
          type: string
          maxLength: 256
          pattern: '\S+'
        user_attr:
          type: string
          maxLength: 256
          pattern: '\S{2,}'
        verify:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        case-sensitive:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        group_dn:
          maxLength: 256
          type: string
        issuer-url:
          maxLength: 256
          type: string
        check-connection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        certkey:
          type: string
        digest:
          maxLength: 64
          type: string
        acr-values:
          pattern: ^[^\x00-\x1F\x7F <>#"]*$
          type: string
        realm:
          maxLength: 32
          type: string
        client-id:
          maxLength: 256
          type: string
        server2:
          maxLength: 256
          type: string
        user_classes:
          type: string
        cert:
          type: string
        secure:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        group_filter:
          maxLength: 2048
          type: string
        sslversion:
          type: string
          enum:
          - tlsv1
          - tlsv1_1
          - tlsv1_2
          - tlsv1_3
        mode:
          type: string
          enum:
          - ldap
          - ldaps
          - ldap+starttls
        delete:
          maxLength: 4096
          type: string
        port:
          type: integer
          minimum: 1
          maximum: 65535
        scopes:
          type: string
        sync-defaults-options:
          type: string
        base_dn:
          maxLength: 256
          type: string
        sync_attributes:
          pattern: '\w+=[^,]+(,\s*\w+=[^,]+)*'
          type: string
        autocreate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          maxLength: 4096
          type: string
        group_classes:
          type: string
        server1:
          maxLength: 256
          type: string
        password:
          type: string
    GET-AccessPermissions-RB:
      type: object
      properties:
        path:
          type: string
        userid:
          pattern: (?^:^(?^:[^\s:/]+)\@(?^:[A-Za-z][A-Za-z0-9\.\-_]+)(?:!(?^:[A-Za-z][A-Za-z0-9\.\-_]+))?$)
          type: string
    POST-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        ip:
          type: string
        vnet:
          type: string
        mac:
          type: string
    NodesQemuFirewall:
      type: array
      items:
        type: object
        properties: {}
    NodesLxcFirewall:
      type: array
      items:
        type: object
        properties: {}
    NodesQemuFirewallRefs:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          scope:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          ref:
            type: string
          comment:
            type: string
    PUT-ClusterBackup-RB:
      type: object
      properties:
        stopwait:
          type: integer
        node:
          type: string
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        starttime:
          pattern: '\d{1,2}:\d{1,2}'
          type: string
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        protected:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        lockwait:
          type: integer
        ionice:
          type: integer
          maximum: 8
        repeat-missed:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        exclude:
          type: string
        dumpdir:
          type: string
        fleecing:
          type: string
        enabled:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        all:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          maxLength: 512
          type: string
        remove:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tmpdir:
          type: string
        mailto:
          type: string
        bwlimit:
          type: integer
        notification-target:
          type: string
        vmid:
          type: string
        mailnotification:
          type: string
          enum:
          - always
          - failure
        script:
          type: string
        stdexcludes:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        zstd:
          type: integer
        prune-backups:
          type: string
        pigz:
          type: integer
        stop:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        storage:
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        delete:
          type: string
        quiet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        notes-template:
          maxLength: 1024
          type: string
        dow:
          type: string
        performance:
          type: string
        exclude-path:
          type: array
          items:
            type: string
        pool:
          type: string
        maxfiles:
          minimum: 1
          type: integer
        id:
          type: string
          maxLength: 50
          pattern: '\S+'
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        schedule:
          maxLength: 128
          type: string
    ClusterSdnIpams:
      type: array
      items:
        type: object
        properties:
          ipam:
            type: string
          type:
            type: string
    POST-NodesQemuClone-RB:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        pool:
          type: string
        storage:
          type: string
        node:
          type: string
        target:
          type: string
        bwlimit:
          minimum: "0"
          type: integer
        newid:
          type: integer
          minimum: 100
          maximum: 999999999
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        full:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        snapname:
          maxLength: 40
          type: string
        format:
          type: string
          enum:
          - raw
          - qcow2
          - vmdk
    ClusterConfigApiversion:
      desciption: 
      type: integer
    POST-NodesQemuMovedisk-RB:
      type: object
      properties:
        target-disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        delete:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 40
          type: string
        node:
          type: string
        target-digest:
          maxLength: 40
          type: string
        bwlimit:
          minimum: "0"
          type: integer
        target-vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        storage:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        format:
          type: string
          enum:
          - raw
          - qcow2
          - vmdk
    NodesReplication:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    NodesQemuAgentExecstatus:
      type: object
      properties:
        exited:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        out-truncated:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        err-data:
          type: string
        out-data:
          type: string
        err-truncated:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        signal:
          type: integer
        exitcode:
          type: integer
    GET-NodesStorageRrddata-RB:
      type: object
      properties:
        node:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        storage:
          type: string
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    AccessUsers-GET:
      type: array
      items:
        type: object
        properties:
          userid:
            maxLength: 64
            type: string
          totp-locked:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          comment:
            maxLength: 2048
            type: string
          groups:
            type: string
          firstname:
            maxLength: 1024
            type: string
          realm-type:
            type: string
          email:
            maxLength: 254
            type: string
          tokens:
            type: array
            items:
              properties:
                comment:
                  optional: 1
                  type: string
                expire:
                  description: API token expiration date (seconds since epoch). '0' means no expiration date.
                  minimum: 0
                  optional: 1
                  type: integer
                privsep:
                  default: 1
                  description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
                  optional: 1
                  type: boolean
                tokenid:
                  description: User-specific token identifier.
                  pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
                  type: string
              type: object
          expire:
            type: integer
          lastname:
            maxLength: 1024
            type: string
          tfa-locked-until:
            type: integer
          enable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          keys:
            pattern: '[0-9a-zA-Z!=]{0,4096}'
            type: string
    POST-ClusterHaResourcesMigrate-RB:
      type: object
      properties:
        sid:
          type: string
        node:
          type: string
    ClusterJobsRealmsync:
      type: array
      items:
        type: object
        properties:
          remove-vanished:
            pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
            type: string
          id:
            type: string
          next-run:
            type: integer
          comment:
            type: string
          enabled:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          realm:
            maxLength: 32
            type: string
          scope:
            type: string
            enum:
            - users
            - groups
            - both
          schedule:
            type: string
          last-run:
            type: integer
    GET-NodesStorageFilerestoreDownload-RB:
      type: object
      properties:
        node:
          type: string
        tar:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        volume:
          type: string
        storage:
          type: string
        filepath:
          type: string
    Storage-PUT:
      type: object
      properties:
        config:
          type: object
          properties: 
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        storage:
          type: string
    NodesCephOsdMetadata:
      type: object
      properties:
        osd:
          type: object
          properties:
            back_addr:
              description: Address and port used to talk to other OSDs.
              type: string
            front_addr:
              description: Address and port used to talk to clients and monitors.
              type: string
            hb_back_addr:
              description: Heartbeat address and port for other OSDs.
              type: string
            hb_front_addr:
              description: Heartbeat address and port for clients and monitors.
              type: string
            hostname:
              description: Name of the host containing the OSD.
              type: string
            id:
              description: ID of the OSD.
              type: integer
            mem_usage:
              description: Memory usage of the OSD service.
              type: integer
            osd_data:
              description: Path to the OSD's data directory.
              type: string
            osd_objectstore:
              description: The type of object store used.
              type: string
            pid:
              description: OSD process ID.
              type: integer
            version:
              description: Ceph version of the OSD service.
              type: string
        devices:
          type: array
          items:
            properties:
              dev_node:
                description: Device node
                type: string
              device:
                description: Kind of OSD device
                enum:
                - block
                - db
                - wal
                type: string
              devices:
                description: Physical disks used
                type: string
              size:
                description: Size in bytes
                type: integer
              support_discard:
                description: Discard support of the physical device
                type: boolean
              type:
                description: Type of device. For example, hdd or ssd
                type: string
            type: object
    NodesFirewallRules:
      type: object
      properties:
        action:
          type: string
        icmp-type:
          type: string
        macro:
          type: string
        comment:
          type: string
        ipversion:
          type: integer
        source:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        type:
          type: string
        enable:
          type: integer
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        iface:
          type: string
    PUT-ClusterHaResources-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        comment:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        sid:
          type: string
        max_relocate:
          type: integer
        max_restart:
          type: integer
        group:
          type: string
    ClusterNotificationsEndpointsSmtp:
      type: object
      properties:
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
        username:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        author:
          type: string
        digest:
          maxLength: 64
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        server:
          type: string
        name:
          type: string
        port:
          type: integer
        from-address:
          type: string
    POST-NodesQemuStatusStop-RB:
      type: object
      properties:
        timeout:
          type: integer
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        migratedfrom:
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        overrule-shutdown:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        keepActive:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    AccessTfa-GET:
      type: object
      properties:
        type:
          type: string
          enum:
          - totp
          - u2f
          - webauthn
          - recovery
          - yubico
        description:
          type: string
        id:
          type: string
        created:
          type: integer
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-NodesLxcFirewallOptions-RB:
      type: object
      properties:
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        radv:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ipfilter:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        macfilter:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        delete:
          type: string
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        node:
          type: string
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 64
          type: string
        ndp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        dhcp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-AccessDomainsSync-RB:
      type: object
      properties:
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        purge:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        dry-run:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        realm:
          maxLength: 32
          type: string
        full:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        enable-new:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    ClusterSdnVnets:
      type: array
      items:
        type: object
        properties: {}
    NodesQueryurlmetadata:
      type: object
      properties:
        size:
          type: integer
        mimetype:
          type: string
        filename:
          type: string
    POST-NodesQemuTermproxy-RB:
      type: object
      properties:
        node:
          type: string
        serial:
          type: string
          enum:
          - serial0
          - serial1
          - serial2
          - serial3
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesLxcMtunnelwebsocket:
      type: object
      properties:
        socket:
          type: string
        port:
          type: string
    ClusterNextid:
      desciption: 
      type: integer
    PUT-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        vnet:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        delete:
          type: string
        sport:
          type: string
        moveto:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    NodesCephMds:
      type: array
      items:
        type: object
        properties:
          name:
            type: 
          host:
            type: string
          state:
            type: string
          rank:
            type: integer
          addr:
            type: string
          standby_replay:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    GET-NodesConfig-RB:
      type: object
      properties:
        property:
          type: string
          enum:
          - acme
          - acmedomain0
          - acmedomain1
          - acmedomain2
          - acmedomain3
          - acmedomain4
          - acmedomain5
          - description
          - startall-onboot-delay
          - wakeonlan
        node:
          type: string
    GET-NodesReplication-RB:
      type: object
      properties:
        guest:
          type: integer
          minimum: 100
          maximum: 999999999
        node:
          type: string
    Pools-GET:
      type: array
      items:
        type: object
        properties:
          members:
            type: array
            items:
              additionalProperties: 1
              properties:
                id:
                  type: string
                node:
                  type: string
                storage:
                  optional: 1
                  type: string
                type:
                  enum:
                  - qemu
                  - lxc
                  - openvz
                  - storage
                  type: string
                vmid:
                  optional: 1
                  type: integer
              type: object
          poolid:
            type: string
          comment:
            type: string
    AccessUsersTfa:
      type: object
      properties:
        realm:
          type: string
          enum:
          - oath
          - yubico
        types:
          type: array
          items:
            description: A TFA type.
            enum:
            - totp
            - u2f
            - yubico
            - webauthn
            - recovedry
            type: string
        user:
          type: string
          enum:
          - oath
          - u2f
    ClusterNotificationsMatchers-GET:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          match-calendar:
            type: array
            items:
              type: string
          match-severity:
            type: array
            items:
              type: string
          disable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          comment:
            type: string
          target:
            type: array
            items:
              format: pve-configid
              type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          match-field:
            type: array
            items:
              type: string
          invert-match:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          mode:
            type: string
            enum:
            - all
            - any
    GET-NodesVzdumpExtractconfig-RB:
      type: object
      properties:
        volume:
          type: string
        node:
          type: string
    PUT-NodesCertificatesAcmeCertificate-RB:
      type: object
      properties:
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
    ClusterAcmeChallengeschema:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          type:
            type: string
          id:
            type: string
          schema:
            type: object
    NodesScanPbs:
      type: array
      items:
        type: object
        properties:
          store:
            type: string
          comment:
            type: string
    DELETE-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        cidr:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesHosts-RB:
      type: object
      properties:
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        data:
          type: string
    POST-ClusterConfig-RB:
      type: object
      properties:
        link[n]:
          type: string
        nodeid:
          minimum: 1
          type: integer
        clustername:
          maxLength: 15
          type: string
        votes:
          minimum: 1
          type: integer
    NodesStorageRrddata:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesLxcConfig-RB:
      type: object
      properties:
        mp[n]:
          type: string
        nameserver:
          type: string
        hookscript:
          type: string
        searchdomain:
          type: string
        net[n]:
          type: string
        console:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        rootfs:
          type: string
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        node:
          type: string
        protection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tty:
          type: integer
          maximum: 6
        cpulimit:
          type: number
          maximum: 8192
        revert:
          type: string
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        delete:
          type: string
        swap:
          type: integer
        features:
          type: string
        debug:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        unprivileged:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        hostname:
          maxLength: 255
          type: string
        startup:
          type: string
        cores:
          type: integer
          minimum: 1
          maximum: 8192
        dev[n]:
          type: string
        digest:
          maxLength: 40
          type: string
        description:
          maxLength: 8192
          type: string
        memory:
          minimum: 16
          type: integer
        unused[n]:
          type: string
        onboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tags:
          type: string
        timezone:
          type: string
        cpuunits:
          type: integer
          maximum: 500000
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
    NodesTime:
      type: object
      properties:
        localtime:
          minimum: 1297163644
          type: integer
        timezone:
          type: string
        time:
          minimum: 1297163644
          type: integer
    GET-ClusterCephMetadata-RB:
      type: object
      properties:
        scope:
          type: string
          enum:
          - all
          - versions
    NodesQemuFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
          cidr:
            type: string
          nomatch:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    NodesQemuConfig:
      type: object
      properties:
        protection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        watchdog:
          type: string
        args:
          type: string
        cdrom:
          type: string
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        machine:
          type: string
        ipconfig[n]:
          type: string
        cpuunits:
          type: integer
          minimum: 1
          maximum: 262144
        virtio[n]:
          type: string
        scsi[n]:
          type: string
        cores:
          minimum: 1
          type: integer
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
        vga:
          type: string
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        usb[n]:
          type: string
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        sshkeys:
          type: string
        ciupgrade:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vcpus:
          minimum: 1
          type: integer
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        spice_enhancements:
          type: string
        migrate_speed:
          type: integer
        hotplug:
          type: string
        freeze:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        startup:
          type: string
        efidisk0:
          type: string
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        nameserver:
          type: string
        amd-sev:
          type: string
        hookscript:
          type: string
        sata[n]:
          type: string
        onboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        cicustom:
          type: string
        numa[n]:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        ide[n]:
          type: string
        net[n]:
          type: string
        acpi:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        audio0:
          type: string
        localtime:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        sockets:
          minimum: 1
          type: integer
        tags:
          type: string
        searchdomain:
          type: string
        hostpci[n]:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        migrate_downtime:
          type: number
        vmstatestorage:
          type: string
        cpulimit:
          type: number
          maximum: 128
        tablet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          type: string
        ivshmem:
          type: string
        memory:
          type: string
        tdf:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        rng0:
          type: string
        tpmstate0:
          type: string
        shares:
          type: integer
          maximum: 50000
        cipassword:
          type: string
        reboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        name:
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        boot:
          type: string
        numa:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        affinity:
          type: string
        keephugepages:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        description:
          maxLength: 8192
          type: string
        ciuser:
          type: string
        smbios1:
          maxLength: 512
          type: string
        agent:
          type: string
        balloon:
          type: integer
        smp:
          minimum: 1
          type: integer
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        autostart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        unused[n]:
          type: string
        kvm:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        cpu:
          type: string
    ClusterStatus:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          id:
            type: string
          local:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          nodes:
            type: integer
          ip:
            type: string
          type:
            type: string
            enum:
            - cluster
            - node
          version:
            type: integer
          nodeid:
            type: integer
          level:
            type: string
          quorate:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          online:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    NodesQemuFirewallRules:
      type: object
      properties:
        action:
          type: string
        icmp-type:
          type: string
        macro:
          type: string
        comment:
          type: string
        ipversion:
          type: integer
        source:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        type:
          type: string
        enable:
          type: integer
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        iface:
          type: string
    POST-NodesLxcSnapshotRollback-RB:
      type: object
      properties:
        node:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        snapname:
          maxLength: 40
          type: string
        start:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesCephOsd:
      type: array
      items:
        type: object
        properties: {}
    DELETE-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesCephOsd-RB:
      type: object
      properties:
        db_dev_size:
          minimum: 1
          type: number
        encrypted:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        wal_dev_size:
          minimum: 0.5
          type: number
        wal_dev:
          type: string
        osds-per-device:
          minimum: "1"
          type: integer
        node:
          type: string
        db_dev:
          type: string
        crush-device-class:
          type: string
        dev:
          type: string
    POST-NodesLxcSpiceproxy-RB:
      type: object
      properties:
        node:
          type: string
        proxy:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    ClusterSdnVnetsFirewall:
      type: array
      items:
        type: object
        properties: {}
    GET-AccessUsersTfa-RB:
      type: object
      properties:
        multiple:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        userid:
          maxLength: 64
          type: string
    PUT-ClusterHaGroups-RB:
      type: object
      properties:
        nodes:
          type: string
        delete:
          maxLength: 4096
          type: string
        nofailback:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          maxLength: 4096
          type: string
        restricted:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 64
          type: string
        group:
          type: string
    POST-ClusterNotificationsEndpointsGotify-RB:
      type: object
      properties:
        name:
          type: string
        server:
          type: string
        token:
          type: string
        comment:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-Pools-RB:
      type: object
      properties:
        comment:
          type: string
        poolid:
          type: string
    NodesTasksStatus:
      type: object
      properties:
        starttime:
          type: integer
        id:
          type: string
        pstart:
          type: integer
        status:
          type: string
          enum:
          - running
          - stopped
        node:
          type: string
        pid:
          type: integer
        upid:
          type: string
        exitstatus:
          type: string
        user:
          type: string
        type:
          type: string
    NodesCertificates:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        nomatch:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        digest:
          maxLength: 64
          type: string
        node:
          type: string
        cidr:
          type: string
    ClusterNotificationsEndpointsWebhook-GET:
      type: array
      items:
        type: object
        properties:
          secret:
            type: array
            items:
              type: string
          name:
            type: string
          disable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          comment:
            type: string
          url:
            type: string
          header:
            type: array
            items:
              type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          body:
            type: string
          method:
            type: string
            enum:
            - post
            - put
            - get
    NodesHosts:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        data:
          type: string
    AccessGroups-GET:
      type: array
      items:
        type: object
        properties:
          groupid:
            type: string
          comment:
            type: string
          users:
            type: string
    GET-NodesScanLvmthin-RB:
      type: object
      properties:
        vg:
          type: string
          maxLength: 100
          pattern: '[a-zA-Z0-9\.\+\_][a-zA-Z0-9\.\+\_\-]+'
        node:
          type: string
    POST-NodesQemuAgentExec-RB:
      type: object
      properties:
        node:
          type: string
        command:
          type: array
          items:
            description: A single part of the program + arguments.
            format: string
        input-data:
          maxLength: 65536
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesQemu:
      type: array
      items:
        type: object
        properties:
          netout:
            type: integer
          cpus:
            type: number
          vmid:
            type: integer
            minimum: 100
            maximum: 999999999
          maxdisk:
            type: integer
          template:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          pid:
            type: integer
          diskread:
            type: integer
          running-machine:
            type: string
          netin:
            type: integer
          diskwrite:
            type: integer
          tags:
            type: string
          maxmem:
            type: integer
          qmpstatus:
            type: string
          name:
            type: string
          uptime:
            type: integer
          status:
            type: string
            enum:
            - stopped
            - running
          lock:
            type: string
          running-qemu:
            type: string
    POST-AccessUsersToken-RB:
      type: object
      properties:
        privsep:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        userid:
          maxLength: 64
          type: string
        tokenid:
          pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
          type: string
        expire:
          type: integer
        comment:
          type: string
    POST-ClusterMappingPci-RB:
      type: object
      properties:
        description:
          maxLength: 4096
          type: string
        map:
          type: array
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. Used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              iommugroup:
                description: The IOMMU group in which the device is to be expected in. Used for detecting hardware changes.
                optional: 1
                type: integer
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the device. If the function is omitted, the whole device is mapped. In that case use the attributes of the first device. You can give multiple paths as a semicolon seperated list, the first available will then be chosen on guest start.
                pattern: (?:[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?;)*[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?
                type: string
              subsystem-id:
                description: The subsystem vendor and device ID that is expected. Used for detecting hardware changes.
                optional: 1
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
            type: string
        mdev:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        id:
          type: string
    PUT-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        comment:
          type: string
        rename:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        digest:
          maxLength: 64
          type: string
        node:
          type: string
        cidr:
          type: string
    NodesCephLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    NodesScanGlusterfs:
      type: array
      items:
        type: object
        properties:
          volname:
            type: string
    GET-NodesLxcRrd-RB:
      type: object
      properties:
        ds:
          type: string
        node:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    POST-NodesVncshell-RB:
      type: object
      properties:
        height:
          type: integer
          minimum: 16
          maximum: 2160
        cmd:
          type: string
          enum:
          - upgrade
          - ceph_install
          - login
        node:
          type: string
        width:
          type: integer
          minimum: 16
          maximum: 4096
        websocket:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        cmd-opts:
          type: string
    PUT-NodesConfig-RB:
      type: object
      properties:
        description:
          maxLength: 65536
          type: string
        delete:
          type: string
        digest:
          maxLength: 40
          type: string
        acmedomain[n]:
          type: string
        acme:
          type: string
        node:
          type: string
        startall-onboot-delay:
          type: integer
          maximum: 300
        wakeonlan:
          type: string
    POST-NodesCephMds-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
          pattern: '[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?'
        node:
          type: string
        hotstandby:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    ClusterSdnVnetsFirewallRules:
      type: object
      properties:
        action:
          type: string
        icmp-type:
          type: string
        macro:
          type: string
        comment:
          type: string
        ipversion:
          type: integer
        source:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        type:
          type: string
        enable:
          type: integer
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        iface:
          type: string
    POST-NodesQemuStatusSuspend-RB:
      type: object
      properties:
        node:
          type: string
        statestorage:
          type: string
        todisk:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesQemuStatusCurrent:
      type: object
      properties:
        netout:
          type: integer
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        cpus:
          type: number
        spice:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        maxmem:
          type: integer
        diskread:
          type: integer
        pid:
          type: integer
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        running-machine:
          type: string
        netin:
          type: integer
        uptime:
          type: integer
        diskwrite:
          type: integer
        clipboard:
          type: string
          enum:
          - vnc
        maxdisk:
          type: integer
        qmpstatus:
          type: string
        name:
          type: string
        agent:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tags:
          type: string
        status:
          type: string
          enum:
          - stopped
          - running
        lock:
          type: string
        running-qemu:
          type: string
        ha:
          type: object
    ClusterHaStatusCurrent:
      type: array
      items:
        type: object
        properties:
          timestamp:
            type: integer
          id:
            type: string
          request_state:
            type: string
          status:
            type: string
          type:
            type: 
            enum:
            - quorum
            - master
            - lrm
            - service
          state:
            type: string
          node:
            type: string
          sid:
            type: string
          crm_state:
            type: string
          quorate:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          max_relocate:
            type: integer
          max_restart:
            type: integer
    ClusterFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
          cidr:
            type: string
          nomatch:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    ClusterHaStatus:
      type: array
      items:
        type: object
        properties: {}
    ClusterFirewallRefs:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          scope:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          ref:
            type: string
          comment:
            type: string
    PUT-Pools-RB:
      type: object
      properties:
        delete:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        poolid:
          type: string
        vms:
          type: string
        storage:
          type: string
        allow-move:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    ClusterTasks:
      type: array
      items:
        type: object
        properties:
          upid:
            type: string
    PUT-NodesLxcResize-RB:
      type: object
      properties:
        disk:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
        node:
          type: string
        digest:
          maxLength: 40
          type: string
        size:
          pattern: '\+?\d+(\.\d+)?[KMGT]?'
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    Nodes:
      type: array
      items:
        type: object
        properties:
          mem:
            type: integer
          ssl_fingerprint:
            type: string
          maxcpu:
            type: integer
          status:
            type: string
            enum:
            - unknown
            - online
            - offline
          node:
            type: string
          cpu:
            type: number
          level:
            type: string
          maxmem:
            type: integer
          uptime:
            type: integer
    ClusterMappingUsb:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
          map:
            type: array
            items:
              description: A mapping for a node.
              type: string
          error:
            type: 
            items:
              properties:
                message:
                  description: The message of the error
                  type: string
                severity:
                  description: The severity of the error
                  type: string
              type: object
          id:
            type: string
    POST-NodesDisksLvmthin-RB:
      type: object
      properties:
        name:
          type: string
        add_storage:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        device:
          type: string
    POST-Storage-RB:
      type: object
      properties:
        volume:
          type: string
        namespace:
          type: string
        smbversion:
          type: string
          enum:
          - default
          - "2.0"
          - "2.1"
          - "3"
          - "3.0"
          - "3.11"
        nodes:
          type: string
        mountpoint:
          type: string
        create-subdirs:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comstar_tg:
          type: string
        fs-name:
          type: string
        username:
          type: string
        subdir:
          type: string
        saferemove_throughput:
          type: string
        transport:
          type: string
          enum:
          - tcp
          - rdma
          - unix
        iscsiprovider:
          type: string
        keyring:
          type: string
        domain:
          maxLength: 256
          type: string
        path:
          type: string
        target:
          type: string
        nocow:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        fuse:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        data-pool:
          type: string
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        share:
          type: string
        tagged_only:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        datastore:
          type: string
        create-base-path:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        lio_tpg:
          type: string
        format:
          type: string
        sparse:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        server2:
          type: string
        maxfiles:
          type: integer
        preallocation:
          type: string
          enum:
          - "off"
          - metadata
          - falloc
          - full
        is_mountpoint:
          type: string
        authsupported:
          type: string
        bwlimit:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        content-dirs:
          type: string
        export:
          type: string
        krbd:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        max-protected-backups:
          minimum: -1
          type: integer
        portal:
          type: string
        monhost:
          type: string
        port:
          type: integer
          minimum: 1
          maximum: 65535
        prune-backups:
          type: string
        master-pubkey:
          type: string
        skip-cert-verification:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        thinpool:
          type: string
        content:
          type: string
        storage:
          type: string
        encryption-key:
          type: string
        server:
          type: string
        mkdir:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vgname:
          type: string
        shared:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        password:
          maxLength: 256
          type: string
        pool:
          type: string
        base:
          type: string
        comstar_hg:
          type: string
        options:
          type: string
        blocksize:
          type: string
        saferemove:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nowritecache:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
    GET-NodesLxcFirewallLog-RB:
      type: object
      properties:
        start:
          type: integer
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        until:
          type: integer
        node:
          type: string
        limit:
          type: integer
        since:
          type: integer
    POST-NodesQemuMtunnel-RB:
      type: object
      properties:
        node:
          type: string
        bridges:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        storages:
          type: string
    NodesLxcFeature:
      type: object
      properties:
        hasFeature:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-ClusterMappingUsb-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        description:
          maxLength: 4096
          type: string
        map:
          type: array
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. If a USB path is given, it is only used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the usb device.
                optional: 1
                pattern: (?^:^(\d+)\-(\d+(\.\d+)*)$)
                type: string
            type: string
        delete:
          maxLength: 4096
          type: string
        id:
          type: string
    ClusterAcmeDirectories:
      type: array
      items:
        type: object
        properties:
          url:
            pattern: ^https?://.*
            type: string
          name:
            type: string
    POST-ClusterFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        comment:
          type: string
        cidr:
          type: string
    NodesLxcPending:
      type: array
      items:
        type: object
        properties:
          key:
            type: string
          pending:
            type: string
          delete:
            type: integer
            maximum: 2
          value:
            type: string
    GET-NodesJournal-RB:
      type: object
      properties:
        until:
          type: integer
        startcursor:
          type: string
        node:
          type: string
        endcursor:
          type: string
        since:
          type: integer
        lastentries:
          type: integer
    NodesQemuRrd:
      type: object
      properties:
        filename:
          type: string
    PUT-AccessGroups-RB:
      type: object
      properties:
        comment:
          type: string
        groupid:
          type: string
    POST-NodesQemuMigrate-RB:
      type: object
      properties:
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        with-local-disks:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        migration_type:
          type: string
          enum:
          - secure
          - insecure
        node:
          type: string
        bwlimit:
          minimum: "0"
          type: integer
        target:
          type: string
        migration_network:
          type: string
        online:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        targetstorage:
          type: string
    NodesAptUpdate:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesQemuFirewallRefs-RB:
      type: object
      properties:
        node:
          type: string
        type:
          type: string
          enum:
          - alias
          - ipset
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesQueryurlmetadata-RB:
      type: object
      properties:
        node:
          type: string
        url:
          pattern: https?://.*
          type: string
        verify-certificates:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesLxcMigrate-RB:
      type: object
      properties:
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        node:
          type: string
        restart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        bwlimit:
          minimum: "0"
          type: number
        target:
          type: string
        target-storage:
          type: string
        online:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        timeout:
          type: integer
    ClusterSdnVnetsFirewallOptions:
      type: object
      properties:
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-ClusterNotificationsEndpointsWebhook-RB:
      type: object
      properties:
        secret:
          type: array
          items:
            type: string
        name:
          type: string
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        header:
          type: array
          items:
            type: string
        digest:
          maxLength: 64
          type: string
        url:
          type: string
        body:
          type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
    PUT-ClusterSdnVnets-RB:
      type: object
      properties:
        vnet:
          type: string
        delete:
          maxLength: 4096
          type: string
        isolate-ports:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 64
          type: string
        vlanaware:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        zone:
          type: string
        alias:
          type: string
          maxLength: 256
          pattern: (?^i:[\(\)-_.\w\d\s]{0,256})
        tag:
          type: integer
    GET-ClusterAcmeTos-RB:
      type: object
      properties:
        directory:
          pattern: ^https?://.*
          type: string
    NodesQemuFirewallAliases:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
          cidr:
            type: string
    NodesCephCmdsafety:
      type: object
      properties:
        safe:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        status:
          type: string
    ClusterAcmeMeta:
      type: object
      properties:
        caaIdentities:
          type: array
          items:
            type: string
        termsOfService:
          type: string
        website:
          type: string
        externalAccountRequired:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesServices:
      type: array
      items:
        type: object
        properties: {}
    NodesTasks:
      type: array
      items:
        type: object
        properties:
          starttime:
            type: integer
            title: Starttime
          id:
            type: string
            title: ID
          pstart:
            type: integer
          status:
            type: string
            title: Status
          endtime:
            type: integer
            title: Endtime
          pid:
            type: integer
            title: PID
          upid:
            type: string
            title: UPID
          node:
            type: string
            title: Node
          user:
            type: string
            title: User
          type:
            type: string
            title: Type
    GET-NodesQemuAgentFileread-RB:
      type: object
      properties:
        node:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        file:
          type: string
    POST-ClusterHaResources-RB:
      type: object
      properties:
        comment:
          maxLength: 4096
          type: string
        type:
          type: string
          enum:
          - ct
          - vm
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        sid:
          type: string
        max_relocate:
          type: integer
        max_restart:
          type: integer
        group:
          type: string
    POST-NodesSuspendall-RB:
      type: object
      properties:
        vms:
          type: string
        node:
          type: string
    DELETE-NodesDisksZfs-RB:
      type: object
      properties:
        name:
          type: string
        cleanup-config:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        cleanup-disks:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-AccessGroups-RB:
      type: object
      properties:
        comment:
          type: string
        groupid:
          type: string
    GET-ClusterMappingPci-RB:
      type: object
      properties:
        check-node:
          type: string
    ClusterSdn:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    POST-NodesQemuStatusShutdown-RB:
      type: object
      properties:
        forceStop:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        keepActive:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        timeout:
          type: integer
    POST-NodesFirewallRules-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        node:
          type: string
        sport:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    POST-NodesStatus-RB:
      type: object
      properties:
        command:
          type: string
          enum:
          - reboot
          - shutdown
        node:
          type: string
    GET-ClusterConfigJoin-RB:
      type: object
      properties:
        node:
          type: string
    POST-ClusterFirewallGroups-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        group:
          type: string
          maxLength: 18
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        sport:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    NodesDisksSmart:
      type: object
      properties:
        attributes:
          type: array
          items: 
        type:
          type: string
        health:
          type: string
        text:
          type: string
    GET-ClusterSdnIpams-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - netbox
          - phpipam
          - pve
    DELETE-AccessTfa-RB:
      type: object
      properties:
        password:
          type: string
          maxLength: 64
          minLength: 5
        id:
          type: string
        userid:
          maxLength: 64
          type: string
    Storage-GET:
      type: array
      items:
        type: object
        properties:
          storage:
            type: string
    Version:
      type: object
      properties:
        console:
          type: string
          enum:
          - applet
          - vv
          - html5
          - xtermjs
        repoid:
          pattern: '[0-9a-fA-F]{8,64}'
          type: string
        version:
          type: string
        release:
          type: string
    PUT-ClusterFirewallRules-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        delete:
          type: string
        sport:
          type: string
        moveto:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    POST-NodesQemuStatusResume-RB:
      type: object
      properties:
        node:
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nocheck:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    PUT-ClusterFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        digest:
          maxLength: 64
          type: string
        comment:
          type: string
        rename:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        cidr:
          type: string
    DELETE-Pools-RB:
      type: object
      properties:
        poolid:
          type: string
    DELETE-NodesFirewallRules-RB:
      type: object
      properties:
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
    ClusterSdnControllers:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          state:
            type: string
          pending:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          controller:
            type: string
    NodesDns:
      type: object
      properties:
        dns1:
          type: string
        dns3:
          type: string
        search:
          type: string
        dns2:
          type: string
    ClusterAcmeAccount-GET:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesLxcStatusShutdown-RB:
      type: object
      properties:
        node:
          type: string
        timeout:
          type: integer
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        forceStop:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesLxcFirewallLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    GET-NodesQemu-RB:
      type: object
      properties:
        node:
          type: string
        full:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesSdnZonesContent:
      type: array
      items:
        type: object
        properties:
          status:
            type: string
          statusmsg:
            type: string
          vnet:
            type: string
    NodesHardwareUsb:
      type: array
      items:
        type: object
        properties:
          manufacturer:
            type: string
          class:
            type: integer
          serial:
            type: string
          prodid:
            type: string
          usbpath:
            type: string
          vendid:
            type: string
          product:
            type: string
          level:
            type: integer
          speed:
            type: string
          busnum:
            type: integer
          devnum:
            type: integer
          port:
            type: integer
    PUT-NodesQemuResize-RB:
      type: object
      properties:
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        size:
          pattern: '\+?\d+(\.\d+)?[KMGT]?'
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 40
          type: string
        node:
          type: string
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
    GET-NodesDisksSmart-RB:
      type: object
      properties:
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
        node:
          type: string
        healthonly:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-AccessOpenidAuthurl-RB:
      type: object
      properties:
        realm:
          maxLength: 32
          type: string
        redirect-url:
          maxLength: 255
          type: string
    POST-NodesStorageDownloadurl-RB:
      type: object
      properties:
        node:
          type: string
        url:
          pattern: https?://.*
          type: string
        compression:
          type: string
        checksum-algorithm:
          type: string
          enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
        content:
          type: string
          enum:
          - iso
          - vztmpl
          - import
        checksum:
          type: string
        storage:
          type: string
        filename:
          maxLength: 255
          type: string
        verify-certificates:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesTermproxy-RB:
      type: object
      properties:
        node:
          type: string
        cmd:
          type: string
          enum:
          - upgrade
          - ceph_install
          - login
        cmd-opts:
          type: string
    GET-ClusterFirewallRefs-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - alias
          - ipset
    AccessUsersToken-PUT:
      type: object
      properties:
        privsep:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        expire:
          type: integer
        comment:
          type: string
    PUT-NodesQemuConfig-RB:
      type: object
      properties:
        protection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        watchdog:
          type: string
        args:
          type: string
        cdrom:
          type: string
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        machine:
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ipconfig[n]:
          type: string
        cpuunits:
          type: integer
          minimum: 1
          maximum: 262144
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        scsi[n]:
          type: string
        hookscript:
          type: string
        cores:
          minimum: 1
          type: integer
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
        vga:
          type: string
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        usb[n]:
          type: string
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        sshkeys:
          type: string
        ciupgrade:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vcpus:
          minimum: 1
          type: integer
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        spice_enhancements:
          type: string
        migrate_speed:
          type: integer
        hotplug:
          type: string
        freeze:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        startup:
          type: string
        efidisk0:
          type: string
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        nameserver:
          type: string
        amd-sev:
          type: string
        revert:
          type: string
        sata[n]:
          type: string
        onboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        cicustom:
          type: string
        numa[n]:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        ide[n]:
          type: string
        net[n]:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        acpi:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        audio0:
          type: string
        localtime:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        sockets:
          minimum: 1
          type: integer
        tags:
          type: string
        searchdomain:
          type: string
        hostpci[n]:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        migrate_downtime:
          type: number
        vmstatestorage:
          type: string
        cpulimit:
          type: number
          maximum: 128
        tablet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 40
          type: string
        ivshmem:
          type: string
        memory:
          type: string
        tdf:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        rng0:
          type: string
        delete:
          type: string
        node:
          type: string
        shares:
          type: integer
          maximum: 50000
        cipassword:
          type: string
        reboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        name:
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        boot:
          type: string
        numa:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        affinity:
          type: string
        keephugepages:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        description:
          maxLength: 8192
          type: string
        tpmstate0:
          type: string
        virtio[n]:
          type: string
        ciuser:
          type: string
        smbios1:
          maxLength: 512
          type: string
        agent:
          type: string
        balloon:
          type: integer
        smp:
          minimum: 1
          type: integer
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        autostart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        unused[n]:
          type: string
        kvm:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        cpu:
          type: string
    POST-NodesLxcVncproxy-RB:
      type: object
      properties:
        node:
          type: string
        websocket:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        height:
          type: integer
          minimum: 16
          maximum: 2160
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        width:
          type: integer
          minimum: 16
          maximum: 4096
    DELETE-NodesDisksLvm-RB:
      type: object
      properties:
        name:
          type: string
        cleanup-config:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        cleanup-disks:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-ClusterNotificationsMatchers-RB:
      type: object
      properties:
        name:
          type: string
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        match-severity:
          type: array
          items:
            type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        match-calendar:
          type: array
          items:
            type: string
        digest:
          maxLength: 64
          type: string
        target:
          type: array
          items:
            format: pve-configid
            type: string
        match-field:
          type: array
          items:
            type: string
        invert-match:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        mode:
          type: string
          enum:
          - all
          - any
    GET-NodesQemuMtunnelwebsocket-RB:
      type: object
      properties:
        node:
          type: string
        ticket:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        socket:
          type: string
    GET-NodesCephCfgValue-RB:
      type: object
      properties:
        config-keys:
          pattern: (?^:^(:?(?^i:[0-9a-z\-_\.]+:[0-9a-zA-Z\-_]+))(:?[;, ](?^i:[0-9a-z\-_\.]+:[0-9a-zA-Z\-_]+))*$)
          type: string
        node:
          type: string
    POST-ClusterSdnIpams-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - netbox
          - phpipam
          - pve
        token:
          type: string
        section:
          type: integer
        url:
          type: string
        ipam:
          type: string
    NodesLxcStatusCurrent:
      type: object
      properties:
        netout:
          type: integer
        cpus:
          type: number
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        maxdisk:
          type: integer
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        diskread:
          type: integer
        netin:
          type: integer
        lock:
          type: string
        diskwrite:
          type: integer
        tags:
          type: string
        ha:
          type: object
        maxmem:
          type: integer
        uptime:
          type: integer
        status:
          type: string
          enum:
          - stopped
          - running
        name:
          type: string
        maxswap:
          type: integer
        disk:
          type: integer
    ClusterNotificationsMatcherfields:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
    PUT-NodesQemuUnlink-RB:
      type: object
      properties:
        node:
          type: string
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        idlist:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    PUT-ClusterSdnVnetsFirewallOptions-RB:
      type: object
      properties:
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        delete:
          type: string
        digest:
          maxLength: 64
          type: string
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        vnet:
          type: string
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-NodesDns-RB:
      type: object
      properties:
        dns1:
          type: string
        node:
          type: string
        dns3:
          type: string
        search:
          type: string
        dns2:
          type: string
    NodesScanZfs:
      type: array
      items:
        type: object
        properties:
          pool:
            type: string
    GET-NodesQemuMigrate-RB:
      type: object
      properties:
        node:
          type: string
        target:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesStorageFilerestoreList-RB:
      type: object
      properties:
        node:
          type: string
        volume:
          type: string
        storage:
          type: string
        filepath:
          type: string
    POST-NodesCephPool-RB:
      type: object
      properties:
        pg_autoscale_mode:
          type: string
          enum:
          - "on"
          - "off"
          - warn
          title: PG Autoscale Mode
        application:
          type: string
          enum:
          - rbd
          - cephfs
          - rgw
          title: Application
        target_size_ratio:
          type: number
          title: PG Autoscale Target Ratio
        min_size:
          type: integer
          minimum: 1
          title: Min Size
          maximum: 7
        pg_num:
          type: integer
          minimum: 1
          title: PG Num
          maximum: 32768
        crush_rule:
          type: string
          title: Crush Rule Name
        add_storages:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        pg_num_min:
          type: integer
          title: min. PG Num
          maximum: 32768
        target_size:
          type: string
          title: PG Autoscale Target Size
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
        node:
          type: string
        size:
          type: integer
          minimum: 1
          title: Size
          maximum: 7
        erasure-coding:
          type: string
        name:
          type: string
          title: Name
    NodesLxcFirewallOptions:
      type: object
      properties:
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ipfilter:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        dhcp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        radv:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        ndp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        macfilter:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    ClusterNotificationsMatcherfieldvalues:
      type: array
      items:
        type: object
        properties:
          field:
            type: string
          comment:
            type: string
          value:
            type: string
    POST-ClusterNotificationsEndpointsSendmail-RB:
      type: object
      properties:
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        name:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        author:
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        from-address:
          type: string
    ClusterCephFlags:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            enum:
            - nobackfill
            - nodeep-scrub
            - nodown
            - noin
            - noout
            - norebalance
            - norecover
            - noscrub
            - notieragent
            - noup
            - pause
          description:
            type: string
          value:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    ClusterAcmePlugins:
      type: array
      items:
        type: object
        properties:
          plugin:
            type: string
    DELETE-ClusterFirewallAliases-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
    GET-NodesVncwebsocket-RB:
      type: object
      properties:
        node:
          type: string
        port:
          type: integer
          minimum: 5900
          maximum: 5999
        vncticket:
          maxLength: 512
          type: string
    NodesHardwarePci-GET:
      type: array
      items:
        type: object
        properties:
          method:
            type: string
    POST-ClusterNotificationsEndpointsSmtp-RB:
      type: object
      properties:
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
        username:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        author:
          type: string
        password:
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        server:
          type: string
        name:
          type: string
        port:
          type: integer
        from-address:
          type: string
    NodesQemuVncwebsocket:
      type: object
      properties:
        port:
          type: string
    GET-NodesCephPoolStatus-RB:
      type: object
      properties:
        node:
          type: string
        name:
          type: string
        verbose:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesLxcMovevolume-RB:
      type: object
      properties:
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        delete:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 40
          type: string
        node:
          type: string
        target-digest:
          maxLength: 40
          type: string
        bwlimit:
          minimum: "0"
          type: number
        volume:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        target-vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        storage:
          type: string
        target-volume:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
    GET-ClusterAcmeMeta-RB:
      type: object
      properties:
        directory:
          pattern: ^https?://.*
          type: string
    POST-NodesLxcStatusStart-RB:
      type: object
      properties:
        node:
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        debug:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesStartall-RB:
      type: object
      properties:
        node:
          type: string
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vms:
          type: string
    PUT-NodesFirewallOptions-RB:
      type: object
      properties:
        nf_conntrack_max:
          minimum: 32768
          type: integer
        nf_conntrack_tcp_timeout_established:
          minimum: 7875
          type: integer
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nf_conntrack_tcp_timeout_syn_recv:
          type: integer
          minimum: 30
          maximum: 60
        protection_synflood_rate:
          type: integer
        tcpflags:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        protection_synflood:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nosmurfs:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nf_conntrack_helpers:
          type: string
        log_nf_conntrack:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nf_conntrack_allow_invalid:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        delete:
          type: string
        node:
          type: string
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nftables:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        protection_synflood_burst:
          type: integer
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 64
          type: string
        ndp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tcp_flags_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        smurf_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
    NodesQemuSnapshot:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          snaptime:
            type: integer
          parent:
            type: string
          vmstate:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    ClusterFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    POST-ClusterFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        comment:
          type: string
        cidr:
          type: string
        nomatch:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesQemuAgentFileread:
      type: object
      properties:
        content:
          type: string
        truncated:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesScanIscsi:
      type: array
      items:
        type: object
        properties:
          portal:
            type: string
          target:
            type: string
    POST-ClusterSdnVnets-RB:
      type: object
      properties:
        zone:
          type: string
        isolate-ports:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vnet:
          type: string
        vlanaware:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        type:
          type: string
          enum:
          - vnet
        alias:
          type: string
          maxLength: 256
          pattern: (?^i:[\(\)-_.\w\d\s]{0,256})
        tag:
          type: integer
    NodesCephMon:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          ceph_version:
            type: string
          host:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          service:
            type: integer
          rank:
            type: integer
          direxists:
            type: string
          addr:
            type: string
          ceph_version_short:
            type: string
          state:
            type: string
          quorum:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    NodesRrddata:
      type: array
      items:
        type: object
        properties: {}
    GET-Pools-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - qemu
          - lxc
          - storage
        poolid:
          type: string
    POST-AccessTicket-RB:
      type: object
      properties:
        username:
          maxLength: 64
          type: string
        privs:
          maxLength: 64
          type: string
        otp:
          type: string
        new-format:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        path:
          maxLength: 64
          type: string
        password:
          type: string
        realm:
          maxLength: 32
          type: string
        tfa-challenge:
          type: string
    POST-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        node:
          type: string
        comment:
          type: string
        cidr:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    Cluster:
      type: array
      items:
        type: object
        properties: {}
    NodesLxcFirewallRules:
      type: object
      properties:
        action:
          type: string
        icmp-type:
          type: string
        macro:
          type: string
        comment:
          type: string
        ipversion:
          type: integer
        source:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        type:
          type: string
        enable:
          type: integer
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        pos:
          type: integer
        iface:
          type: string
    GET-NodesQemuCloudinitDump-RB:
      type: object
      properties:
        node:
          type: string
        type:
          type: string
          enum:
          - user
          - network
          - meta
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesDisksLvm:
      type: object
      properties:
        leaf:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        children:
          type: array
          items:
            properties:
              children:
                description: The underlying physical volumes
                items:
                  properties:
                    free:
                      description: The free bytes in the physical volume
                      type: integer
                    leaf:
                      type: boolean
                    name:
                      description: The name of the physical volume
                      type: string
                    size:
                      description: The size of the physical volume in bytes
                      type: integer
                  type: object
                optional: 1
                type: array
              free:
                description: The free bytes in the volume group
                type: integer
              leaf:
                type: boolean
              name:
                description: The name of the volume group
                type: string
              size:
                description: The size of the volume group in bytes
                type: integer
            type: object
    POST-NodesMigrateall-RB:
      type: object
      properties:
        node:
          type: string
        maxworkers:
          minimum: 1
          type: integer
        with-local-disks:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        target:
          type: string
        vms:
          type: string
    PUT-ClusterSdnZones-RB:
      type: object
      properties:
        nodes:
          type: string
        vlan-protocol:
          type: string
          enum:
          - 802.1q
          - 802.1ad
        vxlan-port:
          type: integer
          minimum: 1
          maximum: 65536
        zone:
          type: string
        exitnodes-primary:
          type: string
        rt-import:
          type: string
        tag:
          type: integer
        ipam:
          type: string
        exitnodes:
          type: string
        dp-id:
          type: integer
        dns:
          type: string
        bridge:
          type: string
        vrf-vxlan:
          type: integer
        dnszone:
          type: string
        bridge-disable-mac-learning:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        delete:
          maxLength: 4096
          type: string
        mac:
          type: string
        dhcp:
          type: string
          enum:
          - dnsmasq
        mtu:
          type: integer
        controller:
          type: string
        disable-arp-nd-suppression:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        peers:
          type: string
        digest:
          maxLength: 64
          type: string
        exitnodes-local-routing:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        reversedns:
          type: string
        advertise-subnets:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-NodesQemuSpiceproxy-RB:
      type: object
      properties:
        node:
          type: string
        proxy:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesLxcFirewallRefs-RB:
      type: object
      properties:
        node:
          type: string
        type:
          type: string
          enum:
          - alias
          - ipset
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    PUT-NodesQemuSendkey-RB:
      type: object
      properties:
        node:
          type: string
        key:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        comment:
          type: string
        rename:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        digest:
          maxLength: 64
          type: string
        node:
          type: string
        cidr:
          type: string
    POST-ClusterSdnZones-RB:
      type: object
      properties:
        nodes:
          type: string
        vlan-protocol:
          type: string
          enum:
          - 802.1q
          - 802.1ad
        vxlan-port:
          type: integer
          minimum: 1
          maximum: 65536
        zone:
          type: string
        rt-import:
          type: string
        tag:
          type: integer
        ipam:
          type: string
        exitnodes:
          type: string
        dp-id:
          type: integer
        exitnodes-primary:
          type: string
        bridge:
          type: string
        vrf-vxlan:
          type: integer
        dnszone:
          type: string
        type:
          type: string
          enum:
          - evpn
          - faucet
          - qinq
          - simple
          - vlan
          - vxlan
        bridge-disable-mac-learning:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        dhcp:
          type: string
          enum:
          - dnsmasq
        mtu:
          type: integer
        controller:
          type: string
        disable-arp-nd-suppression:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        peers:
          type: string
        mac:
          type: string
        exitnodes-local-routing:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        dns:
          type: string
        reversedns:
          type: string
        advertise-subnets:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    PUT-ClusterFirewallGroups-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        group:
          type: string
          maxLength: 18
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        delete:
          type: string
        sport:
          type: string
        moveto:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    NodesQemuFirewallOptions:
      type: object
      properties:
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ipfilter:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        dhcp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        radv:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        ndp:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        macfilter:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    POST-ClusterFirewallRules-RB:
      type: object
      properties:
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        sport:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    POST-NodesCertificatesCustom-RB:
      type: object
      properties:
        key:
          type: string
        certificates:
          type: string
        node:
          type: string
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        restart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesScanLvm:
      type: array
      items:
        type: object
        properties:
          vg:
            type: string
    GET-NodesLxcVncwebsocket-RB:
      type: object
      properties:
        node:
          type: string
        vncticket:
          maxLength: 512
          type: string
        port:
          type: integer
          minimum: 5900
          maximum: 5999
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesQemuAgentExecstatus-RB:
      type: object
      properties:
        node:
          type: string
        pid:
          type: integer
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesTasksLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    PUT-NodesSubscription-RB:
      type: object
      properties:
        key:
          type: string
          maxLength: 32
          pattern: '\s*pve([1248])([cbsp])-[0-9a-f]{10}\s*'
        node:
          type: string
    POST-ClusterNotificationsEndpointsWebhook-RB:
      type: object
      properties:
        secret:
          type: array
          items:
            type: string
        name:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        header:
          type: array
          items:
            type: string
        url:
          type: string
        body:
          type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
    POST-ClusterSdnDns-RB:
      type: object
      properties:
        url:
          type: string
        reversev6mask:
          type: integer
        type:
          type: string
          enum:
          - powerdns
        reversemaskv6:
          type: integer
        dns:
          type: string
        ttl:
          type: integer
        key:
          type: string
    GET-ClusterLog-RB:
      type: object
      properties:
        max:
          minimum: 1
          type: integer
    GET-NodesQemuRrd-RB:
      type: object
      properties:
        ds:
          type: string
        node:
          type: string
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    DELETE-NodesQemu-RB:
      type: object
      properties:
        node:
          type: string
        destroy-unreferenced-disks:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        purge:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesCephRules:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
    NodesConfig:
      type: object
      properties:
        description:
          maxLength: 65536
          type: string
        digest:
          maxLength: 40
          type: string
        acmedomain[n]:
          type: string
        acme:
          type: string
        startall-onboot-delay:
          type: integer
          maximum: 300
        wakeonlan:
          type: string
    ClusterCephMetadata:
      type: object
      properties:
        mon:
          type: object
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addrs:
                  description: Bind addresses and ports.
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
        node:
          type: object
          properties:
            '{node}':
              properties:
                buildcommit:
                  description: GIT commit used for the build.
                  type: string
                version:
                  description: Version info.
                  properties:
                    parts:
                      description: major, minor & patch
                      type: array
                    str:
                      description: Version as single string.
                      type: string
                  type: object
              type: object
        osd:
          type: array
          items: 
        mds:
          type: object
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addr:
                  description: Bind addresses and ports.
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
        mgr:
          type: object
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addr:
                  description: Bind address
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
    GET-NodesNetwork-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - any_bridge
          - any_local_bridge
        node:
          type: string
    POST-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        nomatch:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        node:
          type: string
        cidr:
          type: string
    GET-ClusterMappingUsb-RB:
      type: object
      properties:
        check-node:
          type: string
    ClusterNotificationsEndpointsSendmail-GET:
      type: array
      items:
        type: object
        properties:
          mailto-user:
            type: array
            items:
              format: pve-userid
              type: string
          name:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          disable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          comment:
            type: string
          author:
            type: string
          mailto:
            type: array
            items:
              format: email-or-username
              type: string
          from-address:
            type: string
    NodesCephPool:
      type: array
      items:
        type: object
        properties:
          application_metadata:
            type: object
            title: Associated Applications
          crush_rule_name:
            type: string
            title: Crush Rule Name
          autoscale_status:
            type: object
            title: Autoscale Status
          bytes_used:
            type: integer
            title: Used
          target_size_ratio:
            type: number
            title: PG Autoscale Target Ratio
          min_size:
            type: integer
            title: Min Size
          percent_used:
            type: number
            title: '%-Used'
          pg_num:
            type: integer
            title: PG Num
          pool_name:
            type: string
            title: Name
          pg_num_min:
            type: integer
            title: min. PG Num
          crush_rule:
            type: integer
            title: Crush Rule
          pg_num_final:
            type: integer
            title: Optimal PG Num
          size:
            type: integer
            title: Size
          type:
            type: string
            enum:
            - replicated
            - erasure
            - unknown
            title: Type
          target_size:
            type: integer
            title: PG Autoscale Target Size
          pg_autoscale_mode:
            type: string
            title: PG Autoscale Mode
          pool:
            type: integer
            title: ID
    POST-NodesAptRepositories-RB:
      type: object
      properties:
        node:
          type: string
        index:
          type: integer
        digest:
          maxLength: 80
          type: string
        path:
          type: string
        enabled:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-ClusterAcmePlugins-RB:
      type: object
      properties:
        api:
          type: string
          enum:
          - 1984hosting
          - acmedns
          - acmeproxy
          - active24
          - ad
          - ali
          - anx
          - artfiles
          - arvan
          - aurora
          - autodns
          - aws
          - azion
          - azure
          - bookmyname
          - bunny
          - cf
          - clouddns
          - cloudns
          - cn
          - conoha
          - constellix
          - cpanel
          - curanet
          - cyon
          - da
          - ddnss
          - desec
          - df
          - dgon
          - dnsexit
          - dnshome
          - dnsimple
          - dnsservices
          - do
          - doapi
          - domeneshop
          - dp
          - dpi
          - dreamhost
          - duckdns
          - durabledns
          - dyn
          - dynu
          - dynv6
          - easydns
          - edgedns
          - euserv
          - exoscale
          - fornex
          - freedns
          - gandi_livedns
          - gcloud
          - gcore
          - gd
          - geoscaling
          - googledomains
          - he
          - hetzner
          - hexonet
          - hostingde
          - huaweicloud
          - infoblox
          - infomaniak
          - internetbs
          - inwx
          - ionos
          - ipv64
          - ispconfig
          - jd
          - joker
          - kappernet
          - kas
          - kinghost
          - knot
          - la
          - leaseweb
          - lexicon
          - linode
          - linode_v4
          - loopia
          - lua
          - maradns
          - me
          - miab
          - misaka
          - myapi
          - mydevil
          - mydnsjp
          - mythic_beasts
          - namecheap
          - namecom
          - namesilo
          - nanelo
          - nederhost
          - neodigit
          - netcup
          - netlify
          - nic
          - njalla
          - nm
          - nsd
          - nsone
          - nsupdate
          - nw
          - oci
          - one
          - online
          - openprovider
          - openstack
          - opnsense
          - ovh
          - pdns
          - pleskxml
          - pointhq
          - porkbun
          - rackcorp
          - rackspace
          - rage4
          - rcode0
          - regru
          - scaleway
          - schlundtech
          - selectel
          - selfhost
          - servercow
          - simply
          - tele3
          - tencent
          - transip
          - udr
          - ultra
          - unoeuro
          - variomedia
          - veesp
          - vercel
          - vscale
          - vultr
          - websupport
          - world4you
          - yandex
          - yc
          - zilore
          - zone
          - zonomi
        nodes:
          type: string
        id:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        type:
          type: string
          enum:
          - dns
          - standalone
        validation-delay:
          type: integer
          maximum: 172800
        data:
          type: string
    POST-NodesLxcSnapshot-RB:
      type: object
      properties:
        node:
          type: string
        description:
          type: string
        snapname:
          maxLength: 40
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    ClusterFirewallMacros:
      type: array
      items:
        type: object
        properties:
          macro:
            type: string
          descr:
            type: string
    PUT-AccessUsers-RB:
      type: object
      properties:
        groups:
          type: string
        userid:
          maxLength: 64
          type: string
        comment:
          maxLength: 2048
          type: string
        email:
          maxLength: 254
          type: string
        append:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        lastname:
          maxLength: 1024
          type: string
        expire:
          type: integer
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        firstname:
          maxLength: 1024
          type: string
    NodesDisksLvmthin:
      type: array
      items:
        type: object
        properties:
          metadata_size:
            type: integer
          vg:
            type: string
          metadata_used:
            type: integer
          used:
            type: integer
          lv_size:
            type: integer
          lv:
            type: string
    NodesNetwork:
      type: object
      properties:
        method:
          type: string
        type:
          type: string
    NodesCertificatesInfo:
      type: array
      items:
        type: object
        properties:
          public-key-bits:
            type: integer
          notafter:
            type: integer
          public-key-type:
            type: string
          pem:
            type: string
          notbefore:
            type: integer
          subject:
            type: string
          fingerprint:
            pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
            type: string
          san:
            type: array
            items:
              type: string
          filename:
            type: string
          issuer:
            type: string
    GET-NodesSyslog-RB:
      type: object
      properties:
        start:
          type: integer
        limit:
          type: integer
        until:
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
        node:
          type: string
        service:
          maxLength: 128
          type: string
        since:
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
    NodesStorage:
      type: array
      items:
        type: object
        properties:
          total:
            type: integer
          used:
            type: integer
          storage:
            type: string
          enabled:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          type:
            type: string
          content:
            type: string
          active:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          avail:
            type: integer
          shared:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          used_fraction:
            type: number
    GET-ClusterSdnZones-RB:
      type: object
      properties:
        zone:
          type: string
        pending:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        running:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesAplinfo:
      type: array
      items:
        type: object
        properties: {}
    PUT-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        ip:
          type: string
        vnet:
          type: string
        mac:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    GET-NodesFirewallLog-RB:
      type: object
      properties:
        limit:
          type: integer
        node:
          type: string
        since:
          type: integer
        until:
          type: integer
        start:
          type: integer
    GET-NodesStoragePrunebackups-RB:
      type: object
      properties:
        node:
          type: string
        type:
          type: string
          enum:
          - qemu
          - lxc
        storage:
          type: string
        prune-backups:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesQemuRemotemigrate-RB:
      type: object
      properties:
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        node:
          type: string
        delete:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        target-bridge:
          type: string
        bwlimit:
          minimum: "0"
          type: integer
        target-vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        target-storage:
          type: string
        online:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        target-endpoint:
          type: string
    PUT-Storage-RB:
      type: object
      properties:
        namespace:
          type: string
        smbversion:
          type: string
          enum:
          - default
          - "2.0"
          - "2.1"
          - "3"
          - "3.0"
          - "3.11"
        nodes:
          type: string
        mountpoint:
          type: string
        create-subdirs:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comstar_tg:
          type: string
        fs-name:
          type: string
        username:
          type: string
        saferemove_throughput:
          type: string
        transport:
          type: string
          enum:
          - tcp
          - rdma
          - unix
        keyring:
          type: string
        domain:
          maxLength: 256
          type: string
        nocow:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        fuse:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        data-pool:
          type: string
        pool:
          type: string
        create-base-path:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        lio_tpg:
          type: string
        format:
          type: string
        delete:
          maxLength: 4096
          type: string
        sparse:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        server2:
          type: string
        maxfiles:
          type: integer
        preallocation:
          type: string
          enum:
          - "off"
          - metadata
          - falloc
          - full
        is_mountpoint:
          type: string
        skip-cert-verification:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        bwlimit:
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        content-dirs:
          type: string
        krbd:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        max-protected-backups:
          minimum: -1
          type: integer
        tagged_only:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        monhost:
          type: string
        port:
          type: integer
          minimum: 1
          maximum: 65535
        prune-backups:
          type: string
        master-pubkey:
          type: string
        content:
          type: string
        storage:
          type: string
        encryption-key:
          type: string
        digest:
          maxLength: 64
          type: string
        server:
          type: string
        mkdir:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        shared:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        password:
          maxLength: 256
          type: string
        subdir:
          type: string
        comstar_hg:
          type: string
        options:
          type: string
        blocksize:
          type: string
        saferemove:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        nowritecache:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
    DELETE-ClusterFirewallRules-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
    GET-ClusterJobsScheduleanalyze-RB:
      type: object
      properties:
        schedule:
          maxLength: 128
          type: string
        starttime:
          type: integer
        iterations:
          type: integer
          minimum: 1
          maximum: 100
    NodesQemuAgentExec:
      type: object
      properties:
        pid:
          type: integer
    NodesDisksZfs-GET:
      type: array
      items:
        type: object
        properties:
          health:
            type: string
          alloc:
            type: integer
          size:
            type: integer
          free:
            type: integer
          frag:
            type: integer
          name:
            type: string
          dedup:
            type: number
    NodesSubscription:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
          - new
          - notfound
          - active
          - invalid
          - expired
          - suspended
        url:
          type: string
        sockets:
          type: integer
        signature:
          type: string
        productname:
          type: string
        checktime:
          type: integer
        level:
          type: string
        serverid:
          type: string
        regdate:
          type: string
        key:
          type: string
        nextduedate:
          type: string
    POST-ClusterReplication-RB:
      type: object
      properties:
        source:
          type: string
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        type:
          type: string
          enum:
          - local
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        comment:
          maxLength: 4096
          type: string
        remove_job:
          type: string
          enum:
          - local
          - full
        target:
          type: string
        rate:
          minimum: 1
          type: number
        schedule:
          maxLength: 128
          type: string
    AccessUsersUnlocktfa:
      type: integer
      minimum: 0
      maximum: 1
      description: 
    GET-ClusterResources-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - vm
          - storage
          - node
          - sdn
    NodesDisksList:
      type: array
      items:
        type: object
        properties:
          osdid-list:
            type: array
            items:
              type: integer
          gpt:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          wwn:
            type: string
          parent:
            type: string
          size:
            type: integer
          osdid:
            type: integer
          health:
            type: string
          serial:
            type: string
          mounted:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          vendor:
            type: string
          used:
            type: string
          devpath:
            type: string
          model:
            type: string
    ClusterConfigNodes-GET:
      type: array
      items:
        type: object
        properties:
          node:
            type: string
    POST-ClusterMappingUsb-RB:
      type: object
      properties:
        description:
          maxLength: 4096
          type: string
        map:
          type: array
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. If a USB path is given, it is only used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the usb device.
                optional: 1
                pattern: (?^:^(\d+)\-(\d+(\.\d+)*)$)
                type: string
            type: string
        id:
          type: string
    POST-ClusterHaResourcesRelocate-RB:
      type: object
      properties:
        sid:
          type: string
        node:
          type: string
    GET-NodesHardwarePci-RB:
      type: object
      properties:
        node:
          type: string
        pci-class-blacklist:
          type: string
        verbose:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    NodesStorageFilerestoreDownload:
      type: string
      format: binary
    POST-NodesNetwork-RB:
      type: object
      properties:
        mtu:
          type: integer
          minimum: 1280
          maximum: 65520
        address6:
          type: string
        bond-primary:
          type: string
        ovs_bridge:
          type: string
        node:
          type: string
        bond_mode:
          type: string
          enum:
          - balance-rr
          - active-backup
          - balance-xor
          - broadcast
          - 802.3ad
          - balance-tlb
          - balance-alb
          - balance-slb
          - lacp-balance-slb
          - lacp-balance-tcp
        comments6:
          type: string
        iface:
          type: string
          maxLength: 20
          minLength: 2
        bridge_vids:
          type: string
        slaves:
          type: string
        netmask:
          type: string
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - unknown
        ovs_ports:
          type: string
        address:
          type: string
        cidr:
          type: string
        comments:
          type: string
        cidr6:
          type: string
        vlan-raw-device:
          type: string
        netmask6:
          type: integer
          maximum: 128
        gateway:
          type: string
        bridge_vlan_aware:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ovs_tag:
          type: integer
          minimum: 1
          maximum: 4094
        ovs_bonds:
          type: string
        bond_xmit_hash_policy:
          type: string
          enum:
          - layer2
          - layer2+3
          - layer3+4
        ovs_options:
          maxLength: 1024
          type: string
        bridge_ports:
          type: string
        vlan-id:
          type: integer
          minimum: 1
          maximum: 4094
        gateway6:
          type: string
        autostart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    POST-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        vnet:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        action:
          type: string
          maxLength: 20
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        icmp-type:
          type: string
        macro:
          maxLength: 128
          type: string
        comment:
          type: string
        source:
          maxLength: 512
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        sport:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        enable:
          type: integer
        digest:
          maxLength: 64
          type: string
        pos:
          type: integer
        iface:
          type: string
          maxLength: 20
          minLength: 2
    AccessRoles:
      type: object
      properties:
        VM.Config.Network:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        SDN.Use:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Datastore.AllocateTemplate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Allocate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Sys.Console:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Datastore.Audit:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Config.Options:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Pool.Audit:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Sys.PowerMgmt:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        SDN.Allocate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Sys.Modify:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Sys.Audit:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.PowerMgmt:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Snapshot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Realm.Allocate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Monitor:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Console:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Config.Memory:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Config.HWType:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Datastore.Allocate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Permissions.Modify:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Sys.Syslog:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Config.CDROM:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Mapping.Modify:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Mapping.Audit:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Sys.AccessNetwork:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Datastore.AllocateSpace:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        User.Modify:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Mapping.Use:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Clone:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Realm.AllocateUser:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Group.Allocate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Backup:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Config.Disk:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Pool.Allocate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Audit:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Config.Cloudinit:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Migrate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        SDN.Audit:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Snapshot.Rollback:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        VM.Config.CPU:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        Sys.Incoming:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    ClusterConfig:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        node:
          type: string
        comment:
          type: string
        cidr:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesCephPoolStatus:
      type: object
      properties:
        autoscale_status:
          type: object
          title: Autoscale Status
        pg_num:
          type: integer
          minimum: 1
          title: PG Num
          maximum: 32768
        application:
          type: string
          enum:
          - rbd
          - cephfs
          - rgw
          title: Application
        noscrub:
          format: int32
          type: integer
          minimum: 0
          title: noscrub
          maximum: 1
        use_gmt_hitset:
          format: int32
          type: integer
          minimum: 0
          title: use_gmt_hitset
          maximum: 1
        min_size:
          type: integer
          minimum: 1
          title: Min Size
          maximum: 7
        id:
          type: integer
          title: ID
        hashpspool:
          format: int32
          type: integer
          minimum: 0
          title: hashpspool
          maximum: 1
        nopgchange:
          format: int32
          type: integer
          minimum: 0
          title: nopgchange
          maximum: 1
        nosizechange:
          format: int32
          type: integer
          minimum: 0
          title: nosizechange
          maximum: 1
        statistics:
          type: object
          title: Statistics
        fast_read:
          format: int32
          type: integer
          minimum: 0
          title: Fast Read
          maximum: 1
        target_size_ratio:
          type: number
          title: PG Autoscale Target Ratio
        write_fadvise_dontneed:
          format: int32
          type: integer
          minimum: 0
          title: write_fadvise_dontneed
          maximum: 1
        application_list:
          type: array
          title: Application
          items: 
        nodelete:
          format: int32
          type: integer
          minimum: 0
          title: nodelete
          maximum: 1
        pg_num_min:
          type: integer
          title: min. PG Num
          maximum: 32768
        crush_rule:
          type: string
          title: Crush Rule Name
        size:
          type: integer
          minimum: 1
          title: Size
          maximum: 7
        target_size:
          type: string
          title: PG Autoscale Target Size
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
        pg_autoscale_mode:
          type: string
          enum:
          - "on"
          - "off"
          - warn
          title: PG Autoscale Mode
        nodeep-scrub:
          format: int32
          type: integer
          minimum: 0
          title: nodeep-scrub
          maximum: 1
        name:
          type: string
          title: Name
        pgp_num:
          type: integer
          title: PGP num
    AccessTfa:
      type: object
      properties:
        id:
          type: string
        recovery:
          type: array
          items:
            description: A recovery entry.
            type: string
        challenge:
          type: string
    ClusterConfigJoin:
      type: object
      properties:
        nodelist:
          type: array
          items:
            additionalProperties: 1
            properties:
              name:
                description: The cluster node name.
                format: pve-node
                type: string
              nodeid:
                description: Node id for this node.
                minimum: 1
                optional: 1
                type: integer
              pve_addr:
                format: ip
                type: string
              pve_fp:
                description: Certificate SHA 256 fingerprint.
                pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                type: string
              quorum_votes:
                minimum: 0
                type: integer
              ring0_addr:
                description: Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)
                format:
                  address:
                    default_key: 1
                    description: Hostname (or IP) of this corosync link address.
                    format: address
                    format_description: IP
                    type: string
                  priority:
                    default: 0
                    description: The priority for the link when knet is used in 'passive' mode (default). Lower value means higher priority. Only valid for cluster create, ignored on node add.
                    maximum: 255
                    minimum: 0
                    optional: 1
                    type: integer
                optional: 1
                type: string
            type: object
        totem:
          type: object
        preferred_node:
          type: string
        config_digest:
          type: string
    PUT-AccessTfa-RB:
      type: object
      properties:
        password:
          type: string
          maxLength: 64
          minLength: 5
        description:
          maxLength: 255
          type: string
        id:
          type: string
        userid:
          maxLength: 64
          type: string
        enable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
    GET-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        pending:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        running:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vnet:
          type: string
        subnet:
          type: string
    POST-NodesQemuConfig-RB:
      type: object
      properties:
        protection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        watchdog:
          type: string
        args:
          type: string
        cdrom:
          type: string
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        machine:
          type: string
        skiplock:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        ipconfig[n]:
          type: string
        cpuunits:
          type: integer
          minimum: 1
          maximum: 262144
        force:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        scsi[n]:
          type: string
        hookscript:
          type: string
        cores:
          minimum: 1
          type: integer
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
        import-working-storage:
          type: string
        vga:
          type: string
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        usb[n]:
          type: string
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        sshkeys:
          type: string
        ciupgrade:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vcpus:
          minimum: 1
          type: integer
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        background_delay:
          type: integer
          minimum: 1
          maximum: 30
        spice_enhancements:
          type: string
        migrate_speed:
          type: integer
        hotplug:
          type: string
        freeze:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        startup:
          type: string
        efidisk0:
          type: string
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        nameserver:
          type: string
        amd-sev:
          type: string
        revert:
          type: string
        sata[n]:
          type: string
        onboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        cicustom:
          type: string
        numa[n]:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        ide[n]:
          type: string
        net[n]:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
        acpi:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        audio0:
          type: string
        localtime:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        sockets:
          minimum: 1
          type: integer
        tags:
          type: string
        searchdomain:
          type: string
        hostpci[n]:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        migrate_downtime:
          type: number
        vmstatestorage:
          type: string
        cpulimit:
          type: number
          maximum: 128
        tablet:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 40
          type: string
        ivshmem:
          type: string
        memory:
          type: string
        tdf:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        rng0:
          type: string
        delete:
          type: string
        node:
          type: string
        shares:
          type: integer
          maximum: 50000
        cipassword:
          type: string
        reboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        name:
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        boot:
          type: string
        numa:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        affinity:
          type: string
        keephugepages:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        description:
          maxLength: 8192
          type: string
        tpmstate0:
          type: string
        virtio[n]:
          type: string
        ciuser:
          type: string
        smbios1:
          maxLength: 512
          type: string
        agent:
          type: string
        balloon:
          type: integer
        smp:
          minimum: 1
          type: integer
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        autostart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        unused[n]:
          type: string
        kvm:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        cpu:
          type: string
    NodesStorageImportmetadata:
      type: object
      properties:
        source:
          type: string
          enum:
          - esxi
        net:
          type: object
          properties: 
        create-args:
          type: object
          properties: 
        type:
          type: string
          enum:
          - vm
        disks:
          type: object
          properties: 
        warnings:
          type: array
          items:
            additionalProperties: 1
            properties:
              key:
                description: Related subject (config) key of warning.
                optional: 1
                type: string
              type:
                description: What this warning is about.
                enum:
                - cdrom-image-ignored
                - efi-state-lost
                - guest-is-running
                - nvme-unsupported
                - ova-needs-extracting
                - ovmf-with-lsi-unsupported
                - serial-port-socket-only
                type: string
              value:
                description: Related subject (config) value of warning.
                optional: 1
                type: string
            type: object
    POST-NodesQemuSnapshot-RB:
      type: object
      properties:
        node:
          type: string
        description:
          type: string
        vmstate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        snapname:
          maxLength: 40
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesLxcSnapshot:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          snaptime:
            type: integer
          parent:
            type: string
    POST-NodesCephFs-RB:
      type: object
      properties:
        add-storage:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
        name:
          type: string
        pg_num:
          type: integer
          minimum: 8
          maximum: 32768
    NodesHardwarePci:
      type: array
      items:
        type: object
        properties:
          vendor_name:
            type: string
          device:
            type: string
          id:
            type: string
          class:
            type: string
          subsystem_device_name:
            type: string
          device_name:
            type: string
          subsystem_vendor:
            type: string
          vendor:
            type: string
          subsystem_device:
            type: string
          subsystem_vendor_name:
            type: string
          mdev:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
          iommugroup:
            type: integer
    DELETE-NodesStoragePrunebackups-RB:
      type: object
      properties:
        node:
          type: string
        type:
          type: string
          enum:
          - qemu
          - lxc
        storage:
          type: string
        prune-backups:
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    POST-NodesQemuAgent-RB:
      type: object
      properties:
        node:
          type: string
        command:
          type: string
          enum:
          - fsfreeze-freeze
          - fsfreeze-status
          - fsfreeze-thaw
          - fstrim
          - get-fsinfo
          - get-host-name
          - get-memory-block-info
          - get-memory-blocks
          - get-osinfo
          - get-time
          - get-timezone
          - get-users
          - get-vcpus
          - info
          - network-get-interfaces
          - ping
          - shutdown
          - suspend-disk
          - suspend-hybrid
          - suspend-ram
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesCapabilitiesQemu:
      type: array
      items:
        type: object
        properties: {}
    NodesTasks-GET:
      type: array
      items:
        type: object
        properties: {}
    ClusterNotificationsTargets:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          type:
            type: string
            enum:
            - sendmail
            - gotify
            - smtp
            - webhook
          comment:
            type: string
          disable:
            format: int32
            type: integer
            minimum: 0
            maximum: 1
    NodesLxcFirewallIpset:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            maxLength: 64
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
    DELETE-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
        node:
          type: string
        digest:
          maxLength: 64
          type: string
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    NodesLxcFirewallAliases:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
          cidr:
            type: string
    PUT-ClusterAcmePlugins-RB:
      type: object
      properties:
        api:
          type: string
          enum:
          - 1984hosting
          - acmedns
          - acmeproxy
          - active24
          - ad
          - ali
          - anx
          - artfiles
          - arvan
          - aurora
          - autodns
          - aws
          - azion
          - azure
          - bookmyname
          - bunny
          - cf
          - clouddns
          - cloudns
          - cn
          - conoha
          - constellix
          - cpanel
          - curanet
          - cyon
          - da
          - ddnss
          - desec
          - df
          - dgon
          - dnsexit
          - dnshome
          - dnsimple
          - dnsservices
          - do
          - doapi
          - domeneshop
          - dp
          - dpi
          - dreamhost
          - duckdns
          - durabledns
          - dyn
          - dynu
          - dynv6
          - easydns
          - edgedns
          - euserv
          - exoscale
          - fornex
          - freedns
          - gandi_livedns
          - gcloud
          - gcore
          - gd
          - geoscaling
          - googledomains
          - he
          - hetzner
          - hexonet
          - hostingde
          - huaweicloud
          - infoblox
          - infomaniak
          - internetbs
          - inwx
          - ionos
          - ipv64
          - ispconfig
          - jd
          - joker
          - kappernet
          - kas
          - kinghost
          - knot
          - la
          - leaseweb
          - lexicon
          - linode
          - linode_v4
          - loopia
          - lua
          - maradns
          - me
          - miab
          - misaka
          - myapi
          - mydevil
          - mydnsjp
          - mythic_beasts
          - namecheap
          - namecom
          - namesilo
          - nanelo
          - nederhost
          - neodigit
          - netcup
          - netlify
          - nic
          - njalla
          - nm
          - nsd
          - nsone
          - nsupdate
          - nw
          - oci
          - one
          - online
          - openprovider
          - openstack
          - opnsense
          - ovh
          - pdns
          - pleskxml
          - pointhq
          - porkbun
          - rackcorp
          - rackspace
          - rage4
          - rcode0
          - regru
          - scaleway
          - schlundtech
          - selectel
          - selfhost
          - servercow
          - simply
          - tele3
          - tencent
          - transip
          - udr
          - ultra
          - unoeuro
          - variomedia
          - veesp
          - vercel
          - vscale
          - vultr
          - websupport
          - world4you
          - yandex
          - yc
          - zilore
          - zone
          - zonomi
        nodes:
          type: string
        id:
          type: string
        delete:
          maxLength: 4096
          type: string
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        digest:
          maxLength: 64
          type: string
        validation-delay:
          type: integer
          maximum: 172800
        data:
          type: string
    NodesStoragePrunebackups:
      type: array
      items:
        type: object
        properties:
          volid:
            type: string
          type:
            type: string
          ctime:
            type: integer
          mark:
            type: string
            enum:
            - keep
            - remove
            - protected
            - renamed
          vmid:
            type: integer
    ClusterFirewallIpset:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            maxLength: 64
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
          digest:
            maxLength: 64
            type: string
          comment:
            type: string
    NodesLxcConfig:
      type: object
      properties:
        nameserver:
          type: string
        lxc:
          type: array
          items:
            items:
              type: string
            type: array
        hookscript:
          type: string
        searchdomain:
          type: string
        net[n]:
          type: string
        console:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        rootfs:
          type: string
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        mp[n]:
          type: string
        protection:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tty:
          type: integer
          maximum: 6
        cpulimit:
          type: number
          maximum: 8192
        unused[n]:
          type: string
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        template:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        swap:
          type: integer
        features:
          type: string
        debug:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        unprivileged:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        hostname:
          maxLength: 255
          type: string
        startup:
          type: string
        cores:
          type: integer
          minimum: 1
          maximum: 8192
        dev[n]:
          type: string
        digest:
          type: string
        description:
          maxLength: 8192
          type: string
        memory:
          minimum: 16
          type: integer
        onboot:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        tags:
          type: string
        timezone:
          type: string
        cpuunits:
          type: integer
          maximum: 500000
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
    POST-ClusterAcmeAccount-RB:
      type: object
      properties:
        name:
          type: string
        directory:
          pattern: ^https?://.*
          type: string
        tos_url:
          type: string
        eab-hmac-key:
          type: string
        eab-kid:
          type: string
        contact:
          type: string
    PUT-ClusterMetricsServer-RB:
      type: object
      properties:
        organization:
          type: string
        timeout:
          type: integer
        token:
          type: string
        port:
          type: integer
          minimum: 1
          maximum: 65536
        id:
          type: string
        influxdbproto:
          type: string
          enum:
          - udp
          - http
          - https
        bucket:
          type: string
        max-body-size:
          minimum: 1
          type: integer
        path:
          type: string
        verify-certificate:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        disable:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        proto:
          type: string
          enum:
          - udp
          - tcp
        delete:
          maxLength: 4096
          type: string
        server:
          type: string
        mtu:
          type: integer
          minimum: 512
          maximum: 65536
        api-path-prefix:
          type: string
        digest:
          maxLength: 64
          type: string
    POST-NodesQemuAgentSetuserpassword-RB:
      type: object
      properties:
        node:
          type: string
        username:
          type: string
        password:
          type: string
          maxLength: 1024
          minLength: 5
        crypted:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        vmid:
          type: integer
          minimum: 100
          maximum: 999999999
    DELETE-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        ip:
          type: string
        vnet:
          type: string
        mac:
          type: string
    GET-NodesReplicationLog-RB:
      type: object
      properties:
        limit:
          type: integer
        node:
          type: string
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        start:
          type: integer
    DELETE-NodesCertificatesCustom-RB:
      type: object
      properties:
        restart:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        node:
          type: string
    PUT-ClusterOptions-RB:
      type: object
      properties:
        webauthn:
          type: string
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        next-id:
          type: string
        tag-style:
          type: string
        description:
          maxLength: 65536
          type: string
        user-tag-access:
          type: string
        max_workers:
          minimum: 1
          type: integer
        migration_unsecure:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        migration:
          type: string
        mac_prefix:
          type: string
        fencing:
          type: string
          enum:
          - watchdog
          - hardware
          - both
        crs:
          type: string
        delete:
          type: string
        ha:
          type: string
        registered-tags:
          pattern: (?:(?^i:[a-z0-9_][a-z0-9_\-\+\.]*);)*(?^i:[a-z0-9_][a-z0-9_\-\+\.]*)
          type: string
        u2f:
          type: string
        notify:
          type: string
        email_from:
          type: string
        language:
          type: string
          enum:
          - ar
          - ca
          - da
          - de
          - en
          - es
          - eu
          - fa
          - fr
          - hr
          - he
          - it
          - ja
          - ka
          - kr
          - nb
          - nl
          - nn
          - pl
          - pt_BR
          - ru
          - sl
          - sv
          - tr
          - ukr
          - zh_CN
          - zh_TW
        console:
          type: string
          enum:
          - applet
          - vv
          - html5
          - xtermjs
        bwlimit:
          type: string
        http_proxy:
          pattern: http://.*
          type: string
    AccessTicket:
      type: object
      properties:
        username:
          type: string
        ticket:
          type: string
        clustername:
          type: string
        CSRFPreventionToken:
          type: string
    ClusterFirewall:
      type: array
      items:
        type: object
        properties: {}
    NodesCertificatesCustom:
      type: object
      properties:
        public-key-bits:
          type: integer
        notafter:
          type: integer
        public-key-type:
          type: string
        pem:
          type: string
        notbefore:
          type: integer
        subject:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        san:
          type: array
          items:
            type: string
        filename:
          type: string
        issuer:
          type: string
    NodesReplication-GET:
      type: array
      items:
        type: object
        properties: {}
    ClusterFirewallOptions:
      type: object
      properties:
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        ebtables:
          format: int32
          type: integer
          minimum: 0
          maximum: 1
        log_ratelimit:
          type: string
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        enable:
          type: integer
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    GET-NodesScanNfs-RB:
      type: object
      properties:
        server:
          type: string
        node:
          type: string

