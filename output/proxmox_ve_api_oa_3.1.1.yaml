openapi: 3.1.1
info:
  title: Proxmox VE
  summary: Module to access Proxmox VE Api
  description: Generated module to access all Proxmox VE Api Endpoints
  termsOfService: ""
  contact:
    name: Timo Wolf
    url: https://timo-wolf.de
    email: amna.wolf@gmail.com
  version: "0.5"
  licence:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
jsonSchemaDialect: https://spec.openapis.org/oas/3.1/dialect/base
paths:
  /access:
    get:
      tags:
      - access
      operationId: getAccess
      responses: ""
      summary: Directory index.
      description: Directory index.
    summary: access
  /access/acl:
    get:
      tags:
      - access
      operationId: getAccessAcl
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessAcl'
      summary: Get Access Control List (ACLs).
      description: Get Access Control List (ACLs).
    summary: acl
    put:
      requestBody:
        description: Update Access Control List (add or remove permissions).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessAcl-RB'
      description: Update Access Control List (add or remove permissions).
      tags:
      - access
      operationId: setAccessAcl
      responses:
        "200":
          description: OK
      summary: Update Access Control List (add or remove permissions).
  /access/domains:
    get:
      tags:
      - access
      operationId: getAccessDomains
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDomains'
      summary: Authentication domain index.
      description: Authentication domain index.
    summary: domains
    post:
      requestBody:
        description: Add an authentication server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessDomains-RB'
      description: Add an authentication server.
      tags:
      - access
      operationId: newAccessDomains
      responses:
        "200":
          description: OK
      summary: Add an authentication server.
  /access/domains/{realm}:
    get:
      parameters:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
        schema:
          type: string
          format: pve-realm
      description: Get auth server configuration.
      tags:
      - access
      operationId: getAccessDomainsByRealm
      responses: ""
      summary: Get auth server configuration.
    delete:
      parameters:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
        schema:
          type: string
          format: pve-realm
      description: Delete an authentication server.
      tags:
      - access
      operationId: removeAccessDomainsByRealm
      responses:
        "200":
          description: OK
      summary: Delete an authentication server.
    summary: realm
    put:
      parameters:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
        schema:
          type: string
          format: pve-realm
      requestBody:
        description: Update authentication server settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessDomains-RB'
      description: Update authentication server settings.
      tags:
      - access
      operationId: setAccessDomainsByRealm
      responses:
        "200":
          description: OK
      summary: Update authentication server settings.
  /access/domains/{realm}/sync:
    post:
      parameters:
      - name: realm
        in: path
        description: Authentication domain ID
        required: true
        schema:
          type: string
          format: pve-realm
      requestBody:
        description: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessDomainsSync-RB'
      description: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
      tags:
      - access
      operationId: newAccessDomainsSyncByRealm
      responses: ""
      summary: "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting."
    summary: sync
  /access/groups:
    get:
      tags:
      - access
      operationId: getAccessGroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroups-GET'
      summary: Group index.
      description: Group index.
    summary: groups
    post:
      requestBody:
        description: Create new group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessGroups-RB'
      description: Create new group.
      tags:
      - access
      operationId: newAccessGroups
      responses:
        "200":
          description: OK
      summary: Create new group.
  /access/groups/{groupid}:
    get:
      parameters:
      - name: groupid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-groupid
      description: Get group configuration.
      tags:
      - access
      operationId: getAccessGroupsByGroupid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroups'
      summary: Get group configuration.
    delete:
      parameters:
      - name: groupid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-groupid
      description: Delete group.
      tags:
      - access
      operationId: removeAccessGroupsByGroupid
      responses:
        "200":
          description: OK
      summary: Delete group.
    summary: groupid
    put:
      parameters:
      - name: groupid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-groupid
      requestBody:
        description: Update group data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessGroups-RB'
      description: Update group data.
      tags:
      - access
      operationId: setAccessGroupsByGroupid
      responses:
        "200":
          description: OK
      summary: Update group data.
  /access/openid:
    get:
      tags:
      - access
      operationId: getAccessOpenid
      responses: ""
      summary: Directory index.
      description: Directory index.
    summary: openid
  /access/openid/auth-url:
    post:
      requestBody:
        description: Get the OpenId Authorization Url for the specified realm.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessOpenidAuthurl-RB'
      description: Get the OpenId Authorization Url for the specified realm.
      tags:
      - access
      operationId: newAccessOpenidAuthurl
      responses: ""
      summary: Get the OpenId Authorization Url for the specified realm.
    summary: auth-url
  /access/openid/login:
    post:
      requestBody:
        description: ' Verify OpenID authorization code and create a ticket.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessOpenidLogin-RB'
      description: ' Verify OpenID authorization code and create a ticket.'
      tags:
      - access
      operationId: newAccessOpenidLogin
      responses: ""
      summary: ' Verify OpenID authorization code and create a ticket.'
    summary: login
  /access/password:
    put:
      requestBody:
        description: Change user password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessPassword-RB'
      description: Change user password.
      tags:
      - access
      operationId: setAccessPassword
      responses:
        "200":
          description: OK
      summary: Change user password.
    summary: password
  /access/permissions:
    get:
      requestBody:
        description: Retrieve effective permissions of given user/token.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessPermissions-RB'
      description: Retrieve effective permissions of given user/token.
      tags:
      - access
      operationId: getAccessPermissions
      responses: ""
      summary: Retrieve effective permissions of given user/token.
    summary: permissions
  /access/roles:
    get:
      tags:
      - access
      operationId: getAccessRoles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRoles-GET'
      summary: Role index.
      description: Role index.
    summary: roles
    post:
      requestBody:
        description: Create new role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessRoles-RB'
      description: Create new role.
      tags:
      - access
      operationId: newAccessRoles
      responses:
        "200":
          description: OK
      summary: Create new role.
  /access/roles/{roleid}:
    get:
      parameters:
      - name: roleid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-roleid
      description: Get role configuration.
      tags:
      - access
      operationId: getAccessRolesByRoleid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRoles'
      summary: Get role configuration.
    delete:
      parameters:
      - name: roleid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-roleid
      description: Delete role.
      tags:
      - access
      operationId: removeAccessRolesByRoleid
      responses:
        "200":
          description: OK
      summary: Delete role.
    summary: roleid
    put:
      parameters:
      - name: roleid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-roleid
      requestBody:
        description: Update an existing role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessRoles-RB'
      description: Update an existing role.
      tags:
      - access
      operationId: setAccessRolesByRoleid
      responses:
        "200":
          description: OK
      summary: Update an existing role.
  /access/tfa:
    get:
      tags:
      - access
      operationId: getAccessTfa
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET'
      summary: List TFA configurations of users.
      description: List TFA configurations of users.
    summary: tfa
  /access/tfa/{userid}:
    get:
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      description: List TFA configurations of users.
      tags:
      - access
      operationId: getAccessTfaByUserid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET-AV'
      summary: List TFA configurations of users.
    summary: userid
    post:
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      requestBody:
        description: Add a TFA entry for a user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessTfa-RB'
      description: Add a TFA entry for a user.
      tags:
      - access
      operationId: newAccessTfaByUserid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa'
      summary: Add a TFA entry for a user.
  /access/tfa/{userid}/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      description: Fetch a requested TFA entry if present.
      tags:
      - access
      operationId: getAccessTfaByUseridAndId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTfa-GET'
      summary: Fetch a requested TFA entry if present.
    delete:
      parameters:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      requestBody:
        description: Delete a TFA entry by ID.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-AccessTfa-RB'
      description: Delete a TFA entry by ID.
      tags:
      - access
      operationId: removeAccessTfaByUseridAndId
      responses:
        "200":
          description: OK
      summary: Delete a TFA entry by ID.
    summary: id
    put:
      parameters:
      - name: id
        in: path
        description: A TFA entry id.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      requestBody:
        description: Add a TFA entry for a user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessTfa-RB'
      description: Add a TFA entry for a user.
      tags:
      - access
      operationId: setAccessTfaByUseridAndId
      responses:
        "200":
          description: OK
      summary: Add a TFA entry for a user.
  /access/ticket:
    get:
      tags:
      - access
      operationId: getAccessTicket
      responses:
        "200":
          description: OK
      summary: Dummy. Useful for formatters which want to provide a login page.
      description: Dummy. Useful for formatters which want to provide a login page.
    summary: ticket
    post:
      requestBody:
        description: Create or verify authentication ticket.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessTicket-RB'
      description: Create or verify authentication ticket.
      tags:
      - access
      operationId: newAccessTicket
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTicket'
      summary: Create or verify authentication ticket.
  /access/users:
    get:
      requestBody:
        description: User index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessUsers-RB'
      description: User index.
      tags:
      - access
      operationId: getAccessUsers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsers-GET'
      summary: User index.
    summary: users
    post:
      requestBody:
        description: Create new user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessUsers-RB'
      description: Create new user.
      tags:
      - access
      operationId: newAccessUsers
      responses:
        "200":
          description: OK
      summary: Create new user.
  /access/users/{userid}:
    get:
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      description: Get user configuration.
      tags:
      - access
      operationId: getAccessUsersByUserid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsers'
      summary: Get user configuration.
    delete:
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      description: Delete user.
      tags:
      - access
      operationId: removeAccessUsersByUserid
      responses:
        "200":
          description: OK
      summary: Delete user.
    summary: userid
    put:
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      requestBody:
        description: Update user configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessUsers-RB'
      description: Update user configuration.
      tags:
      - access
      operationId: setAccessUsersByUserid
      responses:
        "200":
          description: OK
      summary: Update user configuration.
  /access/users/{userid}/tfa:
    get:
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      requestBody:
        description: Get user TFA types (Personal and Realm).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-AccessUsersTfa-RB'
      description: Get user TFA types (Personal and Realm).
      tags:
      - access
      operationId: getAccessUsersTfaByUserid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersTfa'
      summary: Get user TFA types (Personal and Realm).
    summary: tfa
  /access/users/{userid}/token:
    get:
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      description: Get user API tokens.
      tags:
      - access
      operationId: getAccessUsersTokenByUserid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-GET'
      summary: Get user API tokens.
    summary: token
  /access/users/{userid}/token/{tokenid}:
    get:
      parameters:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      description: Get specific API token information.
      tags:
      - access
      operationId: getAccessUsersTokenByUseridAndTokenid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken'
      summary: Get specific API token information.
    delete:
      parameters:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      description: Remove API token for a specific user.
      tags:
      - access
      operationId: removeAccessUsersTokenByUseridAndTokenid
      responses:
        "200":
          description: OK
      summary: Remove API token for a specific user.
    summary: tokenid
    post:
      parameters:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      requestBody:
        description: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-AccessUsersToken-RB'
      description: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
      tags:
      - access
      operationId: newAccessUsersTokenByUseridAndTokenid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-POST'
      summary: 'Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!'
    put:
      parameters:
      - name: tokenid
        in: path
        description: User-specific token identifier.
        required: true
        schema:
          type: string
          format: 
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      requestBody:
        description: Update API token for a specific user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-AccessUsersToken-RB'
      description: Update API token for a specific user.
      tags:
      - access
      operationId: setAccessUsersTokenByUseridAndTokenid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersToken-PUT'
      summary: Update API token for a specific user.
  /access/users/{userid}/unlock-tfa:
    put:
      parameters:
      - name: userid
        in: path
        description: Full User ID, in the `name@realm` format.
        required: true
        schema:
          type: string
          format: pve-userid
      description: Unlock a user's TFA authentication.
      tags:
      - access
      operationId: setAccessUsersUnlocktfaByUserid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUsersUnlocktfa'
      summary: Unlock a user's TFA authentication.
    summary: unlock-tfa
  /cluster:
    get:
      tags:
      - cluster
      operationId: getCluster
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      summary: Cluster index.
      description: Cluster index.
    summary: cluster
  /cluster/acme:
    get:
      tags:
      - cluster
      operationId: getClusterAcme
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcme'
      summary: ACMEAccount index.
      description: ACMEAccount index.
    summary: acme
  /cluster/acme/account:
    get:
      tags:
      - cluster
      operationId: getClusterAcmeAccount
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeAccount-GET'
      summary: ACMEAccount index.
      description: ACMEAccount index.
    summary: account
    post:
      requestBody:
        description: Register a new ACME account with CA.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterAcmeAccount-RB'
      description: Register a new ACME account with CA.
      tags:
      - cluster
      operationId: newClusterAcmeAccount
      responses: ""
      summary: Register a new ACME account with CA.
  /cluster/acme/account/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Return existing ACME account information.
      tags:
      - cluster
      operationId: getClusterAcmeAccountByName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeAccount'
      summary: Return existing ACME account information.
    delete:
      parameters:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Deactivate existing ACME account at CA.
      tags:
      - cluster
      operationId: removeClusterAcmeAccountByName
      responses: ""
      summary: Deactivate existing ACME account at CA.
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: ACME account config file name.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterAcmeAccount-RB'
      description: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
      tags:
      - cluster
      operationId: setClusterAcmeAccountByName
      responses: ""
      summary: 'Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.'
  /cluster/acme/challenge-schema:
    get:
      tags:
      - cluster
      operationId: getClusterAcmeChallengeschema
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeChallengeschema'
      summary: Get schema of ACME challenge types.
      description: Get schema of ACME challenge types.
    summary: challenge-schema
  /cluster/acme/directories:
    get:
      tags:
      - cluster
      operationId: getClusterAcmeDirectories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeDirectories'
      summary: Get named known ACME directory endpoints.
      description: Get named known ACME directory endpoints.
    summary: directories
  /cluster/acme/meta:
    get:
      requestBody:
        description: Retrieve ACME Directory Meta Information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmeMeta-RB'
      description: Retrieve ACME Directory Meta Information
      tags:
      - cluster
      operationId: getClusterAcmeMeta
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmeMeta'
      summary: Retrieve ACME Directory Meta Information
    summary: meta
  /cluster/acme/plugins:
    get:
      requestBody:
        description: ACME plugin index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmePlugins-RB'
      description: ACME plugin index.
      tags:
      - cluster
      operationId: getClusterAcmePlugins
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAcmePlugins'
      summary: ACME plugin index.
    summary: plugins
    post:
      requestBody:
        description: Add ACME plugin configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterAcmePlugins-RB'
      description: Add ACME plugin configuration.
      tags:
      - cluster
      operationId: newClusterAcmePlugins
      responses:
        "200":
          description: OK
      summary: Add ACME plugin configuration.
  /cluster/acme/plugins/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: Unique identifier for ACME plugin instance.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Get ACME plugin configuration.
      tags:
      - cluster
      operationId: getClusterAcmePluginsById
      responses: ""
      summary: Get ACME plugin configuration.
    delete:
      parameters:
      - name: id
        in: path
        description: Unique identifier for ACME plugin instance.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Delete ACME plugin configuration.
      tags:
      - cluster
      operationId: removeClusterAcmePluginsById
      responses:
        "200":
          description: OK
      summary: Delete ACME plugin configuration.
    summary: id
    put:
      parameters:
      - name: id
        in: path
        description: ACME Plugin ID name
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update ACME plugin configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterAcmePlugins-RB'
      description: Update ACME plugin configuration.
      tags:
      - cluster
      operationId: setClusterAcmePluginsById
      responses:
        "200":
          description: OK
      summary: Update ACME plugin configuration.
  /cluster/acme/tos:
    get:
      requestBody:
        description: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterAcmeTos-RB'
      description: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
      tags:
      - cluster
      operationId: getClusterAcmeTos
      responses: ""
      summary: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
    summary: tos
  /cluster/backup:
    get:
      tags:
      - cluster
      operationId: getClusterBackup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackup'
      summary: List vzdump backup schedule.
      description: List vzdump backup schedule.
    summary: backup
    post:
      requestBody:
        description: Create new vzdump backup job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterBackup-RB'
      description: Create new vzdump backup job.
      tags:
      - cluster
      operationId: newClusterBackup
      responses:
        "200":
          description: OK
      summary: Create new vzdump backup job.
  /cluster/backup-info:
    get:
      tags:
      - cluster
      operationId: getClusterBackupinfo
      responses: ""
      summary: Index for backup info related endpoints
      description: Index for backup info related endpoints
    summary: backup-info
  /cluster/backup-info/not-backed-up:
    get:
      tags:
      - cluster
      operationId: getClusterBackupinfoNotbackedup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackupinfoNotbackedup'
      summary: Shows all guests which are not covered by any backup job.
      description: Shows all guests which are not covered by any backup job.
    summary: not-backed-up
  /cluster/backup/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: The job ID.
        required: true
        schema:
          type: string
          format: 
      description: Read vzdump backup job definition.
      tags:
      - cluster
      operationId: getClusterBackupById
      responses: ""
      summary: Read vzdump backup job definition.
    delete:
      parameters:
      - name: id
        in: path
        description: The job ID.
        required: true
        schema:
          type: string
          format: 
      description: Delete vzdump backup job definition.
      tags:
      - cluster
      operationId: removeClusterBackupById
      responses:
        "200":
          description: OK
      summary: Delete vzdump backup job definition.
    summary: id
    put:
      parameters:
      - name: id
        in: path
        description: The job ID.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Update vzdump backup job definition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterBackup-RB'
      description: Update vzdump backup job definition.
      tags:
      - cluster
      operationId: setClusterBackupById
      responses:
        "200":
          description: OK
      summary: Update vzdump backup job definition.
  /cluster/backup/{id}/included_volumes:
    get:
      parameters:
      - name: id
        in: path
        description: The job ID.
        required: true
        schema:
          type: string
          format: 
      description: Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.
      tags:
      - cluster
      operationId: getClusterBackupIncludedvolumesById
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterBackupIncludedvolumes'
      summary: Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.
    summary: includedvolumes
  /cluster/ceph:
    get:
      tags:
      - cluster
      operationId: getClusterCeph
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCeph'
      summary: Cluster ceph index.
      description: Cluster ceph index.
    summary: ceph
  /cluster/ceph/flags:
    get:
      tags:
      - cluster
      operationId: getClusterCephFlags
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephFlags'
      summary: get the status of all ceph flags
      description: get the status of all ceph flags
    summary: flags
    put:
      requestBody:
        description: Set/Unset multiple ceph flags at once.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterCephFlags-RB'
      description: Set/Unset multiple ceph flags at once.
      tags:
      - cluster
      operationId: setClusterCephFlags
      responses: ""
      summary: Set/Unset multiple ceph flags at once.
  /cluster/ceph/flags/{flag}:
    get:
      parameters:
      - name: flag
        in: path
        description: The name of the flag name to get.
        required: true
        schema:
          type: string
          format: 
      description: Get the status of a specific ceph flag.
      tags:
      - cluster
      operationId: getClusterCephFlagsByFlag
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephFlags-GET'
      summary: Get the status of a specific ceph flag.
    summary: flag
    put:
      parameters:
      - name: flag
        in: path
        description: The ceph flag to update
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Set or clear (unset) a specific ceph flag
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterCephFlags-RB'
      description: Set or clear (unset) a specific ceph flag
      tags:
      - cluster
      operationId: setClusterCephFlagsByFlag
      responses:
        "200":
          description: OK
      summary: Set or clear (unset) a specific ceph flag
  /cluster/ceph/metadata:
    get:
      requestBody:
        description: Get ceph metadata.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterCephMetadata-RB'
      description: Get ceph metadata.
      tags:
      - cluster
      operationId: getClusterCephMetadata
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCephMetadata'
      summary: Get ceph metadata.
    summary: metadata
  /cluster/ceph/status:
    get:
      tags:
      - cluster
      operationId: getClusterCephStatus
      responses: ""
      summary: Get ceph status.
      description: Get ceph status.
    summary: status
  /cluster/config:
    get:
      tags:
      - cluster
      operationId: getClusterConfig
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfig'
      summary: Directory index.
      description: Directory index.
    summary: config
    post:
      requestBody:
        description: Generate new cluster configuration. If no links given, default to local IP address as link0.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfig-RB'
      description: Generate new cluster configuration. If no links given, default to local IP address as link0.
      tags:
      - cluster
      operationId: newClusterConfig
      responses: ""
      summary: Generate new cluster configuration. If no links given, default to local IP address as link0.
  /cluster/config/apiversion:
    get:
      tags:
      - cluster
      operationId: getClusterConfigApiversion
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigApiversion'
      summary: Return the version of the cluster join API available on this node.
      description: Return the version of the cluster join API available on this node.
    summary: apiversion
  /cluster/config/join:
    get:
      requestBody:
        description: Get information needed to join this cluster over the connected node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterConfigJoin-RB'
      description: Get information needed to join this cluster over the connected node.
      tags:
      - cluster
      operationId: getClusterConfigJoin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigJoin'
      summary: Get information needed to join this cluster over the connected node.
    summary: join
    post:
      requestBody:
        description: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfigJoin-RB'
      description: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
      tags:
      - cluster
      operationId: newClusterConfigJoin
      responses: ""
      summary: Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
  /cluster/config/nodes:
    get:
      tags:
      - cluster
      operationId: getClusterConfigNodes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigNodes-GET'
      summary: Corosync node list.
      description: Corosync node list.
    summary: nodes
  /cluster/config/nodes/{node}:
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Removes a node from the cluster configuration.
      tags:
      - cluster
      operationId: removeClusterConfigNodesByNode
      responses:
        "200":
          description: OK
      summary: Removes a node from the cluster configuration.
    summary: node
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Adds a node to the cluster configuration. This call is for internal use.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterConfigNodes-RB'
      description: Adds a node to the cluster configuration. This call is for internal use.
      tags:
      - cluster
      operationId: newClusterConfigNodesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfigNodes'
      summary: Adds a node to the cluster configuration. This call is for internal use.
  /cluster/config/qdevice:
    get:
      tags:
      - cluster
      operationId: getClusterConfigQdevice
      responses: ""
      summary: Get QDevice status
      description: Get QDevice status
    summary: qdevice
  /cluster/config/totem:
    get:
      tags:
      - cluster
      operationId: getClusterConfigTotem
      responses: ""
      summary: Get corosync totem protocol settings.
      description: Get corosync totem protocol settings.
    summary: totem
  /cluster/firewall:
    get:
      tags:
      - cluster
      operationId: getClusterFirewall
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewall'
      summary: Directory index.
      description: Directory index.
    summary: firewall
  /cluster/firewall/aliases:
    get:
      tags:
      - cluster
      operationId: getClusterFirewallAliases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallAliases'
      summary: List aliases
      description: List aliases
    summary: aliases
    post:
      requestBody:
        description: Create IP or Network Alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallAliases-RB'
      description: Create IP or Network Alias.
      tags:
      - cluster
      operationId: newClusterFirewallAliases
      responses:
        "200":
          description: OK
      summary: Create IP or Network Alias.
  /cluster/firewall/aliases/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      description: Read alias.
      tags:
      - cluster
      operationId: getClusterFirewallAliasesByName
      responses: ""
      summary: Read alias.
    delete:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Remove IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallAliases-RB'
      description: Remove IP or Network alias.
      tags:
      - cluster
      operationId: removeClusterFirewallAliasesByName
      responses:
        "200":
          description: OK
      summary: Remove IP or Network alias.
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Update IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallAliases-RB'
      description: Update IP or Network alias.
      tags:
      - cluster
      operationId: setClusterFirewallAliasesByName
      responses:
        "200":
          description: OK
      summary: Update IP or Network alias.
  /cluster/firewall/groups:
    get:
      tags:
      - cluster
      operationId: getClusterFirewallGroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups-GET'
      summary: List security groups.
      description: List security groups.
    summary: groups
    post:
      requestBody:
        description: Create new security group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallGroups-RB'
      description: Create new security group.
      tags:
      - cluster
      operationId: newClusterFirewallGroups
      responses:
        "200":
          description: OK
      summary: Create new security group.
  /cluster/firewall/groups/{group}:
    get:
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      description: List rules.
      tags:
      - cluster
      operationId: getClusterFirewallGroupsByGroup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups-GET-AV'
      summary: List rules.
    delete:
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      description: Delete security group.
      tags:
      - cluster
      operationId: removeClusterFirewallGroupsByGroup
      responses:
        "200":
          description: OK
      summary: Delete security group.
    summary: group
    post:
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallGroups-RB'
      description: Create new rule.
      tags:
      - cluster
      operationId: newClusterFirewallGroupsByGroup
      responses:
        "200":
          description: OK
      summary: Create new rule.
  /cluster/firewall/groups/{group}/{pos}:
    get:
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      description: Get single rule data.
      tags:
      - cluster
      operationId: getClusterFirewallGroupsByGroupAndPos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallGroups'
      summary: Get single rule data.
    delete:
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallGroups-RB'
      description: Delete rule.
      tags:
      - cluster
      operationId: removeClusterFirewallGroupsByGroupAndPos
      responses:
        "200":
          description: OK
      summary: Delete rule.
    summary: pos
    put:
      parameters:
      - name: group
        in: path
        description: Security Group name.
        required: true
        schema:
          type: string
          format: 
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallGroups-RB'
      description: Modify rule data.
      tags:
      - cluster
      operationId: setClusterFirewallGroupsByGroupAndPos
      responses:
        "200":
          description: OK
      summary: Modify rule data.
  /cluster/firewall/ipset:
    get:
      tags:
      - cluster
      operationId: getClusterFirewallIpset
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallIpset'
      summary: List IPSets
      description: List IPSets
    summary: ipset
    post:
      requestBody:
        description: Create new IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallIpset-RB'
      description: Create new IPSet
      tags:
      - cluster
      operationId: newClusterFirewallIpset
      responses:
        "200":
          description: OK
      summary: Create new IPSet
  /cluster/firewall/ipset/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      description: List IPSet content
      tags:
      - cluster
      operationId: getClusterFirewallIpsetByName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallIpset-GET'
      summary: List IPSet content
    delete:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Delete IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallIpset-RB'
      description: Delete IPSet
      tags:
      - cluster
      operationId: removeClusterFirewallIpsetByName
      responses:
        "200":
          description: OK
      summary: Delete IPSet
    summary: name
    post:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Add IP or Network to IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallIpset-RB'
      description: Add IP or Network to IPSet.
      tags:
      - cluster
      operationId: newClusterFirewallIpsetByName
      responses:
        "200":
          description: OK
      summary: Add IP or Network to IPSet.
  /cluster/firewall/ipset/{name}/{cidr}:
    get:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      description: Read IP or Network settings from IPSet.
      tags:
      - cluster
      operationId: getClusterFirewallIpsetByNameAndCidr
      responses: ""
      summary: Read IP or Network settings from IPSet.
    delete:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Remove IP or Network from IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallIpset-RB'
      description: Remove IP or Network from IPSet.
      tags:
      - cluster
      operationId: removeClusterFirewallIpsetByNameAndCidr
      responses:
        "200":
          description: OK
      summary: Remove IP or Network from IPSet.
    summary: cidr
    put:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Update IP or Network settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallIpset-RB'
      description: Update IP or Network settings
      tags:
      - cluster
      operationId: setClusterFirewallIpsetByNameAndCidr
      responses:
        "200":
          description: OK
      summary: Update IP or Network settings
  /cluster/firewall/macros:
    get:
      tags:
      - cluster
      operationId: getClusterFirewallMacros
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallMacros'
      summary: List available macros
      description: List available macros
    summary: macros
  /cluster/firewall/options:
    get:
      tags:
      - cluster
      operationId: getClusterFirewallOptions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallOptions'
      summary: Get Firewall options.
      description: Get Firewall options.
    summary: options
    put:
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallOptions-RB'
      description: Set Firewall options.
      tags:
      - cluster
      operationId: setClusterFirewallOptions
      responses:
        "200":
          description: OK
      summary: Set Firewall options.
  /cluster/firewall/refs:
    get:
      requestBody:
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterFirewallRefs-RB'
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      tags:
      - cluster
      operationId: getClusterFirewallRefs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRefs'
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
    summary: refs
  /cluster/firewall/rules:
    get:
      tags:
      - cluster
      operationId: getClusterFirewallRules
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRules-GET'
      summary: List rules.
      description: List rules.
    summary: rules
    post:
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterFirewallRules-RB'
      description: Create new rule.
      tags:
      - cluster
      operationId: newClusterFirewallRules
      responses:
        "200":
          description: OK
      summary: Create new rule.
  /cluster/firewall/rules/{pos}:
    get:
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      description: Get single rule data.
      tags:
      - cluster
      operationId: getClusterFirewallRulesByPos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterFirewallRules'
      summary: Get single rule data.
    delete:
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterFirewallRules-RB'
      description: Delete rule.
      tags:
      - cluster
      operationId: removeClusterFirewallRulesByPos
      responses:
        "200":
          description: OK
      summary: Delete rule.
    summary: pos
    put:
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterFirewallRules-RB'
      description: Modify rule data.
      tags:
      - cluster
      operationId: setClusterFirewallRulesByPos
      responses:
        "200":
          description: OK
      summary: Modify rule data.
  /cluster/ha:
    get:
      tags:
      - cluster
      operationId: getClusterHa
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHa'
      summary: Directory index.
      description: Directory index.
    summary: ha
  /cluster/ha/groups:
    get:
      tags:
      - cluster
      operationId: getClusterHaGroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaGroups'
      summary: Get HA groups.
      description: Get HA groups.
    summary: groups
    post:
      requestBody:
        description: Create a new HA group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaGroups-RB'
      description: Create a new HA group.
      tags:
      - cluster
      operationId: newClusterHaGroups
      responses:
        "200":
          description: OK
      summary: Create a new HA group.
  /cluster/ha/groups/{group}:
    get:
      parameters:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Read ha group configuration.
      tags:
      - cluster
      operationId: getClusterHaGroupsByGroup
      responses: ""
      summary: Read ha group configuration.
    delete:
      parameters:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Delete ha group configuration.
      tags:
      - cluster
      operationId: removeClusterHaGroupsByGroup
      responses:
        "200":
          description: OK
      summary: Delete ha group configuration.
    summary: group
    put:
      parameters:
      - name: group
        in: path
        description: The HA group identifier.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update ha group configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterHaGroups-RB'
      description: Update ha group configuration.
      tags:
      - cluster
      operationId: setClusterHaGroupsByGroup
      responses:
        "200":
          description: OK
      summary: Update ha group configuration.
  /cluster/ha/resources:
    get:
      requestBody:
        description: List HA resources.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterHaResources-RB'
      description: List HA resources.
      tags:
      - cluster
      operationId: getClusterHaResources
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaResources-GET'
      summary: List HA resources.
    summary: resources
    post:
      requestBody:
        description: Create a new HA resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResources-RB'
      description: Create a new HA resource.
      tags:
      - cluster
      operationId: newClusterHaResources
      responses:
        "200":
          description: OK
      summary: Create a new HA resource.
  /cluster/ha/resources/{sid}:
    get:
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      description: Read resource configuration.
      tags:
      - cluster
      operationId: getClusterHaResourcesBySid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaResources'
      summary: Read resource configuration.
    delete:
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      description: Delete resource configuration.
      tags:
      - cluster
      operationId: removeClusterHaResourcesBySid
      responses:
        "200":
          description: OK
      summary: Delete resource configuration.
    summary: sid
    put:
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      requestBody:
        description: Update resource configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterHaResources-RB'
      description: Update resource configuration.
      tags:
      - cluster
      operationId: setClusterHaResourcesBySid
      responses:
        "200":
          description: OK
      summary: Update resource configuration.
  /cluster/ha/resources/{sid}/migrate:
    post:
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      requestBody:
        description: Request resource migration (online) to another node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResourcesMigrate-RB'
      description: Request resource migration (online) to another node.
      tags:
      - cluster
      operationId: newClusterHaResourcesMigrateBySid
      responses:
        "200":
          description: OK
      summary: Request resource migration (online) to another node.
    summary: migrate
  /cluster/ha/resources/{sid}/relocate:
    post:
      parameters:
      - name: sid
        in: path
        description: 'HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).'
        required: true
        schema:
          type: string
          format: pve-ha-resource-or-vm-id
      requestBody:
        description: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterHaResourcesRelocate-RB'
      description: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
      tags:
      - cluster
      operationId: newClusterHaResourcesRelocateBySid
      responses:
        "200":
          description: OK
      summary: Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.
    summary: relocate
  /cluster/ha/status:
    get:
      tags:
      - cluster
      operationId: getClusterHaStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaStatus'
      summary: Directory index.
      description: Directory index.
    summary: status
  /cluster/ha/status/current:
    get:
      tags:
      - cluster
      operationId: getClusterHaStatusCurrent
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterHaStatusCurrent'
      summary: Get HA manger status.
      description: Get HA manger status.
    summary: current
  /cluster/ha/status/manager_status:
    get:
      tags:
      - cluster
      operationId: getClusterHaStatusManagerstatus
      responses: ""
      summary: Get full HA manger status, including LRM status.
      description: Get full HA manger status, including LRM status.
    summary: managerstatus
  /cluster/jobs:
    get:
      tags:
      - cluster
      operationId: getClusterJobs
      responses: ""
      summary: Index for jobs related endpoints.
      description: Index for jobs related endpoints.
    summary: jobs
  /cluster/jobs/realm-sync:
    get:
      tags:
      - cluster
      operationId: getClusterJobsRealmsync
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterJobsRealmsync'
      summary: List configured realm-sync-jobs.
      description: List configured realm-sync-jobs.
    summary: realm-sync
  /cluster/jobs/realm-sync/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Read realm-sync job definition.
      tags:
      - cluster
      operationId: getClusterJobsRealmsyncById
      responses: ""
      summary: Read realm-sync job definition.
    delete:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Delete realm-sync job definition.
      tags:
      - cluster
      operationId: removeClusterJobsRealmsyncById
      responses:
        "200":
          description: OK
      summary: Delete realm-sync job definition.
    summary: id
    post:
      parameters:
      - name: id
        in: path
        description: The ID of the job.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Create new realm-sync job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterJobsRealmsync-RB'
      description: Create new realm-sync job.
      tags:
      - cluster
      operationId: newClusterJobsRealmsyncById
      responses:
        "200":
          description: OK
      summary: Create new realm-sync job.
    put:
      parameters:
      - name: id
        in: path
        description: The ID of the job.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update realm-sync job definition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterJobsRealmsync-RB'
      description: Update realm-sync job definition.
      tags:
      - cluster
      operationId: setClusterJobsRealmsyncById
      responses:
        "200":
          description: OK
      summary: Update realm-sync job definition.
  /cluster/jobs/schedule-analyze:
    get:
      requestBody:
        description: Returns a list of future schedule runtimes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterJobsScheduleanalyze-RB'
      description: Returns a list of future schedule runtimes.
      tags:
      - cluster
      operationId: getClusterJobsScheduleanalyze
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterJobsScheduleanalyze'
      summary: Returns a list of future schedule runtimes.
    summary: schedule-analyze
  /cluster/log:
    get:
      requestBody:
        description: Read cluster log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterLog-RB'
      description: Read cluster log
      tags:
      - cluster
      operationId: getClusterLog
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterLog'
      summary: Read cluster log
    summary: log
  /cluster/mapping:
    get:
      tags:
      - cluster
      operationId: getClusterMapping
      responses: ""
      summary: List resource types.
      description: List resource types.
    summary: mapping
  /cluster/mapping/dir:
    get:
      requestBody:
        description: List directory mapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMappingDir-RB'
      description: List directory mapping
      tags:
      - cluster
      operationId: getClusterMappingDir
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMappingDir'
      summary: List directory mapping
    summary: dir
    post:
      requestBody:
        description: Create a new directory mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMappingDir-RB'
      description: Create a new directory mapping.
      tags:
      - cluster
      operationId: newClusterMappingDir
      responses:
        "200":
          description: OK
      summary: Create a new directory mapping.
  /cluster/mapping/dir/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Get directory mapping.
      tags:
      - cluster
      operationId: getClusterMappingDirById
      responses: ""
      summary: Get directory mapping.
    delete:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove directory mapping.
      tags:
      - cluster
      operationId: removeClusterMappingDirById
      responses:
        "200":
          description: OK
      summary: Remove directory mapping.
    summary: id
    put:
      parameters:
      - name: id
        in: path
        description: The ID of the directory mapping
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update a directory mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMappingDir-RB'
      description: Update a directory mapping.
      tags:
      - cluster
      operationId: setClusterMappingDirById
      responses:
        "200":
          description: OK
      summary: Update a directory mapping.
  /cluster/mapping/pci:
    get:
      requestBody:
        description: List PCI Hardware Mapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMappingPci-RB'
      description: List PCI Hardware Mapping
      tags:
      - cluster
      operationId: getClusterMappingPci
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMappingPci'
      summary: List PCI Hardware Mapping
    summary: pci
    post:
      requestBody:
        description: Create a new hardware mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMappingPci-RB'
      description: Create a new hardware mapping.
      tags:
      - cluster
      operationId: newClusterMappingPci
      responses:
        "200":
          description: OK
      summary: Create a new hardware mapping.
  /cluster/mapping/pci/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Get PCI Mapping.
      tags:
      - cluster
      operationId: getClusterMappingPciById
      responses: ""
      summary: Get PCI Mapping.
    delete:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove Hardware Mapping.
      tags:
      - cluster
      operationId: removeClusterMappingPciById
      responses:
        "200":
          description: OK
      summary: Remove Hardware Mapping.
    summary: id
    put:
      parameters:
      - name: id
        in: path
        description: The ID of the logical PCI mapping.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update a hardware mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMappingPci-RB'
      description: Update a hardware mapping.
      tags:
      - cluster
      operationId: setClusterMappingPciById
      responses:
        "200":
          description: OK
      summary: Update a hardware mapping.
  /cluster/mapping/usb:
    get:
      requestBody:
        description: List USB Hardware Mappings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMappingUsb-RB'
      description: List USB Hardware Mappings
      tags:
      - cluster
      operationId: getClusterMappingUsb
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMappingUsb'
      summary: List USB Hardware Mappings
    summary: usb
    post:
      requestBody:
        description: Create a new hardware mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMappingUsb-RB'
      description: Create a new hardware mapping.
      tags:
      - cluster
      operationId: newClusterMappingUsb
      responses:
        "200":
          description: OK
      summary: Create a new hardware mapping.
  /cluster/mapping/usb/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Get USB Mapping.
      tags:
      - cluster
      operationId: getClusterMappingUsbById
      responses: ""
      summary: Get USB Mapping.
    delete:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove Hardware Mapping.
      tags:
      - cluster
      operationId: removeClusterMappingUsbById
      responses:
        "200":
          description: OK
      summary: Remove Hardware Mapping.
    summary: id
    put:
      parameters:
      - name: id
        in: path
        description: The ID of the logical USB mapping.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update a hardware mapping.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMappingUsb-RB'
      description: Update a hardware mapping.
      tags:
      - cluster
      operationId: setClusterMappingUsbById
      responses:
        "200":
          description: OK
      summary: Update a hardware mapping.
  /cluster/metrics:
    get:
      tags:
      - cluster
      operationId: getClusterMetrics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetrics'
      summary: Metrics index.
      description: Metrics index.
    summary: metrics
  /cluster/metrics/export:
    get:
      requestBody:
        description: Retrieve metrics of the cluster.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterMetricsExport-RB'
      description: Retrieve metrics of the cluster.
      tags:
      - cluster
      operationId: getClusterMetricsExport
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsExport'
      summary: Retrieve metrics of the cluster.
    summary: export
  /cluster/metrics/server:
    get:
      tags:
      - cluster
      operationId: getClusterMetricsServer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsServer'
      summary: List configured metric servers.
      description: List configured metric servers.
    summary: server
  /cluster/metrics/server/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Read metric server configuration.
      tags:
      - cluster
      operationId: getClusterMetricsServerById
      responses: ""
      summary: Read metric server configuration.
    delete:
      parameters:
      - name: id
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove Metric server.
      tags:
      - cluster
      operationId: removeClusterMetricsServerById
      responses:
        "200":
          description: OK
      summary: Remove Metric server.
    summary: id
    post:
      parameters:
      - name: id
        in: path
        description: The ID of the entry.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Create a new external metric server config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterMetricsServer-RB'
      description: Create a new external metric server config
      tags:
      - cluster
      operationId: newClusterMetricsServerById
      responses:
        "200":
          description: OK
      summary: Create a new external metric server config
    put:
      parameters:
      - name: id
        in: path
        description: The ID of the entry.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update metric server configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterMetricsServer-RB'
      description: Update metric server configuration.
      tags:
      - cluster
      operationId: setClusterMetricsServerById
      responses:
        "200":
          description: OK
      summary: Update metric server configuration.
  /cluster/nextid:
    get:
      requestBody:
        description: Get next free VMID. Pass a VMID to assert that its free (at time of check).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterNextid-RB'
      description: Get next free VMID. Pass a VMID to assert that its free (at time of check).
      tags:
      - cluster
      operationId: getClusterNextid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNextid'
      summary: Get next free VMID. Pass a VMID to assert that its free (at time of check).
    summary: nextid
  /cluster/notifications:
    get:
      tags:
      - cluster
      operationId: getClusterNotifications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotifications'
      summary: Index for notification-related API endpoints.
      description: Index for notification-related API endpoints.
    summary: notifications
  /cluster/notifications/endpoints:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsEndpoints
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpoints'
      summary: Index for all available endpoint types.
      description: Index for all available endpoint types.
    summary: endpoints
  /cluster/notifications/endpoints/gotify:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsGotify
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsGotify-GET'
      summary: Returns a list of all gotify endpoints
      description: Returns a list of all gotify endpoints
    summary: gotify
    post:
      requestBody:
        description: Create a new gotify endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsGotify-RB'
      description: Create a new gotify endpoint
      tags:
      - cluster
      operationId: newClusterNotificationsEndpointsGotify
      responses:
        "200":
          description: OK
      summary: Create a new gotify endpoint
  /cluster/notifications/endpoints/gotify/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: Name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Return a specific gotify endpoint
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsGotifyByName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsGotify'
      summary: Return a specific gotify endpoint
    delete:
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove gotify endpoint
      tags:
      - cluster
      operationId: removeClusterNotificationsEndpointsGotifyByName
      responses:
        "200":
          description: OK
      summary: Remove gotify endpoint
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update existing gotify endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsGotify-RB'
      description: Update existing gotify endpoint
      tags:
      - cluster
      operationId: setClusterNotificationsEndpointsGotifyByName
      responses:
        "200":
          description: OK
      summary: Update existing gotify endpoint
  /cluster/notifications/endpoints/sendmail:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsSendmail
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSendmail-GET'
      summary: Returns a list of all sendmail endpoints
      description: Returns a list of all sendmail endpoints
    summary: sendmail
    post:
      requestBody:
        description: Create a new sendmail endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsSendmail-RB'
      description: Create a new sendmail endpoint
      tags:
      - cluster
      operationId: newClusterNotificationsEndpointsSendmail
      responses:
        "200":
          description: OK
      summary: Create a new sendmail endpoint
  /cluster/notifications/endpoints/sendmail/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Return a specific sendmail endpoint
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsSendmailByName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSendmail'
      summary: Return a specific sendmail endpoint
    delete:
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove sendmail endpoint
      tags:
      - cluster
      operationId: removeClusterNotificationsEndpointsSendmailByName
      responses:
        "200":
          description: OK
      summary: Remove sendmail endpoint
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update existing sendmail endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsSendmail-RB'
      description: Update existing sendmail endpoint
      tags:
      - cluster
      operationId: setClusterNotificationsEndpointsSendmailByName
      responses:
        "200":
          description: OK
      summary: Update existing sendmail endpoint
  /cluster/notifications/endpoints/smtp:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsSmtp
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSmtp-GET'
      summary: Returns a list of all smtp endpoints
      description: Returns a list of all smtp endpoints
    summary: smtp
    post:
      requestBody:
        description: Create a new smtp endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsSmtp-RB'
      description: Create a new smtp endpoint
      tags:
      - cluster
      operationId: newClusterNotificationsEndpointsSmtp
      responses:
        "200":
          description: OK
      summary: Create a new smtp endpoint
  /cluster/notifications/endpoints/smtp/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Return a specific smtp endpoint
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsSmtpByName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsSmtp'
      summary: Return a specific smtp endpoint
    delete:
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove smtp endpoint
      tags:
      - cluster
      operationId: removeClusterNotificationsEndpointsSmtpByName
      responses:
        "200":
          description: OK
      summary: Remove smtp endpoint
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update existing smtp endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsSmtp-RB'
      description: Update existing smtp endpoint
      tags:
      - cluster
      operationId: setClusterNotificationsEndpointsSmtpByName
      responses:
        "200":
          description: OK
      summary: Update existing smtp endpoint
  /cluster/notifications/endpoints/webhook:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsWebhook
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsWebhook-GET'
      summary: Returns a list of all webhook endpoints
      description: Returns a list of all webhook endpoints
    summary: webhook
    post:
      requestBody:
        description: Create a new webhook endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsEndpointsWebhook-RB'
      description: Create a new webhook endpoint
      tags:
      - cluster
      operationId: newClusterNotificationsEndpointsWebhook
      responses:
        "200":
          description: OK
      summary: Create a new webhook endpoint
  /cluster/notifications/endpoints/webhook/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: Name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Return a specific webhook endpoint
      tags:
      - cluster
      operationId: getClusterNotificationsEndpointsWebhookByName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsEndpointsWebhook'
      summary: Return a specific webhook endpoint
    delete:
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove webhook endpoint
      tags:
      - cluster
      operationId: removeClusterNotificationsEndpointsWebhookByName
      responses:
        "200":
          description: OK
      summary: Remove webhook endpoint
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: The name of the endpoint.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update existing webhook endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsEndpointsWebhook-RB'
      description: Update existing webhook endpoint
      tags:
      - cluster
      operationId: setClusterNotificationsEndpointsWebhookByName
      responses:
        "200":
          description: OK
      summary: Update existing webhook endpoint
  /cluster/notifications/matcher-field-values:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsMatcherfieldvalues
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatcherfieldvalues'
      summary: Returns known notification metadata fields and their known values
      description: Returns known notification metadata fields and their known values
    summary: matcher-field-values
  /cluster/notifications/matcher-fields:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsMatcherfields
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatcherfields'
      summary: Returns known notification metadata fields
      description: Returns known notification metadata fields
    summary: matcher-fields
  /cluster/notifications/matchers:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsMatchers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatchers-GET'
      summary: Returns a list of all matchers
      description: Returns a list of all matchers
    summary: matchers
    post:
      requestBody:
        description: Create a new matcher
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterNotificationsMatchers-RB'
      description: Create a new matcher
      tags:
      - cluster
      operationId: newClusterNotificationsMatchers
      responses:
        "200":
          description: OK
      summary: Create a new matcher
  /cluster/notifications/matchers/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Return a specific matcher
      tags:
      - cluster
      operationId: getClusterNotificationsMatchersByName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsMatchers'
      summary: Return a specific matcher
    delete:
      parameters:
      - name: name
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-configid
      description: Remove matcher
      tags:
      - cluster
      operationId: removeClusterNotificationsMatchersByName
      responses:
        "200":
          description: OK
      summary: Remove matcher
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: Name of the matcher.
        required: true
        schema:
          type: string
          format: pve-configid
      requestBody:
        description: Update existing matcher
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterNotificationsMatchers-RB'
      description: Update existing matcher
      tags:
      - cluster
      operationId: setClusterNotificationsMatchersByName
      responses:
        "200":
          description: OK
      summary: Update existing matcher
  /cluster/notifications/targets:
    get:
      tags:
      - cluster
      operationId: getClusterNotificationsTargets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotificationsTargets'
      summary: Returns a list of all entities that can be used as notification targets.
      description: Returns a list of all entities that can be used as notification targets.
    summary: targets
  /cluster/notifications/targets/{name}/test:
    post:
      parameters:
      - name: name
        in: path
        description: Name of the target.
        required: true
        schema:
          type: string
          format: pve-configid
      description: Send a test notification to a provided target.
      tags:
      - cluster
      operationId: newClusterNotificationsTargetsTestByName
      responses:
        "200":
          description: OK
      summary: Send a test notification to a provided target.
    summary: test
  /cluster/options:
    get:
      tags:
      - cluster
      operationId: getClusterOptions
      responses: ""
      summary: Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.
      description: Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.
    summary: options
    put:
      requestBody:
        description: Set datacenter options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterOptions-RB'
      description: Set datacenter options.
      tags:
      - cluster
      operationId: setClusterOptions
      responses:
        "200":
          description: OK
      summary: Set datacenter options.
  /cluster/replication:
    get:
      tags:
      - cluster
      operationId: getClusterReplication
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterReplication'
      summary: List replication jobs.
      description: List replication jobs.
    summary: replication
    post:
      requestBody:
        description: Create a new replication job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterReplication-RB'
      description: Create a new replication job
      tags:
      - cluster
      operationId: newClusterReplication
      responses:
        "200":
          description: OK
      summary: Create a new replication job
  /cluster/replication/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      description: Read replication job configuration.
      tags:
      - cluster
      operationId: getClusterReplicationById
      responses: ""
      summary: Read replication job configuration.
    delete:
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      requestBody:
        description: Mark replication job for removal.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterReplication-RB'
      description: Mark replication job for removal.
      tags:
      - cluster
      operationId: removeClusterReplicationById
      responses:
        "200":
          description: OK
      summary: Mark replication job for removal.
    summary: id
    put:
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      requestBody:
        description: Update replication job configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterReplication-RB'
      description: Update replication job configuration.
      tags:
      - cluster
      operationId: setClusterReplicationById
      responses:
        "200":
          description: OK
      summary: Update replication job configuration.
  /cluster/resources:
    get:
      requestBody:
        description: Resources index (cluster wide).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterResources-RB'
      description: Resources index (cluster wide).
      tags:
      - cluster
      operationId: getClusterResources
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResources'
      summary: Resources index (cluster wide).
    summary: resources
  /cluster/sdn:
    get:
      tags:
      - cluster
      operationId: getClusterSdn
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdn'
      summary: Directory index.
      description: Directory index.
    summary: sdn
    put:
      tags:
      - cluster
      operationId: setClusterSdn
      responses: ""
      summary: Apply sdn controller changes && reload.
      description: Apply sdn controller changes && reload.
  /cluster/sdn/controllers:
    get:
      requestBody:
        description: SDN controllers index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnControllers-RB'
      description: SDN controllers index.
      tags:
      - cluster
      operationId: getClusterSdnControllers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnControllers'
      summary: SDN controllers index.
    summary: controllers
    post:
      requestBody:
        description: Create a new sdn controller object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnControllers-RB'
      description: Create a new sdn controller object.
      tags:
      - cluster
      operationId: newClusterSdnControllers
      responses:
        "200":
          description: OK
      summary: Create a new sdn controller object.
  /cluster/sdn/controllers/{controller}:
    get:
      parameters:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-controller-id
      requestBody:
        description: Read sdn controller configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnControllers-RB'
      description: Read sdn controller configuration.
      tags:
      - cluster
      operationId: getClusterSdnControllersByController
      responses: ""
      summary: Read sdn controller configuration.
    delete:
      parameters:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-controller-id
      description: Delete sdn controller object configuration.
      tags:
      - cluster
      operationId: removeClusterSdnControllersByController
      responses:
        "200":
          description: OK
      summary: Delete sdn controller object configuration.
    summary: controller
    put:
      parameters:
      - name: controller
        in: path
        description: The SDN controller object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-controller-id
      requestBody:
        description: Update sdn controller object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnControllers-RB'
      description: Update sdn controller object configuration.
      tags:
      - cluster
      operationId: setClusterSdnControllersByController
      responses:
        "200":
          description: OK
      summary: Update sdn controller object configuration.
  /cluster/sdn/dns:
    get:
      requestBody:
        description: SDN dns index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnDns-RB'
      description: SDN dns index.
      tags:
      - cluster
      operationId: getClusterSdnDns
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnDns'
      summary: SDN dns index.
    summary: dns
    post:
      requestBody:
        description: Create a new sdn dns object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnDns-RB'
      description: Create a new sdn dns object.
      tags:
      - cluster
      operationId: newClusterSdnDns
      responses:
        "200":
          description: OK
      summary: Create a new sdn dns object.
  /cluster/sdn/dns/{dns}:
    get:
      parameters:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-dns-id
      description: Read sdn dns configuration.
      tags:
      - cluster
      operationId: getClusterSdnDnsByDns
      responses: ""
      summary: Read sdn dns configuration.
    delete:
      parameters:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-dns-id
      description: Delete sdn dns object configuration.
      tags:
      - cluster
      operationId: removeClusterSdnDnsByDns
      responses:
        "200":
          description: OK
      summary: Delete sdn dns object configuration.
    summary: dns
    put:
      parameters:
      - name: dns
        in: path
        description: The SDN dns object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-dns-id
      requestBody:
        description: Update sdn dns object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnDns-RB'
      description: Update sdn dns object configuration.
      tags:
      - cluster
      operationId: setClusterSdnDnsByDns
      responses:
        "200":
          description: OK
      summary: Update sdn dns object configuration.
  /cluster/sdn/ipams:
    get:
      requestBody:
        description: SDN ipams index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnIpams-RB'
      description: SDN ipams index.
      tags:
      - cluster
      operationId: getClusterSdnIpams
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnIpams'
      summary: SDN ipams index.
    summary: ipams
    post:
      requestBody:
        description: Create a new sdn ipam object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnIpams-RB'
      description: Create a new sdn ipam object.
      tags:
      - cluster
      operationId: newClusterSdnIpams
      responses:
        "200":
          description: OK
      summary: Create a new sdn ipam object.
  /cluster/sdn/ipams/{ipam}:
    get:
      parameters:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-ipam-id
      description: Read sdn ipam configuration.
      tags:
      - cluster
      operationId: getClusterSdnIpamsByIpam
      responses: ""
      summary: Read sdn ipam configuration.
    delete:
      parameters:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-ipam-id
      description: Delete sdn ipam object configuration.
      tags:
      - cluster
      operationId: removeClusterSdnIpamsByIpam
      responses:
        "200":
          description: OK
      summary: Delete sdn ipam object configuration.
    summary: ipam
    put:
      parameters:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-ipam-id
      requestBody:
        description: Update sdn ipam object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnIpams-RB'
      description: Update sdn ipam object configuration.
      tags:
      - cluster
      operationId: setClusterSdnIpamsByIpam
      responses:
        "200":
          description: OK
      summary: Update sdn ipam object configuration.
  /cluster/sdn/ipams/{ipam}/status:
    get:
      parameters:
      - name: ipam
        in: path
        description: The SDN ipam object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-ipam-id
      description: List PVE IPAM Entries
      tags:
      - cluster
      operationId: getClusterSdnIpamsStatusByIpam
      responses: ""
      summary: List PVE IPAM Entries
    summary: status
  /cluster/sdn/vnets:
    get:
      requestBody:
        description: SDN vnets index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnets-RB'
      description: SDN vnets index.
      tags:
      - cluster
      operationId: getClusterSdnVnets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnets'
      summary: SDN vnets index.
    summary: vnets
    post:
      requestBody:
        description: Create a new sdn vnet object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnets-RB'
      description: Create a new sdn vnet object.
      tags:
      - cluster
      operationId: newClusterSdnVnets
      responses:
        "200":
          description: OK
      summary: Create a new sdn vnet object.
  /cluster/sdn/vnets/{vnet}:
    get:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Read sdn vnet configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnets-RB'
      description: Read sdn vnet configuration.
      tags:
      - cluster
      operationId: getClusterSdnVnetsByVnet
      responses: ""
      summary: Read sdn vnet configuration.
    delete:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      description: Delete sdn vnet object configuration.
      tags:
      - cluster
      operationId: removeClusterSdnVnetsByVnet
      responses:
        "200":
          description: OK
      summary: Delete sdn vnet object configuration.
    summary: vnet
    put:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Update sdn vnet object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnets-RB'
      description: Update sdn vnet object configuration.
      tags:
      - cluster
      operationId: setClusterSdnVnetsByVnet
      responses:
        "200":
          description: OK
      summary: Update sdn vnet object configuration.
  /cluster/sdn/vnets/{vnet}/firewall:
    get:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      description: Directory index.
      tags:
      - cluster
      operationId: getClusterSdnVnetsFirewallByVnet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewall'
      summary: Directory index.
    summary: firewall
  /cluster/sdn/vnets/{vnet}/firewall/options:
    get:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      description: Get vnet firewall options.
      tags:
      - cluster
      operationId: getClusterSdnVnetsFirewallOptionsByVnet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallOptions'
      summary: Get vnet firewall options.
    summary: options
    put:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsFirewallOptions-RB'
      description: Set Firewall options.
      tags:
      - cluster
      operationId: setClusterSdnVnetsFirewallOptionsByVnet
      responses:
        "200":
          description: OK
      summary: Set Firewall options.
  /cluster/sdn/vnets/{vnet}/firewall/rules:
    get:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      description: List rules.
      tags:
      - cluster
      operationId: getClusterSdnVnetsFirewallRulesByVnet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallRules-GET'
      summary: List rules.
    summary: rules
    post:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsFirewallRules-RB'
      description: Create new rule.
      tags:
      - cluster
      operationId: newClusterSdnVnetsFirewallRulesByVnet
      responses:
        "200":
          description: OK
      summary: Create new rule.
  /cluster/sdn/vnets/{vnet}/firewall/rules/{pos}:
    get:
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      description: Get single rule data.
      tags:
      - cluster
      operationId: getClusterSdnVnetsFirewallRulesByVnetAndPos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsFirewallRules'
      summary: Get single rule data.
    delete:
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterSdnVnetsFirewallRules-RB'
      description: Delete rule.
      tags:
      - cluster
      operationId: removeClusterSdnVnetsFirewallRulesByVnetAndPos
      responses:
        "200":
          description: OK
      summary: Delete rule.
    summary: pos
    put:
      parameters:
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsFirewallRules-RB'
      description: Modify rule data.
      tags:
      - cluster
      operationId: setClusterSdnVnetsFirewallRulesByVnetAndPos
      responses:
        "200":
          description: OK
      summary: Modify rule data.
  /cluster/sdn/vnets/{vnet}/ips:
    delete:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Delete IP Mappings in a VNet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-ClusterSdnVnetsIps-RB'
      description: Delete IP Mappings in a VNet
      tags:
      - cluster
      operationId: removeClusterSdnVnetsIpsByVnet
      responses:
        "200":
          description: OK
      summary: Delete IP Mappings in a VNet
    summary: ips
    post:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Create IP Mapping in a VNet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsIps-RB'
      description: Create IP Mapping in a VNet
      tags:
      - cluster
      operationId: newClusterSdnVnetsIpsByVnet
      responses:
        "200":
          description: OK
      summary: Create IP Mapping in a VNet
    put:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Update IP Mapping in a VNet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsIps-RB'
      description: Update IP Mapping in a VNet
      tags:
      - cluster
      operationId: setClusterSdnVnetsIpsByVnet
      responses:
        "200":
          description: OK
      summary: Update IP Mapping in a VNet
  /cluster/sdn/vnets/{vnet}/subnets:
    get:
      parameters:
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: SDN subnets index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnetsSubnets-RB'
      description: SDN subnets index.
      tags:
      - cluster
      operationId: getClusterSdnVnetsSubnetsByVnet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnVnetsSubnets'
      summary: SDN subnets index.
    summary: subnets
    post:
      parameters:
      - name: vnet
        in: path
        description: associated vnet
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Create a new sdn subnet object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnVnetsSubnets-RB'
      description: Create a new sdn subnet object.
      tags:
      - cluster
      operationId: newClusterSdnVnetsSubnetsByVnet
      responses:
        "200":
          description: OK
      summary: Create a new sdn subnet object.
  /cluster/sdn/vnets/{vnet}/subnets/{subnet}:
    get:
      parameters:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-subnet-id
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      requestBody:
        description: Read sdn subnet configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnVnetsSubnets-RB'
      description: Read sdn subnet configuration.
      tags:
      - cluster
      operationId: getClusterSdnVnetsSubnetsByVnetAndSubnet
      responses: ""
      summary: Read sdn subnet configuration.
    delete:
      parameters:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-subnet-id
      - name: vnet
        in: path
        description: The SDN vnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-vnet-id
      description: Delete sdn subnet object configuration.
      tags:
      - cluster
      operationId: removeClusterSdnVnetsSubnetsByVnetAndSubnet
      responses:
        "200":
          description: OK
      summary: Delete sdn subnet object configuration.
    summary: subnet
    put:
      parameters:
      - name: subnet
        in: path
        description: The SDN subnet object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-subnet-id
      - name: vnet
        in: path
        description: associated vnet
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Update sdn subnet object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnVnetsSubnets-RB'
      description: Update sdn subnet object configuration.
      tags:
      - cluster
      operationId: setClusterSdnVnetsSubnetsByVnetAndSubnet
      responses:
        "200":
          description: OK
      summary: Update sdn subnet object configuration.
  /cluster/sdn/zones:
    get:
      requestBody:
        description: SDN zones index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnZones-RB'
      description: SDN zones index.
      tags:
      - cluster
      operationId: getClusterSdnZones
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSdnZones'
      summary: SDN zones index.
    summary: zones
    post:
      requestBody:
        description: Create a new sdn zone object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-ClusterSdnZones-RB'
      description: Create a new sdn zone object.
      tags:
      - cluster
      operationId: newClusterSdnZones
      responses:
        "200":
          description: OK
      summary: Create a new sdn zone object.
  /cluster/sdn/zones/{zone}:
    get:
      parameters:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      requestBody:
        description: Read sdn zone configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-ClusterSdnZones-RB'
      description: Read sdn zone configuration.
      tags:
      - cluster
      operationId: getClusterSdnZonesByZone
      responses: ""
      summary: Read sdn zone configuration.
    delete:
      parameters:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      description: Delete sdn zone object configuration.
      tags:
      - cluster
      operationId: removeClusterSdnZonesByZone
      responses:
        "200":
          description: OK
      summary: Delete sdn zone object configuration.
    summary: zone
    put:
      parameters:
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      requestBody:
        description: Update sdn zone object configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-ClusterSdnZones-RB'
      description: Update sdn zone object configuration.
      tags:
      - cluster
      operationId: setClusterSdnZonesByZone
      responses:
        "200":
          description: OK
      summary: Update sdn zone object configuration.
  /cluster/status:
    get:
      tags:
      - cluster
      operationId: getClusterStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatus'
      summary: Get cluster status information.
      description: Get cluster status information.
    summary: status
  /cluster/tasks:
    get:
      tags:
      - cluster
      operationId: getClusterTasks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterTasks'
      summary: List recent tasks (cluster wide).
      description: List recent tasks (cluster wide).
    summary: tasks
  /nodes:
    get:
      tags:
      - nodes
      operationId: getNodes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nodes'
      summary: Cluster node index.
      description: Cluster node index.
    summary: nodes
  /nodes/{node}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Node index.
      tags:
      - nodes
      operationId: getNodesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nodes-GET'
      summary: Node index.
    summary: node
  /nodes/{node}/aplinfo:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get list of appliances.
      tags:
      - nodes
      operationId: getNodesAplinfoByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAplinfo'
      summary: Get list of appliances.
    summary: aplinfo
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Download appliance templates.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAplinfo-RB'
      description: Download appliance templates.
      tags:
      - nodes
      operationId: newNodesAplinfoByNode
      responses: ""
      summary: Download appliance templates.
  /nodes/{node}/apt:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Directory index for apt (Advanced Package Tool).
      tags:
      - nodes
      operationId: getNodesAptByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesApt'
      summary: Directory index for apt (Advanced Package Tool).
    summary: apt
  /nodes/{node}/apt/changelog:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Get package changelogs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesAptChangelog-RB'
      description: Get package changelogs.
      tags:
      - nodes
      operationId: getNodesAptChangelogByNode
      responses: ""
      summary: Get package changelogs.
    summary: changelog
  /nodes/{node}/apt/repositories:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get APT repository information.
      tags:
      - nodes
      operationId: getNodesAptRepositoriesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptRepositories'
      summary: Get APT repository information.
    summary: repositories
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Change the properties of a repository. Currently only allows enabling/disabling.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAptRepositories-RB'
      description: Change the properties of a repository. Currently only allows enabling/disabling.
      tags:
      - nodes
      operationId: newNodesAptRepositoriesByNode
      responses:
        "200":
          description: OK
      summary: Change the properties of a repository. Currently only allows enabling/disabling.
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Add a standard repository to the configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesAptRepositories-RB'
      description: Add a standard repository to the configuration
      tags:
      - nodes
      operationId: setNodesAptRepositoriesByNode
      responses:
        "200":
          description: OK
      summary: Add a standard repository to the configuration
  /nodes/{node}/apt/update:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List available updates.
      tags:
      - nodes
      operationId: getNodesAptUpdateByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptUpdate'
      summary: List available updates.
    summary: update
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: This is used to resynchronize the package index files from their sources (apt-get update).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesAptUpdate-RB'
      description: This is used to resynchronize the package index files from their sources (apt-get update).
      tags:
      - nodes
      operationId: newNodesAptUpdateByNode
      responses: ""
      summary: This is used to resynchronize the package index files from their sources (apt-get update).
  /nodes/{node}/apt/versions:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get package information for important Proxmox packages.
      tags:
      - nodes
      operationId: getNodesAptVersionsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesAptVersions'
      summary: Get package information for important Proxmox packages.
    summary: versions
  /nodes/{node}/capabilities:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Node capabilities index.
      tags:
      - nodes
      operationId: getNodesCapabilitiesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilities'
      summary: Node capabilities index.
    summary: capabilities
  /nodes/{node}/capabilities/qemu:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: QEMU capabilities index.
      tags:
      - nodes
      operationId: getNodesCapabilitiesQemuByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemu'
      summary: QEMU capabilities index.
    summary: qemu
  /nodes/{node}/capabilities/qemu/cpu:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List all custom and default CPU models.
      tags:
      - nodes
      operationId: getNodesCapabilitiesQemuCpuByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemuCpu'
      summary: List all custom and default CPU models.
    summary: cpu
  /nodes/{node}/capabilities/qemu/machines:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get available QEMU/KVM machine types.
      tags:
      - nodes
      operationId: getNodesCapabilitiesQemuMachinesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCapabilitiesQemuMachines'
      summary: Get available QEMU/KVM machine types.
    summary: machines
  /nodes/{node}/ceph:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Directory index.
      tags:
      - nodes
      operationId: getNodesCephByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCeph'
      summary: Directory index.
    summary: ceph
  /nodes/{node}/ceph/cfg:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Directory index.
      tags:
      - nodes
      operationId: getNodesCephCfgByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCfg'
      summary: Directory index.
    summary: cfg
  /nodes/{node}/ceph/cfg/db:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get the Ceph configuration database.
      tags:
      - nodes
      operationId: getNodesCephCfgDbByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCfgDb'
      summary: Get the Ceph configuration database.
    summary: db
  /nodes/{node}/ceph/cfg/raw:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get the Ceph configuration file.
      tags:
      - nodes
      operationId: getNodesCephCfgRawByNode
      responses: ""
      summary: Get the Ceph configuration file.
    summary: raw
  /nodes/{node}/ceph/cfg/value:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Get configured values from either the config file or config DB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephCfgValue-RB'
      description: Get configured values from either the config file or config DB.
      tags:
      - nodes
      operationId: getNodesCephCfgValueByNode
      responses: ""
      summary: Get configured values from either the config file or config DB.
    summary: value
  /nodes/{node}/ceph/cmd-safety:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Heuristical check if it is safe to perform an action.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephCmdsafety-RB'
      description: Heuristical check if it is safe to perform an action.
      tags:
      - nodes
      operationId: getNodesCephCmdsafetyByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephCmdsafety'
      summary: Heuristical check if it is safe to perform an action.
    summary: cmd-safety
  /nodes/{node}/ceph/crush:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get OSD crush map
      tags:
      - nodes
      operationId: getNodesCephCrushByNode
      responses: ""
      summary: Get OSD crush map
    summary: crush
  /nodes/{node}/ceph/fs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Directory index.
      tags:
      - nodes
      operationId: getNodesCephFsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephFs'
      summary: Directory index.
    summary: fs
  /nodes/{node}/ceph/fs/{name}:
    post:
      parameters:
      - name: name
        in: path
        description: The ceph filesystem name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create a Ceph filesystem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephFs-RB'
      description: Create a Ceph filesystem
      tags:
      - nodes
      operationId: newNodesCephFsByNodeAndName
      responses: ""
      summary: Create a Ceph filesystem
    summary: name
  /nodes/{node}/ceph/init:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create initial ceph default configuration and setup symlinks.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephInit-RB'
      description: Create initial ceph default configuration and setup symlinks.
      tags:
      - nodes
      operationId: newNodesCephInitByNode
      responses:
        "200":
          description: OK
      summary: Create initial ceph default configuration and setup symlinks.
    summary: init
  /nodes/{node}/ceph/log:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Read ceph log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephLog-RB'
      description: Read ceph log
      tags:
      - nodes
      operationId: getNodesCephLogByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephLog'
      summary: Read ceph log
    summary: log
  /nodes/{node}/ceph/mds:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: MDS directory index.
      tags:
      - nodes
      operationId: getNodesCephMdsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMds'
      summary: MDS directory index.
    summary: mds
  /nodes/{node}/ceph/mds/{name}:
    delete:
      parameters:
      - name: name
        in: path
        description: The name (ID) of the mds
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Destroy Ceph Metadata Server
      tags:
      - nodes
      operationId: removeNodesCephMdsByNodeAndName
      responses: ""
      summary: Destroy Ceph Metadata Server
    summary: name
    post:
      parameters:
      - name: name
        in: path
        description: The ID for the mds, when omitted the same as the nodename
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create Ceph Metadata Server (MDS)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephMds-RB'
      description: Create Ceph Metadata Server (MDS)
      tags:
      - nodes
      operationId: newNodesCephMdsByNodeAndName
      responses: ""
      summary: Create Ceph Metadata Server (MDS)
  /nodes/{node}/ceph/mgr:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: MGR directory index.
      tags:
      - nodes
      operationId: getNodesCephMgrByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMgr'
      summary: MGR directory index.
    summary: mgr
  /nodes/{node}/ceph/mgr/{id}:
    delete:
      parameters:
      - name: id
        in: path
        description: The ID of the manager
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Destroy Ceph Manager.
      tags:
      - nodes
      operationId: removeNodesCephMgrByNodeAndId
      responses: ""
      summary: Destroy Ceph Manager.
    summary: id
    post:
      parameters:
      - name: id
        in: path
        description: The ID for the manager, when omitted the same as the nodename
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Create Ceph Manager
      tags:
      - nodes
      operationId: newNodesCephMgrByNodeAndId
      responses: ""
      summary: Create Ceph Manager
  /nodes/{node}/ceph/mon:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get Ceph monitor list.
      tags:
      - nodes
      operationId: getNodesCephMonByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephMon'
      summary: Get Ceph monitor list.
    summary: mon
  /nodes/{node}/ceph/mon/{monid}:
    delete:
      parameters:
      - name: monid
        in: path
        description: Monitor ID
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Destroy Ceph Monitor and Manager.
      tags:
      - nodes
      operationId: removeNodesCephMonByNodeAndMonid
      responses: ""
      summary: Destroy Ceph Monitor and Manager.
    summary: monid
    post:
      parameters:
      - name: monid
        in: path
        description: The ID for the monitor, when omitted the same as the nodename
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create Ceph Monitor and Manager
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephMon-RB'
      description: Create Ceph Monitor and Manager
      tags:
      - nodes
      operationId: newNodesCephMonByNodeAndMonid
      responses: ""
      summary: Create Ceph Monitor and Manager
  /nodes/{node}/ceph/osd:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get Ceph osd list/tree.
      tags:
      - nodes
      operationId: getNodesCephOsdByNode
      responses: ""
      summary: Get Ceph osd list/tree.
    summary: osd
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create OSD
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephOsd-RB'
      description: Create OSD
      tags:
      - nodes
      operationId: newNodesCephOsdByNode
      responses: ""
      summary: Create OSD
  /nodes/{node}/ceph/osd/{osdid}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      description: OSD index.
      tags:
      - nodes
      operationId: getNodesCephOsdByNodeAndOsdid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsd'
      summary: OSD index.
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Destroy OSD
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCephOsd-RB'
      description: Destroy OSD
      tags:
      - nodes
      operationId: removeNodesCephOsdByNodeAndOsdid
      responses: ""
      summary: Destroy OSD
    summary: osdid
  /nodes/{node}/ceph/osd/{osdid}/in:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      description: ceph osd in
      tags:
      - nodes
      operationId: newNodesCephOsdInByNodeAndOsdid
      responses:
        "200":
          description: OK
      summary: ceph osd in
    summary: in
  /nodes/{node}/ceph/osd/{osdid}/lv-info:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Get OSD volume details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephOsdLvinfo-RB'
      description: Get OSD volume details
      tags:
      - nodes
      operationId: getNodesCephOsdLvinfoByNodeAndOsdid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsdLvinfo'
      summary: Get OSD volume details
    summary: lv-info
  /nodes/{node}/ceph/osd/{osdid}/metadata:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      description: Get OSD details
      tags:
      - nodes
      operationId: getNodesCephOsdMetadataByNodeAndOsdid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephOsdMetadata'
      summary: Get OSD details
    summary: metadata
  /nodes/{node}/ceph/osd/{osdid}/out:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      description: ceph osd out
      tags:
      - nodes
      operationId: newNodesCephOsdOutByNodeAndOsdid
      responses:
        "200":
          description: OK
      summary: ceph osd out
    summary: out
  /nodes/{node}/ceph/osd/{osdid}/scrub:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: osdid
        in: path
        description: OSD ID
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Instruct the OSD to scrub.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephOsdScrub-RB'
      description: Instruct the OSD to scrub.
      tags:
      - nodes
      operationId: newNodesCephOsdScrubByNodeAndOsdid
      responses:
        "200":
          description: OK
      summary: Instruct the OSD to scrub.
    summary: scrub
  /nodes/{node}/ceph/pool:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List all pools and their settings (which are settable by the POST/PUT endpoints).
      tags:
      - nodes
      operationId: getNodesCephPoolByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPool'
      summary: List all pools and their settings (which are settable by the POST/PUT endpoints).
    summary: pool
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create Ceph pool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephPool-RB'
      description: Create Ceph pool
      tags:
      - nodes
      operationId: newNodesCephPoolByNode
      responses: ""
      summary: Create Ceph pool
  /nodes/{node}/ceph/pool/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: The name of the pool.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Pool index.
      tags:
      - nodes
      operationId: getNodesCephPoolByNodeAndName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPool-GET'
      summary: Pool index.
    delete:
      parameters:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Destroy pool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCephPool-RB'
      description: Destroy pool
      tags:
      - nodes
      operationId: removeNodesCephPoolByNodeAndName
      responses: ""
      summary: Destroy pool
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Change POOL settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesCephPool-RB'
      description: Change POOL settings
      tags:
      - nodes
      operationId: setNodesCephPoolByNodeAndName
      responses: ""
      summary: Change POOL settings
  /nodes/{node}/ceph/pool/{name}/status:
    get:
      parameters:
      - name: name
        in: path
        description: The name of the pool. It must be unique.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Show the current pool status.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesCephPoolStatus-RB'
      description: Show the current pool status.
      tags:
      - nodes
      operationId: getNodesCephPoolStatusByNodeAndName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephPoolStatus'
      summary: Show the current pool status.
    summary: status
  /nodes/{node}/ceph/restart:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Restart ceph services.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephRestart-RB'
      description: Restart ceph services.
      tags:
      - nodes
      operationId: newNodesCephRestartByNode
      responses: ""
      summary: Restart ceph services.
    summary: restart
  /nodes/{node}/ceph/rules:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List ceph rules.
      tags:
      - nodes
      operationId: getNodesCephRulesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCephRules'
      summary: List ceph rules.
    summary: rules
  /nodes/{node}/ceph/start:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Start ceph services.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephStart-RB'
      description: Start ceph services.
      tags:
      - nodes
      operationId: newNodesCephStartByNode
      responses: ""
      summary: Start ceph services.
    summary: start
  /nodes/{node}/ceph/status:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get ceph status.
      tags:
      - nodes
      operationId: getNodesCephStatusByNode
      responses: ""
      summary: Get ceph status.
    summary: status
  /nodes/{node}/ceph/stop:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Stop ceph services.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCephStop-RB'
      description: Stop ceph services.
      tags:
      - nodes
      operationId: newNodesCephStopByNode
      responses: ""
      summary: Stop ceph services.
    summary: stop
  /nodes/{node}/certificates:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Node index.
      tags:
      - nodes
      operationId: getNodesCertificatesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificates'
      summary: Node index.
    summary: certificates
  /nodes/{node}/certificates/acme:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: ACME index.
      tags:
      - nodes
      operationId: getNodesCertificatesAcmeByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesAcme'
      summary: ACME index.
    summary: acme
  /nodes/{node}/certificates/acme/certificate:
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Revoke existing certificate from CA.
      tags:
      - nodes
      operationId: removeNodesCertificatesAcmeCertificateByNode
      responses: ""
      summary: Revoke existing certificate from CA.
    summary: certificate
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Order a new certificate from ACME-compatible CA.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCertificatesAcmeCertificate-RB'
      description: Order a new certificate from ACME-compatible CA.
      tags:
      - nodes
      operationId: newNodesCertificatesAcmeCertificateByNode
      responses: ""
      summary: Order a new certificate from ACME-compatible CA.
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Renew existing certificate from CA.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesCertificatesAcmeCertificate-RB'
      description: Renew existing certificate from CA.
      tags:
      - nodes
      operationId: setNodesCertificatesAcmeCertificateByNode
      responses: ""
      summary: Renew existing certificate from CA.
  /nodes/{node}/certificates/custom:
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: DELETE custom certificate chain and key.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesCertificatesCustom-RB'
      description: DELETE custom certificate chain and key.
      tags:
      - nodes
      operationId: removeNodesCertificatesCustomByNode
      responses:
        "200":
          description: OK
      summary: DELETE custom certificate chain and key.
    summary: custom
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Upload or update custom certificate chain and key.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesCertificatesCustom-RB'
      description: Upload or update custom certificate chain and key.
      tags:
      - nodes
      operationId: newNodesCertificatesCustomByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesCustom'
      summary: Upload or update custom certificate chain and key.
  /nodes/{node}/certificates/info:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get information about node's certificates.
      tags:
      - nodes
      operationId: getNodesCertificatesInfoByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesCertificatesInfo'
      summary: Get information about node's certificates.
    summary: info
  /nodes/{node}/config:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Get node configuration options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesConfig-RB'
      description: Get node configuration options.
      tags:
      - nodes
      operationId: getNodesConfigByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesConfig'
      summary: Get node configuration options.
    summary: config
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Set node configuration options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesConfig-RB'
      description: Set node configuration options.
      tags:
      - nodes
      operationId: setNodesConfigByNode
      responses:
        "200":
          description: OK
      summary: Set node configuration options.
  /nodes/{node}/disks:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Node index.
      tags:
      - nodes
      operationId: getNodesDisksByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisks'
      summary: Node index.
    summary: disks
  /nodes/{node}/disks/directory:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: PVE Managed Directory storages.
      tags:
      - nodes
      operationId: getNodesDisksDirectoryByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksDirectory'
      summary: PVE Managed Directory storages.
    summary: directory
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksDirectory-RB'
      description: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
      tags:
      - nodes
      operationId: newNodesDisksDirectoryByNode
      responses: ""
      summary: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
  /nodes/{node}/disks/directory/{name}:
    delete:
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Unmounts the storage and removes the mount unit.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksDirectory-RB'
      description: Unmounts the storage and removes the mount unit.
      tags:
      - nodes
      operationId: removeNodesDisksDirectoryByNodeAndName
      responses: ""
      summary: Unmounts the storage and removes the mount unit.
    summary: name
  /nodes/{node}/disks/initgpt:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Initialize Disk with GPT
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksInitgpt-RB'
      description: Initialize Disk with GPT
      tags:
      - nodes
      operationId: newNodesDisksInitgptByNode
      responses: ""
      summary: Initialize Disk with GPT
    summary: initgpt
  /nodes/{node}/disks/list:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: List local disks.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesDisksList-RB'
      description: List local disks.
      tags:
      - nodes
      operationId: getNodesDisksListByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksList'
      summary: List local disks.
    summary: list
  /nodes/{node}/disks/lvm:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List LVM Volume Groups
      tags:
      - nodes
      operationId: getNodesDisksLvmByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksLvm'
      summary: List LVM Volume Groups
    summary: lvm
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create an LVM Volume Group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksLvm-RB'
      description: Create an LVM Volume Group
      tags:
      - nodes
      operationId: newNodesDisksLvmByNode
      responses: ""
      summary: Create an LVM Volume Group
  /nodes/{node}/disks/lvm/{name}:
    delete:
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Remove an LVM Volume Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksLvm-RB'
      description: Remove an LVM Volume Group.
      tags:
      - nodes
      operationId: removeNodesDisksLvmByNodeAndName
      responses: ""
      summary: Remove an LVM Volume Group.
    summary: name
  /nodes/{node}/disks/lvmthin:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List LVM thinpools
      tags:
      - nodes
      operationId: getNodesDisksLvmthinByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksLvmthin'
      summary: List LVM thinpools
    summary: lvmthin
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create an LVM thinpool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksLvmthin-RB'
      description: Create an LVM thinpool
      tags:
      - nodes
      operationId: newNodesDisksLvmthinByNode
      responses: ""
      summary: Create an LVM thinpool
  /nodes/{node}/disks/lvmthin/{name}:
    delete:
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Remove an LVM thin pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksLvmthin-RB'
      description: Remove an LVM thin pool.
      tags:
      - nodes
      operationId: removeNodesDisksLvmthinByNodeAndName
      responses: ""
      summary: Remove an LVM thin pool.
    summary: name
  /nodes/{node}/disks/smart:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Get SMART Health of a disk.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesDisksSmart-RB'
      description: Get SMART Health of a disk.
      tags:
      - nodes
      operationId: getNodesDisksSmartByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksSmart'
      summary: Get SMART Health of a disk.
    summary: smart
  /nodes/{node}/disks/wipedisk:
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Wipe a disk or partition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesDisksWipedisk-RB'
      description: Wipe a disk or partition.
      tags:
      - nodes
      operationId: setNodesDisksWipediskByNode
      responses: ""
      summary: Wipe a disk or partition.
    summary: wipedisk
  /nodes/{node}/disks/zfs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List Zpools.
      tags:
      - nodes
      operationId: getNodesDisksZfsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksZfs-GET'
      summary: List Zpools.
    summary: zfs
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create a ZFS pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesDisksZfs-RB'
      description: Create a ZFS pool.
      tags:
      - nodes
      operationId: newNodesDisksZfsByNode
      responses: ""
      summary: Create a ZFS pool.
  /nodes/{node}/disks/zfs/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get details about a zpool.
      tags:
      - nodes
      operationId: getNodesDisksZfsByNodeAndName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDisksZfs'
      summary: Get details about a zpool.
    delete:
      parameters:
      - name: name
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Destroy a ZFS pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesDisksZfs-RB'
      description: Destroy a ZFS pool.
      tags:
      - nodes
      operationId: removeNodesDisksZfsByNodeAndName
      responses: ""
      summary: Destroy a ZFS pool.
    summary: name
  /nodes/{node}/dns:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Read DNS settings.
      tags:
      - nodes
      operationId: getNodesDnsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesDns'
      summary: Read DNS settings.
    summary: dns
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Write DNS settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesDns-RB'
      description: Write DNS settings.
      tags:
      - nodes
      operationId: setNodesDnsByNode
      responses:
        "200":
          description: OK
      summary: Write DNS settings.
  /nodes/{node}/execute:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Execute multiple commands in order, root only.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesExecute-RB'
      description: Execute multiple commands in order, root only.
      tags:
      - nodes
      operationId: newNodesExecuteByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesExecute'
      summary: Execute multiple commands in order, root only.
    summary: execute
  /nodes/{node}/firewall:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Directory index.
      tags:
      - nodes
      operationId: getNodesFirewallByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewall'
      summary: Directory index.
    summary: firewall
  /nodes/{node}/firewall/log:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Read firewall log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesFirewallLog-RB'
      description: Read firewall log
      tags:
      - nodes
      operationId: getNodesFirewallLogByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallLog'
      summary: Read firewall log
    summary: log
  /nodes/{node}/firewall/options:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get host firewall options.
      tags:
      - nodes
      operationId: getNodesFirewallOptionsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallOptions'
      summary: Get host firewall options.
    summary: options
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesFirewallOptions-RB'
      description: Set Firewall options.
      tags:
      - nodes
      operationId: setNodesFirewallOptionsByNode
      responses:
        "200":
          description: OK
      summary: Set Firewall options.
  /nodes/{node}/firewall/rules:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List rules.
      tags:
      - nodes
      operationId: getNodesFirewallRulesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallRules-GET'
      summary: List rules.
    summary: rules
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesFirewallRules-RB'
      description: Create new rule.
      tags:
      - nodes
      operationId: newNodesFirewallRulesByNode
      responses:
        "200":
          description: OK
      summary: Create new rule.
  /nodes/{node}/firewall/rules/{pos}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      description: Get single rule data.
      tags:
      - nodes
      operationId: getNodesFirewallRulesByNodeAndPos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesFirewallRules'
      summary: Get single rule data.
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesFirewallRules-RB'
      description: Delete rule.
      tags:
      - nodes
      operationId: removeNodesFirewallRulesByNodeAndPos
      responses:
        "200":
          description: OK
      summary: Delete rule.
    summary: pos
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesFirewallRules-RB'
      description: Modify rule data.
      tags:
      - nodes
      operationId: setNodesFirewallRulesByNodeAndPos
      responses:
        "200":
          description: OK
      summary: Modify rule data.
  /nodes/{node}/hardware:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Index of hardware types
      tags:
      - nodes
      operationId: getNodesHardwareByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardware'
      summary: Index of hardware types
    summary: hardware
  /nodes/{node}/hardware/pci:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: List local PCI devices.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesHardwarePci-RB'
      description: List local PCI devices.
      tags:
      - nodes
      operationId: getNodesHardwarePciByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePci'
      summary: List local PCI devices.
    summary: pci
  /nodes/{node}/hardware/pci/{pci-id-or-mapping}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pci-id-or-mapping
        in: path
        description: 
        required: true
        schema:
          type: string
          format: 
      description: Index of available pci methods
      tags:
      - nodes
      operationId: getNodesHardwarePciByNodeAndPciidormapping
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePci-GET'
      summary: Index of available pci methods
    summary: pci-id-or-mapping
  /nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pci-id-or-mapping
        in: path
        description: The PCI ID or mapping to list the mdev types for.
        required: true
        schema:
          type: string
          format: 
      description: List mediated device types for given PCI device.
      tags:
      - nodes
      operationId: getNodesHardwarePciMdevByNodeAndPciidormapping
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwarePciMdev'
      summary: List mediated device types for given PCI device.
    summary: mdev
  /nodes/{node}/hardware/usb:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List local USB devices.
      tags:
      - nodes
      operationId: getNodesHardwareUsbByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHardwareUsb'
      summary: List local USB devices.
    summary: usb
  /nodes/{node}/hosts:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get the content of /etc/hosts.
      tags:
      - nodes
      operationId: getNodesHostsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesHosts'
      summary: Get the content of /etc/hosts.
    summary: hosts
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Write /etc/hosts.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesHosts-RB'
      description: Write /etc/hosts.
      tags:
      - nodes
      operationId: newNodesHostsByNode
      responses:
        "200":
          description: OK
      summary: Write /etc/hosts.
  /nodes/{node}/journal:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Read Journal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesJournal-RB'
      description: Read Journal
      tags:
      - nodes
      operationId: getNodesJournalByNode
      responses: ""
      summary: Read Journal
    summary: journal
  /nodes/{node}/lxc:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: LXC container index (per node).
      tags:
      - nodes
      operationId: getNodesLxcByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxc'
      summary: LXC container index (per node).
    summary: lxc
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create or restore a container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxc-RB'
      description: Create or restore a container.
      tags:
      - nodes
      operationId: newNodesLxcByNode
      responses: ""
      summary: Create or restore a container.
  /nodes/{node}/lxc/{vmid}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Directory index
      tags:
      - nodes
      operationId: getNodesLxcByNodeAndVmid
      responses: ""
      summary: Directory index
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Destroy the container (also delete all uses files).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxc-RB'
      description: Destroy the container (also delete all uses files).
      tags:
      - nodes
      operationId: removeNodesLxcByNodeAndVmid
      responses: ""
      summary: Destroy the container (also delete all uses files).
    summary: vmid
  /nodes/{node}/lxc/{vmid}/clone:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create a container clone/copy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcClone-RB'
      description: Create a container clone/copy
      tags:
      - nodes
      operationId: newNodesLxcCloneByNodeAndVmid
      responses: ""
      summary: Create a container clone/copy
    summary: clone
  /nodes/{node}/lxc/{vmid}/config:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Get container configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcConfig-RB'
      description: Get container configuration.
      tags:
      - nodes
      operationId: getNodesLxcConfigByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcConfig'
      summary: Get container configuration.
    summary: config
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Set container options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcConfig-RB'
      description: Set container options.
      tags:
      - nodes
      operationId: setNodesLxcConfigByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Set container options.
  /nodes/{node}/lxc/{vmid}/feature:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Check if feature for virtual machine is available.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFeature-RB'
      description: Check if feature for virtual machine is available.
      tags:
      - nodes
      operationId: getNodesLxcFeatureByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFeature'
      summary: Check if feature for virtual machine is available.
    summary: feature
  /nodes/{node}/lxc/{vmid}/firewall:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Directory index.
      tags:
      - nodes
      operationId: getNodesLxcFirewallByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewall'
      summary: Directory index.
    summary: firewall
  /nodes/{node}/lxc/{vmid}/firewall/aliases:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List aliases
      tags:
      - nodes
      operationId: getNodesLxcFirewallAliasesByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallAliases'
      summary: List aliases
    summary: aliases
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create IP or Network Alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallAliases-RB'
      description: Create IP or Network Alias.
      tags:
      - nodes
      operationId: newNodesLxcFirewallAliasesByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Create IP or Network Alias.
  /nodes/{node}/lxc/{vmid}/firewall/aliases/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Read alias.
      tags:
      - nodes
      operationId: getNodesLxcFirewallAliasesByNodeAndVmidAndName
      responses: ""
      summary: Read alias.
    delete:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Remove IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallAliases-RB'
      description: Remove IP or Network alias.
      tags:
      - nodes
      operationId: removeNodesLxcFirewallAliasesByNodeAndVmidAndName
      responses:
        "200":
          description: OK
      summary: Remove IP or Network alias.
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Update IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallAliases-RB'
      description: Update IP or Network alias.
      tags:
      - nodes
      operationId: setNodesLxcFirewallAliasesByNodeAndVmidAndName
      responses:
        "200":
          description: OK
      summary: Update IP or Network alias.
  /nodes/{node}/lxc/{vmid}/firewall/ipset:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List IPSets
      tags:
      - nodes
      operationId: getNodesLxcFirewallIpsetByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallIpset'
      summary: List IPSets
    summary: ipset
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create new IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallIpset-RB'
      description: Create new IPSet
      tags:
      - nodes
      operationId: newNodesLxcFirewallIpsetByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Create new IPSet
  /nodes/{node}/lxc/{vmid}/firewall/ipset/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List IPSet content
      tags:
      - nodes
      operationId: getNodesLxcFirewallIpsetByNodeAndVmidAndName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallIpset-GET'
      summary: List IPSet content
    delete:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Delete IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallIpset-RB'
      description: Delete IPSet
      tags:
      - nodes
      operationId: removeNodesLxcFirewallIpsetByNodeAndVmidAndName
      responses:
        "200":
          description: OK
      summary: Delete IPSet
    summary: name
    post:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Add IP or Network to IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallIpset-RB'
      description: Add IP or Network to IPSet.
      tags:
      - nodes
      operationId: newNodesLxcFirewallIpsetByNodeAndVmidAndName
      responses:
        "200":
          description: OK
      summary: Add IP or Network to IPSet.
  /nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}:
    get:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Read IP or Network settings from IPSet.
      tags:
      - nodes
      operationId: getNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      responses: ""
      summary: Read IP or Network settings from IPSet.
    delete:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Remove IP or Network from IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallIpset-RB'
      description: Remove IP or Network from IPSet.
      tags:
      - nodes
      operationId: removeNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      responses:
        "200":
          description: OK
      summary: Remove IP or Network from IPSet.
    summary: cidr
    put:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Update IP or Network settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallIpset-RB'
      description: Update IP or Network settings
      tags:
      - nodes
      operationId: setNodesLxcFirewallIpsetByNodeAndVmidAndNameAndCidr
      responses:
        "200":
          description: OK
      summary: Update IP or Network settings
  /nodes/{node}/lxc/{vmid}/firewall/log:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Read firewall log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFirewallLog-RB'
      description: Read firewall log
      tags:
      - nodes
      operationId: getNodesLxcFirewallLogByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallLog'
      summary: Read firewall log
    summary: log
  /nodes/{node}/lxc/{vmid}/firewall/options:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get VM firewall options.
      tags:
      - nodes
      operationId: getNodesLxcFirewallOptionsByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallOptions'
      summary: Get VM firewall options.
    summary: options
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallOptions-RB'
      description: Set Firewall options.
      tags:
      - nodes
      operationId: setNodesLxcFirewallOptionsByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Set Firewall options.
  /nodes/{node}/lxc/{vmid}/firewall/refs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcFirewallRefs-RB'
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      tags:
      - nodes
      operationId: getNodesLxcFirewallRefsByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRefs'
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
    summary: refs
  /nodes/{node}/lxc/{vmid}/firewall/rules:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List rules.
      tags:
      - nodes
      operationId: getNodesLxcFirewallRulesByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRules-GET'
      summary: List rules.
    summary: rules
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcFirewallRules-RB'
      description: Create new rule.
      tags:
      - nodes
      operationId: newNodesLxcFirewallRulesByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Create new rule.
  /nodes/{node}/lxc/{vmid}/firewall/rules/{pos}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get single rule data.
      tags:
      - nodes
      operationId: getNodesLxcFirewallRulesByNodeAndVmidAndPos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcFirewallRules'
      summary: Get single rule data.
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcFirewallRules-RB'
      description: Delete rule.
      tags:
      - nodes
      operationId: removeNodesLxcFirewallRulesByNodeAndVmidAndPos
      responses:
        "200":
          description: OK
      summary: Delete rule.
    summary: pos
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcFirewallRules-RB'
      description: Modify rule data.
      tags:
      - nodes
      operationId: setNodesLxcFirewallRulesByNodeAndVmidAndPos
      responses:
        "200":
          description: OK
      summary: Modify rule data.
  /nodes/{node}/lxc/{vmid}/interfaces:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get IP addresses of the specified container interface.
      tags:
      - nodes
      operationId: getNodesLxcInterfacesByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcInterfaces'
      summary: Get IP addresses of the specified container interface.
    summary: interfaces
  /nodes/{node}/lxc/{vmid}/migrate:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Migrate the container to another node. Creates a new migration task.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMigrate-RB'
      description: Migrate the container to another node. Creates a new migration task.
      tags:
      - nodes
      operationId: newNodesLxcMigrateByNodeAndVmid
      responses: ""
      summary: Migrate the container to another node. Creates a new migration task.
    summary: migrate
  /nodes/{node}/lxc/{vmid}/move_volume:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Move a rootfs-/mp-volume to a different storage or to a different container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMovevolume-RB'
      description: Move a rootfs-/mp-volume to a different storage or to a different container.
      tags:
      - nodes
      operationId: newNodesLxcMovevolumeByNodeAndVmid
      responses: ""
      summary: Move a rootfs-/mp-volume to a different storage or to a different container.
    summary: movevolume
  /nodes/{node}/lxc/{vmid}/mtunnel:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Migration tunnel endpoint - only for internal use by CT migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcMtunnel-RB'
      description: Migration tunnel endpoint - only for internal use by CT migration.
      tags:
      - nodes
      operationId: newNodesLxcMtunnelByNodeAndVmid
      responses: ""
      summary: Migration tunnel endpoint - only for internal use by CT migration.
    summary: mtunnel
  /nodes/{node}/lxc/{vmid}/mtunnelwebsocket:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcMtunnelwebsocket-RB'
      description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      tags:
      - nodes
      operationId: getNodesLxcMtunnelwebsocketByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcMtunnelwebsocket'
      summary: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
    summary: mtunnelwebsocket
  /nodes/{node}/lxc/{vmid}/pending:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get container configuration, including pending changes.
      tags:
      - nodes
      operationId: getNodesLxcPendingByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcPending'
      summary: Get container configuration, including pending changes.
    summary: pending
  /nodes/{node}/lxc/{vmid}/remote_migrate:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcRemotemigrate-RB'
      description: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
      tags:
      - nodes
      operationId: newNodesLxcRemotemigrateByNodeAndVmid
      responses: ""
      summary: Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!
    summary: remotemigrate
  /nodes/{node}/lxc/{vmid}/resize:
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Resize a container mount point.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcResize-RB'
      description: Resize a container mount point.
      tags:
      - nodes
      operationId: setNodesLxcResizeByNodeAndVmid
      responses: ""
      summary: Resize a container mount point.
    summary: resize
  /nodes/{node}/lxc/{vmid}/rrd:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Read VM RRD statistics (returns PNG)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcRrd-RB'
      description: Read VM RRD statistics (returns PNG)
      tags:
      - nodes
      operationId: getNodesLxcRrdByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcRrd'
      summary: Read VM RRD statistics (returns PNG)
    summary: rrd
  /nodes/{node}/lxc/{vmid}/rrddata:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Read VM RRD statistics
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcRrddata-RB'
      description: Read VM RRD statistics
      tags:
      - nodes
      operationId: getNodesLxcRrddataByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcRrddata'
      summary: Read VM RRD statistics
    summary: rrddata
  /nodes/{node}/lxc/{vmid}/snapshot:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List all snapshots.
      tags:
      - nodes
      operationId: getNodesLxcSnapshotByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcSnapshot'
      summary: List all snapshots.
    summary: snapshot
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Snapshot a container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSnapshot-RB'
      description: Snapshot a container.
      tags:
      - nodes
      operationId: newNodesLxcSnapshotByNodeAndVmid
      responses: ""
      summary: Snapshot a container.
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: ""
      tags:
      - nodes
      operationId: getNodesLxcSnapshotByNodeAndVmidAndSnapname
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcSnapshot-GET'
      summary: ""
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Delete a LXC snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesLxcSnapshot-RB'
      description: Delete a LXC snapshot.
      tags:
      - nodes
      operationId: removeNodesLxcSnapshotByNodeAndVmidAndSnapname
      responses: ""
      summary: Delete a LXC snapshot.
    summary: snapname
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get snapshot configuration
      tags:
      - nodes
      operationId: getNodesLxcSnapshotConfigByNodeAndVmidAndSnapname
      responses: ""
      summary: Get snapshot configuration
    summary: config
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Update snapshot metadata.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesLxcSnapshotConfig-RB'
      description: Update snapshot metadata.
      tags:
      - nodes
      operationId: setNodesLxcSnapshotConfigByNodeAndVmidAndSnapname
      responses:
        "200":
          description: OK
      summary: Update snapshot metadata.
  /nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Rollback LXC state to specified snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSnapshotRollback-RB'
      description: Rollback LXC state to specified snapshot.
      tags:
      - nodes
      operationId: newNodesLxcSnapshotRollbackByNodeAndVmidAndSnapname
      responses: ""
      summary: Rollback LXC state to specified snapshot.
    summary: rollback
  /nodes/{node}/lxc/{vmid}/spiceproxy:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Returns a SPICE configuration to connect to the CT.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcSpiceproxy-RB'
      description: Returns a SPICE configuration to connect to the CT.
      tags:
      - nodes
      operationId: newNodesLxcSpiceproxyByNodeAndVmid
      responses: ""
      summary: Returns a SPICE configuration to connect to the CT.
    summary: spiceproxy
  /nodes/{node}/lxc/{vmid}/status:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Directory index
      tags:
      - nodes
      operationId: getNodesLxcStatusByNodeAndVmid
      responses: ""
      summary: Directory index
    summary: status
  /nodes/{node}/lxc/{vmid}/status/current:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get virtual machine status.
      tags:
      - nodes
      operationId: getNodesLxcStatusCurrentByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcStatusCurrent'
      summary: Get virtual machine status.
    summary: current
  /nodes/{node}/lxc/{vmid}/status/reboot:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Reboot the container by shutting it down, and starting it again. Applies pending changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusReboot-RB'
      description: Reboot the container by shutting it down, and starting it again. Applies pending changes.
      tags:
      - nodes
      operationId: newNodesLxcStatusRebootByNodeAndVmid
      responses: ""
      summary: Reboot the container by shutting it down, and starting it again. Applies pending changes.
    summary: reboot
  /nodes/{node}/lxc/{vmid}/status/resume:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Resume the container.
      tags:
      - nodes
      operationId: newNodesLxcStatusResumeByNodeAndVmid
      responses: ""
      summary: Resume the container.
    summary: resume
  /nodes/{node}/lxc/{vmid}/status/shutdown:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusShutdown-RB'
      description: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
      tags:
      - nodes
      operationId: newNodesLxcStatusShutdownByNodeAndVmid
      responses: ""
      summary: Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.
    summary: shutdown
  /nodes/{node}/lxc/{vmid}/status/start:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Start the container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusStart-RB'
      description: Start the container.
      tags:
      - nodes
      operationId: newNodesLxcStatusStartByNodeAndVmid
      responses: ""
      summary: Start the container.
    summary: start
  /nodes/{node}/lxc/{vmid}/status/stop:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Stop the container. This will abruptly stop all processes running in the container.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcStatusStop-RB'
      description: Stop the container. This will abruptly stop all processes running in the container.
      tags:
      - nodes
      operationId: newNodesLxcStatusStopByNodeAndVmid
      responses: ""
      summary: Stop the container. This will abruptly stop all processes running in the container.
    summary: stop
  /nodes/{node}/lxc/{vmid}/status/suspend:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Suspend the container. This is experimental.
      tags:
      - nodes
      operationId: newNodesLxcStatusSuspendByNodeAndVmid
      responses: ""
      summary: Suspend the container. This is experimental.
    summary: suspend
  /nodes/{node}/lxc/{vmid}/template:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Create a Template.
      tags:
      - nodes
      operationId: newNodesLxcTemplateByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Create a Template.
    summary: template
  /nodes/{node}/lxc/{vmid}/termproxy:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Creates a TCP proxy connection.
      tags:
      - nodes
      operationId: newNodesLxcTermproxyByNodeAndVmid
      responses: ""
      summary: Creates a TCP proxy connection.
    summary: termproxy
  /nodes/{node}/lxc/{vmid}/vncproxy:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Creates a TCP VNC proxy connections.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesLxcVncproxy-RB'
      description: Creates a TCP VNC proxy connections.
      tags:
      - nodes
      operationId: newNodesLxcVncproxyByNodeAndVmid
      responses: ""
      summary: Creates a TCP VNC proxy connections.
    summary: vncproxy
  /nodes/{node}/lxc/{vmid}/vncwebsocket:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Opens a weksocket for VNC traffic.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesLxcVncwebsocket-RB'
      description: Opens a weksocket for VNC traffic.
      tags:
      - nodes
      operationId: getNodesLxcVncwebsocketByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesLxcVncwebsocket'
      summary: Opens a weksocket for VNC traffic.
    summary: vncwebsocket
  /nodes/{node}/migrateall:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Migrate all VMs and Containers.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesMigrateall-RB'
      description: Migrate all VMs and Containers.
      tags:
      - nodes
      operationId: newNodesMigrateallByNode
      responses: ""
      summary: Migrate all VMs and Containers.
    summary: migrateall
  /nodes/{node}/netstat:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Read tap/vm network device interface counters
      tags:
      - nodes
      operationId: getNodesNetstatByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetstat'
      summary: Read tap/vm network device interface counters
    summary: netstat
  /nodes/{node}/network:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: List available networks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesNetwork-RB'
      description: List available networks
      tags:
      - nodes
      operationId: getNodesNetworkByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetwork-GET'
      summary: List available networks
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Revert network configuration changes.
      tags:
      - nodes
      operationId: removeNodesNetworkByNode
      responses:
        "200":
          description: OK
      summary: Revert network configuration changes.
    summary: network
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create network device configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesNetwork-RB'
      description: Create network device configuration
      tags:
      - nodes
      operationId: newNodesNetworkByNode
      responses:
        "200":
          description: OK
      summary: Create network device configuration
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Reload network configuration
      tags:
      - nodes
      operationId: setNodesNetworkByNode
      responses: ""
      summary: Reload network configuration
  /nodes/{node}/network/{iface}:
    get:
      parameters:
      - name: iface
        in: path
        description: Network interface name.
        required: true
        schema:
          type: string
          format: pve-iface
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Read network device configuration
      tags:
      - nodes
      operationId: getNodesNetworkByNodeAndIface
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesNetwork'
      summary: Read network device configuration
    delete:
      parameters:
      - name: iface
        in: path
        description: Network interface name.
        required: true
        schema:
          type: string
          format: pve-iface
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Delete network device configuration
      tags:
      - nodes
      operationId: removeNodesNetworkByNodeAndIface
      responses:
        "200":
          description: OK
      summary: Delete network device configuration
    summary: iface
    put:
      parameters:
      - name: iface
        in: path
        description: Network interface name.
        required: true
        schema:
          type: string
          format: pve-iface
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Update network device configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesNetwork-RB'
      description: Update network device configuration
      tags:
      - nodes
      operationId: setNodesNetworkByNodeAndIface
      responses:
        "200":
          description: OK
      summary: Update network device configuration
  /nodes/{node}/qemu:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Virtual machine index (per node).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemu-RB'
      description: Virtual machine index (per node).
      tags:
      - nodes
      operationId: getNodesQemuByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemu'
      summary: Virtual machine index (per node).
    summary: qemu
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create or restore a virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemu-RB'
      description: Create or restore a virtual machine.
      tags:
      - nodes
      operationId: newNodesQemuByNode
      responses: ""
      summary: Create or restore a virtual machine.
  /nodes/{node}/qemu/{vmid}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Directory index
      tags:
      - nodes
      operationId: getNodesQemuByNodeAndVmid
      responses: ""
      summary: Directory index
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemu-RB'
      description: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
      tags:
      - nodes
      operationId: removeNodesQemuByNodeAndVmid
      responses: ""
      summary: Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules
    summary: vmid
  /nodes/{node}/qemu/{vmid}/agent:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: QEMU Guest Agent command index.
      tags:
      - nodes
      operationId: getNodesQemuAgentByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgent'
      summary: QEMU Guest Agent command index.
    summary: agent
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Execute QEMU Guest Agent commands.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgent-RB'
      description: Execute QEMU Guest Agent commands.
      tags:
      - nodes
      operationId: newNodesQemuAgentByNodeAndVmid
      responses: ""
      summary: Execute QEMU Guest Agent commands.
  /nodes/{node}/qemu/{vmid}/agent/exec:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Executes the given command in the vm via the guest-agent and returns an object with the pid.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentExec-RB'
      description: Executes the given command in the vm via the guest-agent and returns an object with the pid.
      tags:
      - nodes
      operationId: newNodesQemuAgentExecByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentExec'
      summary: Executes the given command in the vm via the guest-agent and returns an object with the pid.
    summary: exec
  /nodes/{node}/qemu/{vmid}/agent/exec-status:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Gets the status of the given pid started by the guest-agent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuAgentExecstatus-RB'
      description: Gets the status of the given pid started by the guest-agent
      tags:
      - nodes
      operationId: getNodesQemuAgentExecstatusByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentExecstatus'
      summary: Gets the status of the given pid started by the guest-agent
    summary: exec-status
  /nodes/{node}/qemu/{vmid}/agent/file-read:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Reads the given file via guest agent. Is limited to 16777216 bytes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuAgentFileread-RB'
      description: Reads the given file via guest agent. Is limited to 16777216 bytes.
      tags:
      - nodes
      operationId: getNodesQemuAgentFilereadByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuAgentFileread'
      summary: Reads the given file via guest agent. Is limited to 16777216 bytes.
    summary: file-read
  /nodes/{node}/qemu/{vmid}/agent/file-write:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Writes the given file via guest agent.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentFilewrite-RB'
      description: Writes the given file via guest agent.
      tags:
      - nodes
      operationId: newNodesQemuAgentFilewriteByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Writes the given file via guest agent.
    summary: file-write
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute fsfreeze-freeze.
      tags:
      - nodes
      operationId: newNodesQemuAgentFsfreezefreezeByNodeAndVmid
      responses: ""
      summary: Execute fsfreeze-freeze.
    summary: fsfreeze-freeze
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-status:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute fsfreeze-status.
      tags:
      - nodes
      operationId: newNodesQemuAgentFsfreezestatusByNodeAndVmid
      responses: ""
      summary: Execute fsfreeze-status.
    summary: fsfreeze-status
  /nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute fsfreeze-thaw.
      tags:
      - nodes
      operationId: newNodesQemuAgentFsfreezethawByNodeAndVmid
      responses: ""
      summary: Execute fsfreeze-thaw.
    summary: fsfreeze-thaw
  /nodes/{node}/qemu/{vmid}/agent/fstrim:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute fstrim.
      tags:
      - nodes
      operationId: newNodesQemuAgentFstrimByNodeAndVmid
      responses: ""
      summary: Execute fstrim.
    summary: fstrim
  /nodes/{node}/qemu/{vmid}/agent/get-fsinfo:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-fsinfo.
      tags:
      - nodes
      operationId: getNodesQemuAgentGetfsinfoByNodeAndVmid
      responses: ""
      summary: Execute get-fsinfo.
    summary: get-fsinfo
  /nodes/{node}/qemu/{vmid}/agent/get-host-name:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-host-name.
      tags:
      - nodes
      operationId: getNodesQemuAgentGethostnameByNodeAndVmid
      responses: ""
      summary: Execute get-host-name.
    summary: get-host-name
  /nodes/{node}/qemu/{vmid}/agent/get-memory-block-info:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-memory-block-info.
      tags:
      - nodes
      operationId: getNodesQemuAgentGetmemoryblockinfoByNodeAndVmid
      responses: ""
      summary: Execute get-memory-block-info.
    summary: get-memory-block-info
  /nodes/{node}/qemu/{vmid}/agent/get-memory-blocks:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-memory-blocks.
      tags:
      - nodes
      operationId: getNodesQemuAgentGetmemoryblocksByNodeAndVmid
      responses: ""
      summary: Execute get-memory-blocks.
    summary: get-memory-blocks
  /nodes/{node}/qemu/{vmid}/agent/get-osinfo:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-osinfo.
      tags:
      - nodes
      operationId: getNodesQemuAgentGetosinfoByNodeAndVmid
      responses: ""
      summary: Execute get-osinfo.
    summary: get-osinfo
  /nodes/{node}/qemu/{vmid}/agent/get-time:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-time.
      tags:
      - nodes
      operationId: getNodesQemuAgentGettimeByNodeAndVmid
      responses: ""
      summary: Execute get-time.
    summary: get-time
  /nodes/{node}/qemu/{vmid}/agent/get-timezone:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-timezone.
      tags:
      - nodes
      operationId: getNodesQemuAgentGettimezoneByNodeAndVmid
      responses: ""
      summary: Execute get-timezone.
    summary: get-timezone
  /nodes/{node}/qemu/{vmid}/agent/get-users:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-users.
      tags:
      - nodes
      operationId: getNodesQemuAgentGetusersByNodeAndVmid
      responses: ""
      summary: Execute get-users.
    summary: get-users
  /nodes/{node}/qemu/{vmid}/agent/get-vcpus:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute get-vcpus.
      tags:
      - nodes
      operationId: getNodesQemuAgentGetvcpusByNodeAndVmid
      responses: ""
      summary: Execute get-vcpus.
    summary: get-vcpus
  /nodes/{node}/qemu/{vmid}/agent/info:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute info.
      tags:
      - nodes
      operationId: getNodesQemuAgentInfoByNodeAndVmid
      responses: ""
      summary: Execute info.
    summary: info
  /nodes/{node}/qemu/{vmid}/agent/network-get-interfaces:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute network-get-interfaces.
      tags:
      - nodes
      operationId: getNodesQemuAgentNetworkgetinterfacesByNodeAndVmid
      responses: ""
      summary: Execute network-get-interfaces.
    summary: network-get-interfaces
  /nodes/{node}/qemu/{vmid}/agent/ping:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute ping.
      tags:
      - nodes
      operationId: newNodesQemuAgentPingByNodeAndVmid
      responses: ""
      summary: Execute ping.
    summary: ping
  /nodes/{node}/qemu/{vmid}/agent/set-user-password:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Sets the password for the given user to the given password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuAgentSetuserpassword-RB'
      description: Sets the password for the given user to the given password
      tags:
      - nodes
      operationId: newNodesQemuAgentSetuserpasswordByNodeAndVmid
      responses: ""
      summary: Sets the password for the given user to the given password
    summary: set-user-password
  /nodes/{node}/qemu/{vmid}/agent/shutdown:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute shutdown.
      tags:
      - nodes
      operationId: newNodesQemuAgentShutdownByNodeAndVmid
      responses: ""
      summary: Execute shutdown.
    summary: shutdown
  /nodes/{node}/qemu/{vmid}/agent/suspend-disk:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute suspend-disk.
      tags:
      - nodes
      operationId: newNodesQemuAgentSuspenddiskByNodeAndVmid
      responses: ""
      summary: Execute suspend-disk.
    summary: suspend-disk
  /nodes/{node}/qemu/{vmid}/agent/suspend-hybrid:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute suspend-hybrid.
      tags:
      - nodes
      operationId: newNodesQemuAgentSuspendhybridByNodeAndVmid
      responses: ""
      summary: Execute suspend-hybrid.
    summary: suspend-hybrid
  /nodes/{node}/qemu/{vmid}/agent/suspend-ram:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Execute suspend-ram.
      tags:
      - nodes
      operationId: newNodesQemuAgentSuspendramByNodeAndVmid
      responses: ""
      summary: Execute suspend-ram.
    summary: suspend-ram
  /nodes/{node}/qemu/{vmid}/clone:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create a copy of virtual machine/template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuClone-RB'
      description: Create a copy of virtual machine/template.
      tags:
      - nodes
      operationId: newNodesQemuCloneByNodeAndVmid
      responses: ""
      summary: Create a copy of virtual machine/template.
    summary: clone
  /nodes/{node}/qemu/{vmid}/cloudinit:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get the cloudinit configuration with both current and pending values.
      tags:
      - nodes
      operationId: getNodesQemuCloudinitByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuCloudinit'
      summary: Get the cloudinit configuration with both current and pending values.
    summary: cloudinit
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Regenerate and change cloudinit config drive.
      tags:
      - nodes
      operationId: setNodesQemuCloudinitByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Regenerate and change cloudinit config drive.
  /nodes/{node}/qemu/{vmid}/cloudinit/dump:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Get automatically generated cloudinit config.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuCloudinitDump-RB'
      description: Get automatically generated cloudinit config.
      tags:
      - nodes
      operationId: getNodesQemuCloudinitDumpByNodeAndVmid
      responses: ""
      summary: Get automatically generated cloudinit config.
    summary: dump
  /nodes/{node}/qemu/{vmid}/config:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuConfig-RB'
      description: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
      tags:
      - nodes
      operationId: getNodesQemuConfigByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuConfig'
      summary: Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.
    summary: config
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Set virtual machine options (asynchronous API).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuConfig-RB'
      description: Set virtual machine options (asynchronous API).
      tags:
      - nodes
      operationId: newNodesQemuConfigByNodeAndVmid
      responses: ""
      summary: Set virtual machine options (asynchronous API).
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuConfig-RB'
      description: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
      tags:
      - nodes
      operationId: setNodesQemuConfigByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.
  /nodes/{node}/qemu/{vmid}/feature:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Check if feature for virtual machine is available.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFeature-RB'
      description: Check if feature for virtual machine is available.
      tags:
      - nodes
      operationId: getNodesQemuFeatureByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFeature'
      summary: Check if feature for virtual machine is available.
    summary: feature
  /nodes/{node}/qemu/{vmid}/firewall:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Directory index.
      tags:
      - nodes
      operationId: getNodesQemuFirewallByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewall'
      summary: Directory index.
    summary: firewall
  /nodes/{node}/qemu/{vmid}/firewall/aliases:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List aliases
      tags:
      - nodes
      operationId: getNodesQemuFirewallAliasesByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallAliases'
      summary: List aliases
    summary: aliases
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create IP or Network Alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallAliases-RB'
      description: Create IP or Network Alias.
      tags:
      - nodes
      operationId: newNodesQemuFirewallAliasesByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Create IP or Network Alias.
  /nodes/{node}/qemu/{vmid}/firewall/aliases/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Read alias.
      tags:
      - nodes
      operationId: getNodesQemuFirewallAliasesByNodeAndVmidAndName
      responses: ""
      summary: Read alias.
    delete:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Remove IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallAliases-RB'
      description: Remove IP or Network alias.
      tags:
      - nodes
      operationId: removeNodesQemuFirewallAliasesByNodeAndVmidAndName
      responses:
        "200":
          description: OK
      summary: Remove IP or Network alias.
    summary: name
    put:
      parameters:
      - name: name
        in: path
        description: Alias name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Update IP or Network alias.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallAliases-RB'
      description: Update IP or Network alias.
      tags:
      - nodes
      operationId: setNodesQemuFirewallAliasesByNodeAndVmidAndName
      responses:
        "200":
          description: OK
      summary: Update IP or Network alias.
  /nodes/{node}/qemu/{vmid}/firewall/ipset:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List IPSets
      tags:
      - nodes
      operationId: getNodesQemuFirewallIpsetByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallIpset'
      summary: List IPSets
    summary: ipset
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create new IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallIpset-RB'
      description: Create new IPSet
      tags:
      - nodes
      operationId: newNodesQemuFirewallIpsetByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Create new IPSet
  /nodes/{node}/qemu/{vmid}/firewall/ipset/{name}:
    get:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List IPSet content
      tags:
      - nodes
      operationId: getNodesQemuFirewallIpsetByNodeAndVmidAndName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallIpset-GET'
      summary: List IPSet content
    delete:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Delete IPSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallIpset-RB'
      description: Delete IPSet
      tags:
      - nodes
      operationId: removeNodesQemuFirewallIpsetByNodeAndVmidAndName
      responses:
        "200":
          description: OK
      summary: Delete IPSet
    summary: name
    post:
      parameters:
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Add IP or Network to IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallIpset-RB'
      description: Add IP or Network to IPSet.
      tags:
      - nodes
      operationId: newNodesQemuFirewallIpsetByNodeAndVmidAndName
      responses:
        "200":
          description: OK
      summary: Add IP or Network to IPSet.
  /nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}:
    get:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Read IP or Network settings from IPSet.
      tags:
      - nodes
      operationId: getNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      responses: ""
      summary: Read IP or Network settings from IPSet.
    delete:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Remove IP or Network from IPSet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallIpset-RB'
      description: Remove IP or Network from IPSet.
      tags:
      - nodes
      operationId: removeNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      responses:
        "200":
          description: OK
      summary: Remove IP or Network from IPSet.
    summary: cidr
    put:
      parameters:
      - name: cidr
        in: path
        description: Network/IP specification in CIDR format.
        required: true
        schema:
          type: string
          format: IPorCIDRorAlias
      - name: name
        in: path
        description: IP set name.
        required: true
        schema:
          type: string
          format: 
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Update IP or Network settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallIpset-RB'
      description: Update IP or Network settings
      tags:
      - nodes
      operationId: setNodesQemuFirewallIpsetByNodeAndVmidAndNameAndCidr
      responses:
        "200":
          description: OK
      summary: Update IP or Network settings
  /nodes/{node}/qemu/{vmid}/firewall/log:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Read firewall log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFirewallLog-RB'
      description: Read firewall log
      tags:
      - nodes
      operationId: getNodesQemuFirewallLogByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallLog'
      summary: Read firewall log
    summary: log
  /nodes/{node}/qemu/{vmid}/firewall/options:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get VM firewall options.
      tags:
      - nodes
      operationId: getNodesQemuFirewallOptionsByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallOptions'
      summary: Get VM firewall options.
    summary: options
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Set Firewall options.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallOptions-RB'
      description: Set Firewall options.
      tags:
      - nodes
      operationId: setNodesQemuFirewallOptionsByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Set Firewall options.
  /nodes/{node}/qemu/{vmid}/firewall/refs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuFirewallRefs-RB'
      description: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
      tags:
      - nodes
      operationId: getNodesQemuFirewallRefsByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRefs'
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest properties.
    summary: refs
  /nodes/{node}/qemu/{vmid}/firewall/rules:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List rules.
      tags:
      - nodes
      operationId: getNodesQemuFirewallRulesByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRules-GET'
      summary: List rules.
    summary: rules
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create new rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuFirewallRules-RB'
      description: Create new rule.
      tags:
      - nodes
      operationId: newNodesQemuFirewallRulesByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Create new rule.
  /nodes/{node}/qemu/{vmid}/firewall/rules/{pos}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get single rule data.
      tags:
      - nodes
      operationId: getNodesQemuFirewallRulesByNodeAndVmidAndPos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuFirewallRules'
      summary: Get single rule data.
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Delete rule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuFirewallRules-RB'
      description: Delete rule.
      tags:
      - nodes
      operationId: removeNodesQemuFirewallRulesByNodeAndVmidAndPos
      responses:
        "200":
          description: OK
      summary: Delete rule.
    summary: pos
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: pos
        in: path
        description: Update rule at position <pos>.
        required: true
        schema:
          type: integer
          format: 
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Modify rule data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuFirewallRules-RB'
      description: Modify rule data.
      tags:
      - nodes
      operationId: setNodesQemuFirewallRulesByNodeAndVmidAndPos
      responses:
        "200":
          description: OK
      summary: Modify rule data.
  /nodes/{node}/qemu/{vmid}/migrate:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Get preconditions for migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuMigrate-RB'
      description: Get preconditions for migration.
      tags:
      - nodes
      operationId: getNodesQemuMigrateByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuMigrate'
      summary: Get preconditions for migration.
    summary: migrate
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Migrate virtual machine. Creates a new migration task.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMigrate-RB'
      description: Migrate virtual machine. Creates a new migration task.
      tags:
      - nodes
      operationId: newNodesQemuMigrateByNodeAndVmid
      responses: ""
      summary: Migrate virtual machine. Creates a new migration task.
  /nodes/{node}/qemu/{vmid}/monitor:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Execute QEMU monitor commands.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMonitor-RB'
      description: Execute QEMU monitor commands.
      tags:
      - nodes
      operationId: newNodesQemuMonitorByNodeAndVmid
      responses: ""
      summary: Execute QEMU monitor commands.
    summary: monitor
  /nodes/{node}/qemu/{vmid}/move_disk:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Move volume to different storage or to a different VM.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMovedisk-RB'
      description: Move volume to different storage or to a different VM.
      tags:
      - nodes
      operationId: newNodesQemuMovediskByNodeAndVmid
      responses: ""
      summary: Move volume to different storage or to a different VM.
    summary: movedisk
  /nodes/{node}/qemu/{vmid}/mtunnel:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Migration tunnel endpoint - only for internal use by VM migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuMtunnel-RB'
      description: Migration tunnel endpoint - only for internal use by VM migration.
      tags:
      - nodes
      operationId: newNodesQemuMtunnelByNodeAndVmid
      responses: ""
      summary: Migration tunnel endpoint - only for internal use by VM migration.
    summary: mtunnel
  /nodes/{node}/qemu/{vmid}/mtunnelwebsocket:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuMtunnelwebsocket-RB'
      description: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
      tags:
      - nodes
      operationId: getNodesQemuMtunnelwebsocketByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuMtunnelwebsocket'
      summary: Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.
    summary: mtunnelwebsocket
  /nodes/{node}/qemu/{vmid}/pending:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get the virtual machine configuration with both current and pending values.
      tags:
      - nodes
      operationId: getNodesQemuPendingByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuPending'
      summary: Get the virtual machine configuration with both current and pending values.
    summary: pending
  /nodes/{node}/qemu/{vmid}/remote_migrate:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuRemotemigrate-RB'
      description: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
      tags:
      - nodes
      operationId: newNodesQemuRemotemigrateByNodeAndVmid
      responses: ""
      summary: Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!
    summary: remotemigrate
  /nodes/{node}/qemu/{vmid}/resize:
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Extend volume size.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuResize-RB'
      description: Extend volume size.
      tags:
      - nodes
      operationId: setNodesQemuResizeByNodeAndVmid
      responses: ""
      summary: Extend volume size.
    summary: resize
  /nodes/{node}/qemu/{vmid}/rrd:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Read VM RRD statistics (returns PNG)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuRrd-RB'
      description: Read VM RRD statistics (returns PNG)
      tags:
      - nodes
      operationId: getNodesQemuRrdByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuRrd'
      summary: Read VM RRD statistics (returns PNG)
    summary: rrd
  /nodes/{node}/qemu/{vmid}/rrddata:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Read VM RRD statistics
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuRrddata-RB'
      description: Read VM RRD statistics
      tags:
      - nodes
      operationId: getNodesQemuRrddataByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuRrddata'
      summary: Read VM RRD statistics
    summary: rrddata
  /nodes/{node}/qemu/{vmid}/sendkey:
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Send key event to virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuSendkey-RB'
      description: Send key event to virtual machine.
      tags:
      - nodes
      operationId: setNodesQemuSendkeyByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Send key event to virtual machine.
    summary: sendkey
  /nodes/{node}/qemu/{vmid}/snapshot:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: List all snapshots.
      tags:
      - nodes
      operationId: getNodesQemuSnapshotByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuSnapshot'
      summary: List all snapshots.
    summary: snapshot
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Snapshot a VM.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSnapshot-RB'
      description: Snapshot a VM.
      tags:
      - nodes
      operationId: newNodesQemuSnapshotByNodeAndVmid
      responses: ""
      summary: Snapshot a VM.
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: ""
      tags:
      - nodes
      operationId: getNodesQemuSnapshotByNodeAndVmidAndSnapname
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuSnapshot-GET'
      summary: ""
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Delete a VM snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesQemuSnapshot-RB'
      description: Delete a VM snapshot.
      tags:
      - nodes
      operationId: removeNodesQemuSnapshotByNodeAndVmidAndSnapname
      responses: ""
      summary: Delete a VM snapshot.
    summary: snapname
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get snapshot configuration
      tags:
      - nodes
      operationId: getNodesQemuSnapshotConfigByNodeAndVmidAndSnapname
      responses: ""
      summary: Get snapshot configuration
    summary: config
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Update snapshot metadata.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuSnapshotConfig-RB'
      description: Update snapshot metadata.
      tags:
      - nodes
      operationId: setNodesQemuSnapshotConfigByNodeAndVmidAndSnapname
      responses:
        "200":
          description: OK
      summary: Update snapshot metadata.
  /nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: snapname
        in: path
        description: The name of the snapshot.
        required: true
        schema:
          type: string
          format: pve-configid
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Rollback VM state to specified snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSnapshotRollback-RB'
      description: Rollback VM state to specified snapshot.
      tags:
      - nodes
      operationId: newNodesQemuSnapshotRollbackByNodeAndVmidAndSnapname
      responses: ""
      summary: Rollback VM state to specified snapshot.
    summary: rollback
  /nodes/{node}/qemu/{vmid}/spiceproxy:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Returns a SPICE configuration to connect to the VM.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuSpiceproxy-RB'
      description: Returns a SPICE configuration to connect to the VM.
      tags:
      - nodes
      operationId: newNodesQemuSpiceproxyByNodeAndVmid
      responses: ""
      summary: Returns a SPICE configuration to connect to the VM.
    summary: spiceproxy
  /nodes/{node}/qemu/{vmid}/status:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Directory index
      tags:
      - nodes
      operationId: getNodesQemuStatusByNodeAndVmid
      responses: ""
      summary: Directory index
    summary: status
  /nodes/{node}/qemu/{vmid}/status/current:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      description: Get virtual machine status.
      tags:
      - nodes
      operationId: getNodesQemuStatusCurrentByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuStatusCurrent'
      summary: Get virtual machine status.
    summary: current
  /nodes/{node}/qemu/{vmid}/status/reboot:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusReboot-RB'
      description: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
      tags:
      - nodes
      operationId: newNodesQemuStatusRebootByNodeAndVmid
      responses: ""
      summary: Reboot the VM by shutting it down, and starting it again. Applies pending changes.
    summary: reboot
  /nodes/{node}/qemu/{vmid}/status/reset:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Reset virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusReset-RB'
      description: Reset virtual machine.
      tags:
      - nodes
      operationId: newNodesQemuStatusResetByNodeAndVmid
      responses: ""
      summary: Reset virtual machine.
    summary: reset
  /nodes/{node}/qemu/{vmid}/status/resume:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Resume virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusResume-RB'
      description: Resume virtual machine.
      tags:
      - nodes
      operationId: newNodesQemuStatusResumeByNodeAndVmid
      responses: ""
      summary: Resume virtual machine.
    summary: resume
  /nodes/{node}/qemu/{vmid}/status/shutdown:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusShutdown-RB'
      description: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
      tags:
      - nodes
      operationId: newNodesQemuStatusShutdownByNodeAndVmid
      responses: ""
      summary: Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
    summary: shutdown
  /nodes/{node}/qemu/{vmid}/status/start:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Start virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusStart-RB'
      description: Start virtual machine.
      tags:
      - nodes
      operationId: newNodesQemuStatusStartByNodeAndVmid
      responses: ""
      summary: Start virtual machine.
    summary: start
  /nodes/{node}/qemu/{vmid}/status/stop:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusStop-RB'
      description: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
      tags:
      - nodes
      operationId: newNodesQemuStatusStopByNodeAndVmid
      responses: ""
      summary: Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.
    summary: stop
  /nodes/{node}/qemu/{vmid}/status/suspend:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Suspend virtual machine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuStatusSuspend-RB'
      description: Suspend virtual machine.
      tags:
      - nodes
      operationId: newNodesQemuStatusSuspendByNodeAndVmid
      responses: ""
      summary: Suspend virtual machine.
    summary: suspend
  /nodes/{node}/qemu/{vmid}/template:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Create a Template.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuTemplate-RB'
      description: Create a Template.
      tags:
      - nodes
      operationId: newNodesQemuTemplateByNodeAndVmid
      responses: ""
      summary: Create a Template.
    summary: template
  /nodes/{node}/qemu/{vmid}/termproxy:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Creates a TCP proxy connections.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuTermproxy-RB'
      description: Creates a TCP proxy connections.
      tags:
      - nodes
      operationId: newNodesQemuTermproxyByNodeAndVmid
      responses: ""
      summary: Creates a TCP proxy connections.
    summary: termproxy
  /nodes/{node}/qemu/{vmid}/unlink:
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Unlink/delete disk images.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesQemuUnlink-RB'
      description: Unlink/delete disk images.
      tags:
      - nodes
      operationId: setNodesQemuUnlinkByNodeAndVmid
      responses:
        "200":
          description: OK
      summary: Unlink/delete disk images.
    summary: unlink
  /nodes/{node}/qemu/{vmid}/vncproxy:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Creates a TCP VNC proxy connections.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesQemuVncproxy-RB'
      description: Creates a TCP VNC proxy connections.
      tags:
      - nodes
      operationId: newNodesQemuVncproxyByNodeAndVmid
      responses: ""
      summary: Creates a TCP VNC proxy connections.
    summary: vncproxy
  /nodes/{node}/qemu/{vmid}/vncwebsocket:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: vmid
        in: path
        description: The (unique) ID of the VM.
        required: true
        schema:
          type: integer
          format: pve-vmid
      requestBody:
        description: Opens a weksocket for VNC traffic.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQemuVncwebsocket-RB'
      description: Opens a weksocket for VNC traffic.
      tags:
      - nodes
      operationId: getNodesQemuVncwebsocketByNodeAndVmid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQemuVncwebsocket'
      summary: Opens a weksocket for VNC traffic.
    summary: vncwebsocket
  /nodes/{node}/query-url-metadata:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: 'Query metadata of an URL: file size, file name and mime type.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesQueryurlmetadata-RB'
      description: 'Query metadata of an URL: file size, file name and mime type.'
      tags:
      - nodes
      operationId: getNodesQueryurlmetadataByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesQueryurlmetadata'
      summary: 'Query metadata of an URL: file size, file name and mime type.'
    summary: query-url-metadata
  /nodes/{node}/replication:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: List status of all replication jobs on this node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesReplication-RB'
      description: List status of all replication jobs on this node.
      tags:
      - nodes
      operationId: getNodesReplicationByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplication'
      summary: List status of all replication jobs on this node.
    summary: replication
  /nodes/{node}/replication/{id}:
    get:
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Directory index.
      tags:
      - nodes
      operationId: getNodesReplicationByNodeAndId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplication-GET'
      summary: Directory index.
    summary: id
  /nodes/{node}/replication/{id}/log:
    get:
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Read replication job log.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesReplicationLog-RB'
      description: Read replication job log.
      tags:
      - nodes
      operationId: getNodesReplicationLogByNodeAndId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesReplicationLog'
      summary: Read replication job log.
    summary: log
  /nodes/{node}/replication/{id}/schedule_now:
    post:
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Schedule replication job to start as soon as possible.
      tags:
      - nodes
      operationId: newNodesReplicationSchedulenowByNodeAndId
      responses: ""
      summary: Schedule replication job to start as soon as possible.
    summary: schedulenow
  /nodes/{node}/replication/{id}/status:
    get:
      parameters:
      - name: id
        in: path
        description: Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
        required: true
        schema:
          type: string
          format: pve-replication-job-id
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get replication job status.
      tags:
      - nodes
      operationId: getNodesReplicationStatusByNodeAndId
      responses: ""
      summary: Get replication job status.
    summary: status
  /nodes/{node}/report:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Gather various systems information about a node
      tags:
      - nodes
      operationId: getNodesReportByNode
      responses: ""
      summary: Gather various systems information about a node
    summary: report
  /nodes/{node}/rrd:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Read node RRD statistics (returns PNG)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesRrd-RB'
      description: Read node RRD statistics (returns PNG)
      tags:
      - nodes
      operationId: getNodesRrdByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesRrd'
      summary: Read node RRD statistics (returns PNG)
    summary: rrd
  /nodes/{node}/rrddata:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Read node RRD statistics
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesRrddata-RB'
      description: Read node RRD statistics
      tags:
      - nodes
      operationId: getNodesRrddataByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesRrddata'
      summary: Read node RRD statistics
    summary: rrddata
  /nodes/{node}/scan:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Index of available scan methods
      tags:
      - nodes
      operationId: getNodesScanByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScan'
      summary: Index of available scan methods
    summary: scan
  /nodes/{node}/scan/cifs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Scan remote CIFS server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanCifs-RB'
      description: Scan remote CIFS server.
      tags:
      - nodes
      operationId: getNodesScanCifsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanCifs'
      summary: Scan remote CIFS server.
    summary: cifs
  /nodes/{node}/scan/glusterfs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Scan remote GlusterFS server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanGlusterfs-RB'
      description: Scan remote GlusterFS server.
      tags:
      - nodes
      operationId: getNodesScanGlusterfsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanGlusterfs'
      summary: Scan remote GlusterFS server.
    summary: glusterfs
  /nodes/{node}/scan/iscsi:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Scan remote iSCSI server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanIscsi-RB'
      description: Scan remote iSCSI server.
      tags:
      - nodes
      operationId: getNodesScanIscsiByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanIscsi'
      summary: Scan remote iSCSI server.
    summary: iscsi
  /nodes/{node}/scan/lvm:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: List local LVM volume groups.
      tags:
      - nodes
      operationId: getNodesScanLvmByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanLvm'
      summary: List local LVM volume groups.
    summary: lvm
  /nodes/{node}/scan/lvmthin:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: List local LVM Thin Pools.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanLvmthin-RB'
      description: List local LVM Thin Pools.
      tags:
      - nodes
      operationId: getNodesScanLvmthinByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanLvmthin'
      summary: List local LVM Thin Pools.
    summary: lvmthin
  /nodes/{node}/scan/nfs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Scan remote NFS server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanNfs-RB'
      description: Scan remote NFS server.
      tags:
      - nodes
      operationId: getNodesScanNfsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanNfs'
      summary: Scan remote NFS server.
    summary: nfs
  /nodes/{node}/scan/pbs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Scan remote Proxmox Backup Server.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesScanPbs-RB'
      description: Scan remote Proxmox Backup Server.
      tags:
      - nodes
      operationId: getNodesScanPbsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanPbs'
      summary: Scan remote Proxmox Backup Server.
    summary: pbs
  /nodes/{node}/scan/zfs:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Scan zfs pool list on local node.
      tags:
      - nodes
      operationId: getNodesScanZfsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesScanZfs'
      summary: Scan zfs pool list on local node.
    summary: zfs
  /nodes/{node}/sdn:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: SDN index.
      tags:
      - nodes
      operationId: getNodesSdnByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdn'
      summary: SDN index.
    summary: sdn
  /nodes/{node}/sdn/zones:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Get status for all zones.
      tags:
      - nodes
      operationId: getNodesSdnZonesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdnZones'
      summary: Get status for all zones.
    summary: zones
  /nodes/{node}/sdn/zones/{zone}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      description: ""
      tags:
      - nodes
      operationId: getNodesSdnZonesByNodeAndZone
      responses: ""
      summary: ""
    summary: zone
  /nodes/{node}/sdn/zones/{zone}/content:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: zone
        in: path
        description: The SDN zone object identifier.
        required: true
        schema:
          type: string
          format: pve-sdn-zone-id
      description: List zone content.
      tags:
      - nodes
      operationId: getNodesSdnZonesContentByNodeAndZone
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSdnZonesContent'
      summary: List zone content.
    summary: content
  /nodes/{node}/services:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Service list.
      tags:
      - nodes
      operationId: getNodesServicesByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesServices'
      summary: Service list.
    summary: services
  /nodes/{node}/services/{service}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      description: Directory index
      tags:
      - nodes
      operationId: getNodesServicesByNodeAndService
      responses: ""
      summary: Directory index
    summary: service
  /nodes/{node}/services/{service}/reload:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      description: Reload service. Falls back to restart if service cannot be reloaded.
      tags:
      - nodes
      operationId: newNodesServicesReloadByNodeAndService
      responses: ""
      summary: Reload service. Falls back to restart if service cannot be reloaded.
    summary: reload
  /nodes/{node}/services/{service}/restart:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      description: Hard restart service. Use reload if you want to reduce interruptions.
      tags:
      - nodes
      operationId: newNodesServicesRestartByNodeAndService
      responses: ""
      summary: Hard restart service. Use reload if you want to reduce interruptions.
    summary: restart
  /nodes/{node}/services/{service}/start:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      description: Start service.
      tags:
      - nodes
      operationId: newNodesServicesStartByNodeAndService
      responses: ""
      summary: Start service.
    summary: start
  /nodes/{node}/services/{service}/state:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      description: Read service properties
      tags:
      - nodes
      operationId: getNodesServicesStateByNodeAndService
      responses: ""
      summary: Read service properties
    summary: state
  /nodes/{node}/services/{service}/stop:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: service
        in: path
        description: Service ID
        required: true
        schema:
          type: string
          format: 
      description: Stop service.
      tags:
      - nodes
      operationId: newNodesServicesStopByNodeAndService
      responses: ""
      summary: Stop service.
    summary: stop
  /nodes/{node}/spiceshell:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Creates a SPICE shell.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSpiceshell-RB'
      description: Creates a SPICE shell.
      tags:
      - nodes
      operationId: newNodesSpiceshellByNode
      responses: ""
      summary: Creates a SPICE shell.
    summary: spiceshell
  /nodes/{node}/startall:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Start all VMs and containers located on this node (by default only those with onboot=1).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStartall-RB'
      description: Start all VMs and containers located on this node (by default only those with onboot=1).
      tags:
      - nodes
      operationId: newNodesStartallByNode
      responses: ""
      summary: Start all VMs and containers located on this node (by default only those with onboot=1).
    summary: startall
  /nodes/{node}/status:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Read node status
      tags:
      - nodes
      operationId: getNodesStatusByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStatus'
      summary: Read node status
    summary: status
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Reboot or shutdown a node.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStatus-RB'
      description: Reboot or shutdown a node.
      tags:
      - nodes
      operationId: newNodesStatusByNode
      responses:
        "200":
          description: OK
      summary: Reboot or shutdown a node.
  /nodes/{node}/stopall:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Stop all VMs and Containers.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStopall-RB'
      description: Stop all VMs and Containers.
      tags:
      - nodes
      operationId: newNodesStopallByNode
      responses: ""
      summary: Stop all VMs and Containers.
    summary: stopall
  /nodes/{node}/storage:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Get status for all datastores.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorage-RB'
      description: Get status for all datastores.
      tags:
      - nodes
      operationId: getNodesStorageByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorage'
      summary: Get status for all datastores.
    summary: storage
  /nodes/{node}/storage/{storage}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      description: ""
      tags:
      - nodes
      operationId: getNodesStorageByNodeAndStorage
      responses: ""
      summary: ""
    summary: storage
  /nodes/{node}/storage/{storage}/content:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: List storage content.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageContent-RB'
      description: List storage content.
      tags:
      - nodes
      operationId: getNodesStorageContentByNodeAndStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageContent-GET'
      summary: List storage content.
    summary: content
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Allocate disk images.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageContent-RB'
      description: Allocate disk images.
      tags:
      - nodes
      operationId: newNodesStorageContentByNodeAndStorage
      responses: ""
      summary: Allocate disk images.
  /nodes/{node}/storage/{storage}/content/{volume}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: volume
        in: path
        description: Volume identifier
        required: true
        schema:
          type: string
          format: 
      description: Get volume attributes
      tags:
      - nodes
      operationId: getNodesStorageContentByNodeAndStorageAndVolume
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageContent'
      summary: Get volume attributes
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: volume
        in: path
        description: Volume identifier
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Delete volume
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesStorageContent-RB'
      description: Delete volume
      tags:
      - nodes
      operationId: removeNodesStorageContentByNodeAndStorageAndVolume
      responses: ""
      summary: Delete volume
    summary: volume
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: volume
        in: path
        description: Source volume identifier
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Copy a volume. This is experimental code - do not use.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageContent-RB'
      description: Copy a volume. This is experimental code - do not use.
      tags:
      - nodes
      operationId: newNodesStorageContentByNodeAndStorageAndVolume
      responses: ""
      summary: Copy a volume. This is experimental code - do not use.
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      - name: volume
        in: path
        description: Volume identifier
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Update volume attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesStorageContent-RB'
      description: Update volume attributes
      tags:
      - nodes
      operationId: setNodesStorageContentByNodeAndStorageAndVolume
      responses:
        "200":
          description: OK
      summary: Update volume attributes
  /nodes/{node}/storage/{storage}/download-url:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Download templates, ISO images, OVAs and VM images by using an URL.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageDownloadurl-RB'
      description: Download templates, ISO images, OVAs and VM images by using an URL.
      tags:
      - nodes
      operationId: newNodesStorageDownloadurlByNodeAndStorage
      responses: ""
      summary: Download templates, ISO images, OVAs and VM images by using an URL.
    summary: download-url
  /nodes/{node}/storage/{storage}/file-restore/download:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Extract a file or directory (as zip archive) from a PBS backup.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageFilerestoreDownload-RB'
      description: Extract a file or directory (as zip archive) from a PBS backup.
      tags:
      - nodes
      operationId: getNodesStorageFilerestoreDownloadByNodeAndStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageFilerestoreDownload'
      summary: Extract a file or directory (as zip archive) from a PBS backup.
    summary: download
  /nodes/{node}/storage/{storage}/file-restore/list:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: List files and directories for single file restore under the given path.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageFilerestoreList-RB'
      description: List files and directories for single file restore under the given path.
      tags:
      - nodes
      operationId: getNodesStorageFilerestoreListByNodeAndStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageFilerestoreList'
      summary: List files and directories for single file restore under the given path.
    summary: list
  /nodes/{node}/storage/{storage}/import-metadata:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageImportmetadata-RB'
      description: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
      tags:
      - nodes
      operationId: getNodesStorageImportmetadataByNodeAndStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageImportmetadata'
      summary: Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM
    summary: import-metadata
  /nodes/{node}/storage/{storage}/prunebackups:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStoragePrunebackups-RB'
      description: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
      tags:
      - nodes
      operationId: getNodesStoragePrunebackupsByNodeAndStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStoragePrunebackups'
      summary: 'Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.'
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Prune backups. Only those using the standard naming scheme are considered.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-NodesStoragePrunebackups-RB'
      description: Prune backups. Only those using the standard naming scheme are considered.
      tags:
      - nodes
      operationId: removeNodesStoragePrunebackupsByNodeAndStorage
      responses: ""
      summary: Prune backups. Only those using the standard naming scheme are considered.
    summary: prunebackups
  /nodes/{node}/storage/{storage}/rrd:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Read storage RRD statistics (returns PNG).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageRrd-RB'
      description: Read storage RRD statistics (returns PNG).
      tags:
      - nodes
      operationId: getNodesStorageRrdByNodeAndStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageRrd'
      summary: Read storage RRD statistics (returns PNG).
    summary: rrd
  /nodes/{node}/storage/{storage}/rrddata:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Read storage RRD statistics.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesStorageRrddata-RB'
      description: Read storage RRD statistics.
      tags:
      - nodes
      operationId: getNodesStorageRrddataByNodeAndStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesStorageRrddata'
      summary: Read storage RRD statistics.
    summary: rrddata
  /nodes/{node}/storage/{storage}/status:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      description: Read storage status.
      tags:
      - nodes
      operationId: getNodesStorageStatusByNodeAndStorage
      responses: ""
      summary: Read storage status.
    summary: status
  /nodes/{node}/storage/{storage}/upload:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Upload templates, ISO images, OVAs and VM images.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesStorageUpload-RB'
      description: Upload templates, ISO images, OVAs and VM images.
      tags:
      - nodes
      operationId: newNodesStorageUploadByNodeAndStorage
      responses: ""
      summary: Upload templates, ISO images, OVAs and VM images.
    summary: upload
  /nodes/{node}/subscription:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Read subscription info.
      tags:
      - nodes
      operationId: getNodesSubscriptionByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSubscription'
      summary: Read subscription info.
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Delete subscription key of this node.
      tags:
      - nodes
      operationId: removeNodesSubscriptionByNode
      responses:
        "200":
          description: OK
      summary: Delete subscription key of this node.
    summary: subscription
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Update subscription info.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSubscription-RB'
      description: Update subscription info.
      tags:
      - nodes
      operationId: newNodesSubscriptionByNode
      responses:
        "200":
          description: OK
      summary: Update subscription info.
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Set subscription key.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesSubscription-RB'
      description: Set subscription key.
      tags:
      - nodes
      operationId: setNodesSubscriptionByNode
      responses:
        "200":
          description: OK
      summary: Set subscription key.
  /nodes/{node}/suspendall:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Suspend all VMs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesSuspendall-RB'
      description: Suspend all VMs.
      tags:
      - nodes
      operationId: newNodesSuspendallByNode
      responses: ""
      summary: Suspend all VMs.
    summary: suspendall
  /nodes/{node}/syslog:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Read system log
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesSyslog-RB'
      description: Read system log
      tags:
      - nodes
      operationId: getNodesSyslogByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSyslog'
      summary: Read system log
    summary: syslog
  /nodes/{node}/tasks:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Read task list for one node (finished tasks).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesTasks-RB'
      description: Read task list for one node (finished tasks).
      tags:
      - nodes
      operationId: getNodesTasksByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasks'
      summary: Read task list for one node (finished tasks).
    summary: tasks
  /nodes/{node}/tasks/{upid}:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: upid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: 
      description: ""
      tags:
      - nodes
      operationId: getNodesTasksByNodeAndUpid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasks-GET'
      summary: ""
    delete:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: upid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: 
      description: Stop a task.
      tags:
      - nodes
      operationId: removeNodesTasksByNodeAndUpid
      responses:
        "200":
          description: OK
      summary: Stop a task.
    summary: upid
  /nodes/{node}/tasks/{upid}/log:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: upid
        in: path
        description: The task's unique ID.
        required: true
        schema:
          type: string
          format: 
      requestBody:
        description: Read task log.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesTasksLog-RB'
      description: Read task log.
      tags:
      - nodes
      operationId: getNodesTasksLogByNodeAndUpid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasksLog'
      summary: Read task log.
    summary: log
  /nodes/{node}/tasks/{upid}/status:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      - name: upid
        in: path
        description: The task's unique ID.
        required: true
        schema:
          type: string
          format: 
      description: Read task status.
      tags:
      - nodes
      operationId: getNodesTasksStatusByNodeAndUpid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTasksStatus'
      summary: Read task status.
    summary: status
  /nodes/{node}/termproxy:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Creates a VNC Shell proxy.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesTermproxy-RB'
      description: Creates a VNC Shell proxy.
      tags:
      - nodes
      operationId: newNodesTermproxyByNode
      responses: ""
      summary: Creates a VNC Shell proxy.
    summary: termproxy
  /nodes/{node}/time:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: Read server time and time zone settings.
      tags:
      - nodes
      operationId: getNodesTimeByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesTime'
      summary: Read server time and time zone settings.
    summary: time
    put:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Set time zone.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-NodesTime-RB'
      description: Set time zone.
      tags:
      - nodes
      operationId: setNodesTimeByNode
      responses:
        "200":
          description: OK
      summary: Set time zone.
  /nodes/{node}/version:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      description: API version details
      tags:
      - nodes
      operationId: getNodesVersionByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVersion'
      summary: API version details
    summary: version
  /nodes/{node}/vncshell:
    post:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Creates a VNC Shell proxy.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesVncshell-RB'
      description: Creates a VNC Shell proxy.
      tags:
      - nodes
      operationId: newNodesVncshellByNode
      responses: ""
      summary: Creates a VNC Shell proxy.
    summary: vncshell
  /nodes/{node}/vncwebsocket:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Opens a websocket for VNC traffic.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVncwebsocket-RB'
      description: Opens a websocket for VNC traffic.
      tags:
      - nodes
      operationId: getNodesVncwebsocketByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVncwebsocket'
      summary: Opens a websocket for VNC traffic.
    summary: vncwebsocket
  /nodes/{node}/vzdump:
    post:
      parameters:
      - name: node
        in: path
        description: Only run if executed on this node.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Create backup.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-NodesVzdump-RB'
      description: Create backup.
      tags:
      - nodes
      operationId: newNodesVzdumpByNode
      responses: ""
      summary: Create backup.
    summary: vzdump
  /nodes/{node}/vzdump/defaults:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Get the currently configured vzdump defaults.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVzdumpDefaults-RB'
      description: Get the currently configured vzdump defaults.
      tags:
      - nodes
      operationId: getNodesVzdumpDefaultsByNode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesVzdumpDefaults'
      summary: Get the currently configured vzdump defaults.
    summary: defaults
  /nodes/{node}/vzdump/extractconfig:
    get:
      parameters:
      - name: node
        in: path
        description: The cluster node name.
        required: true
        schema:
          type: string
          format: pve-node
      requestBody:
        description: Extract configuration from vzdump backup archive.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-NodesVzdumpExtractconfig-RB'
      description: Extract configuration from vzdump backup archive.
      tags:
      - nodes
      operationId: getNodesVzdumpExtractconfigByNode
      responses: ""
      summary: Extract configuration from vzdump backup archive.
    summary: extractconfig
  /nodes/{node}/wakeonlan:
    post:
      parameters:
      - name: node
        in: path
        description: target node for wake on LAN packet
        required: true
        schema:
          type: string
          format: pve-node
      description: Try to wake a node via 'wake on LAN' network packet.
      tags:
      - nodes
      operationId: newNodesWakeonlanByNode
      responses: ""
      summary: Try to wake a node via 'wake on LAN' network packet.
    summary: wakeonlan
  /pools:
    get:
      requestBody:
        description: List pools or get pool configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Pools-RB'
      description: List pools or get pool configuration.
      tags:
      - pools
      operationId: getPools
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pools-GET'
      summary: List pools or get pool configuration.
    delete:
      requestBody:
        description: Delete pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DELETE-Pools-RB'
      description: Delete pool.
      tags:
      - pools
      operationId: removePools
      responses:
        "200":
          description: OK
      summary: Delete pool.
    summary: pools
    post:
      requestBody:
        description: Create new pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-Pools-RB'
      description: Create new pool.
      tags:
      - pools
      operationId: newPools
      responses:
        "200":
          description: OK
      summary: Create new pool.
    put:
      requestBody:
        description: Update pool.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Pools-RB'
      description: Update pool.
      tags:
      - pools
      operationId: setPools
      responses:
        "200":
          description: OK
      summary: Update pool.
  /pools/{poolid}:
    get:
      parameters:
      - name: poolid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-poolid
      requestBody:
        description: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Pools-RB'
      description: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
      tags:
      - pools
      operationId: getPoolsByPoolid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pools'
      summary: Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').
    delete:
      parameters:
      - name: poolid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-poolid
      description: Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').
      tags:
      - pools
      operationId: removePoolsByPoolid
      responses:
        "200":
          description: OK
      summary: Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').
    summary: poolid
    put:
      parameters:
      - name: poolid
        in: path
        description: 
        required: true
        schema:
          type: string
          format: pve-poolid
      requestBody:
        description: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Pools-RB'
      description: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
      tags:
      - pools
      operationId: setPoolsByPoolid
      responses:
        "200":
          description: OK
      summary: Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).
  /storage:
    get:
      requestBody:
        description: Storage index.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GET-Storage-RB'
      description: Storage index.
      tags:
      - storage
      operationId: getStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage-GET'
      summary: Storage index.
    summary: storage
    post:
      requestBody:
        description: Create a new storage.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POST-Storage-RB'
      description: Create a new storage.
      tags:
      - storage
      operationId: newStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
      summary: Create a new storage.
  /storage/{storage}:
    get:
      parameters:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      description: Read storage configuration.
      tags:
      - storage
      operationId: getStorageByStorage
      responses: ""
      summary: Read storage configuration.
    delete:
      parameters:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      description: Delete storage configuration.
      tags:
      - storage
      operationId: removeStorageByStorage
      responses:
        "200":
          description: OK
      summary: Delete storage configuration.
    summary: storage
    put:
      parameters:
      - name: storage
        in: path
        description: The storage identifier.
        required: true
        schema:
          type: string
          format: pve-storage-id
      requestBody:
        description: Update storage configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUT-Storage-RB'
      description: Update storage configuration.
      tags:
      - storage
      operationId: setStorageByStorage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage-PUT'
      summary: Update storage configuration.
  /version:
    get:
      tags:
      - version
      operationId: getVersion
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      summary: API version details, including some parts of the global datacenter config.
      description: API version details, including some parts of the global datacenter config.
    summary: version
components:
  schemas:
    POST-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        comment:
          type: string
        cidr:
          type: string
        nomatch:
          type: boolean
    PUT-AccessRoles-RB:
      type: object
      properties:
        append:
          type: boolean
        privs:
          type: string
    GET-NodesAptChangelog-RB:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
    GET-Storage-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
    POST-NodesLxcVncproxy-RB:
      type: object
      properties:
        width:
          maximum: 4096
          type: integer
          minimum: 16
        websocket:
          type: boolean
        height:
          maximum: 2160
          type: integer
          minimum: 16
    GET-NodesCephLog-RB:
      type: object
      properties:
        limit:
          type: integer
        start:
          type: integer
    POST-NodesCertificatesAcmeCertificate-RB:
      type: object
      properties:
        force:
          type: boolean
    NodesQemuRrd:
      type: object
      properties:
        filename:
          type: string
    NodesTasksLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    POST-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        comment:
          type: string
        cidr:
          type: string
        nomatch:
          type: boolean
    NodesCapabilitiesQemuMachines:
      type: array
      items:
        type: object
        properties:
          changes:
            type: string
          version:
            type: string
          type:
            type: string
            enum:
            - q35
            - i440fx
          id:
            type: string
    PUT-ClusterFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        rename:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 64
          type: string
        cidr:
          type: string
    ClusterNotificationsEndpointsSmtp:
      type: object
      properties:
        name:
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        port:
          type: integer
        username:
          type: string
        comment:
          type: string
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        from-address:
          type: string
        author:
          type: string
        disable:
          type: boolean
        server:
          type: string
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
        digest:
          maxLength: 64
          type: string
    GET-NodesLxcFirewallRefs-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - alias
          - ipset
    GET-ClusterConfigJoin-RB:
      type: object
      properties:
        node:
          type: string
    POST-ClusterFirewallIpset-RB:
      type: object
      properties:
        comment:
          type: string
        cidr:
          type: string
        nomatch:
          type: boolean
    ClusterMetricsExport:
      type: object
      properties:
        data:
          type: array
          items:
            additionalProperties: 0
            properties:
              id:
                description: Unique identifier for this metric object, for instance 'node/<nodename>' or 'qemu/<vmid>'.
                type: string
              metric:
                description: Name of the metric.
                type: string
              timestamp:
                description: Time at which this metric was observed
                type: integer
              type:
                description: Type of the metric.
                enum:
                - gauge
                - counter
                - derive
                type: string
              value:
                description: Metric value.
                type: number
            type: object
    GET-NodesStorageContent-RB:
      type: object
      properties:
        content:
          type: string
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
    NodesVncwebsocket:
      type: object
      properties:
        port:
          type: string
    ClusterNotificationsEndpointsSmtp-GET:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          mailto:
            type: array
            items:
              format: email-or-username
              type: string
          port:
            type: integer
          username:
            type: string
          comment:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          mailto-user:
            type: array
            items:
              format: pve-userid
              type: string
          from-address:
            type: string
          author:
            type: string
          disable:
            type: boolean
          server:
            type: string
          mode:
            type: string
            enum:
            - insecure
            - starttls
            - tls
    ClusterJobsScheduleanalyze:
      type: array
      items:
        type: object
        properties:
          timestamp:
            type: integer
          utc:
            type: string
    GET-ClusterMappingPci-RB:
      type: object
      properties:
        check-node:
          type: string
    NodesHardware:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
    PUT-ClusterBackup-RB:
      type: object
      properties:
        enabled:
          type: boolean
        lockwait:
          type: integer
        starttime:
          pattern: '\d{1,2}:\d{1,2}'
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        quiet:
          type: boolean
        mailnotification:
          type: string
          enum:
          - always
          - failure
        exclude-path:
          type: array
          items:
            type: string
        dow:
          type: string
        node:
          type: string
        tmpdir:
          type: string
        stdexcludes:
          type: boolean
        maxfiles:
          type: integer
          minimum: 1
        vmid:
          type: string
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        exclude:
          type: string
        fleecing:
          type: string
        mailto:
          type: string
        repeat-missed:
          type: boolean
        storage:
          type: string
        notes-template:
          maxLength: 1024
          type: string
        performance:
          type: string
        notification-target:
          type: string
        remove:
          type: boolean
        bwlimit:
          type: integer
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        script:
          type: string
        dumpdir:
          type: string
        pool:
          type: string
        prune-backups:
          type: string
        stopwait:
          type: integer
        delete:
          type: string
        schedule:
          maxLength: 128
          type: string
        pigz:
          type: integer
        stop:
          type: boolean
        protected:
          type: boolean
        comment:
          maxLength: 512
          type: string
        all:
          type: boolean
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        zstd:
          type: integer
        ionice:
          type: integer
          maximum: 8
    NodesLxc:
      type: array
      items:
        type: object
        properties:
          maxswap:
            type: integer
          cpu:
            type: number
          template:
            type: boolean
          lock:
            type: string
          name:
            type: string
          mem:
            type: integer
          uptime:
            type: integer
          maxmem:
            type: integer
          maxdisk:
            type: integer
          cpus:
            type: number
          tags:
            type: string
          vmid:
            maximum: 999999999
            type: integer
            minimum: 100
          status:
            type: string
            enum:
            - stopped
            - running
          diskwrite:
            type: integer
          diskread:
            type: integer
          netout:
            type: integer
          netin:
            type: integer
          disk:
            type: integer
    NodesTasks:
      type: array
      items:
        type: object
        properties:
          upid:
            title: UPID
            type: string
          node:
            title: Node
            type: string
          type:
            title: Type
            type: string
          pstart:
            type: integer
          user:
            title: User
            type: string
          status:
            title: Status
            type: string
          id:
            title: ID
            type: string
          pid:
            title: PID
            type: integer
          starttime:
            title: Starttime
            type: integer
          endtime:
            title: Endtime
            type: integer
    POST-ClusterJobsRealmsync-RB:
      type: object
      properties:
        enabled:
          type: boolean
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        enable-new:
          type: boolean
        realm:
          maxLength: 32
          type: string
        schedule:
          maxLength: 128
          type: string
        comment:
          maxLength: 512
          type: string
    DELETE-NodesQemuSnapshot-RB:
      type: object
      properties:
        force:
          type: boolean
    GET-AccessUsersTfa-RB:
      type: object
      properties:
        multiple:
          type: boolean
    PUT-NodesQemuSnapshotConfig-RB:
      type: object
      properties:
        description:
          type: string
    ClusterFirewallRefs:
      type: array
      items:
        type: object
        properties:
          ref:
            type: string
          comment:
            type: string
          name:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          scope:
            type: string
    NodesScanCifs:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
          share:
            type: string
    AccessAcl:
      type: array
      items:
        type: object
        properties:
          ugid:
            type: string
          roleid:
            type: string
          propagate:
            type: boolean
          path:
            type: string
          type:
            type: string
            enum:
            - user
            - group
            - token
    NodesCertificatesAcme:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesQemuFirewallOptions-RB:
      type: object
      properties:
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        delete:
          type: string
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ndp:
          type: boolean
        ipfilter:
          type: boolean
        dhcp:
          type: boolean
        radv:
          type: boolean
        macfilter:
          type: boolean
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        digest:
          maxLength: 64
          type: string
        enable:
          type: boolean
    POST-AccessRoles-RB:
      type: object
      properties:
        privs:
          type: string
        roleid:
          type: string
    NodesLxcFirewallLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    GET-NodesRrd-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        ds:
          type: string
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    ClusterBackupinfoNotbackedup:
      type: array
      items:
        type: object
        properties:
          vmid:
            type: integer
          name:
            type: string
          type:
            type: string
            enum:
            - qemu
            - lxc
    POST-ClusterSdnVnets-RB:
      type: object
      properties:
        vnet:
          type: string
        type:
          type: string
          enum:
          - vnet
        zone:
          type: string
        vlanaware:
          type: boolean
        tag:
          type: integer
        alias:
          pattern: (?^i:[\(\)-_.\w\d\s]{0,256})
          maxLength: 256
          type: string
        isolate-ports:
          type: boolean
    DELETE-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        mac:
          type: string
        ip:
          type: string
    POST-ClusterFirewallGroups-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        pos:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    POST-NodesMigrateall-RB:
      type: object
      properties:
        target:
          type: string
        vms:
          type: string
        with-local-disks:
          type: boolean
        maxworkers:
          type: integer
          minimum: 1
    POST-ClusterHaGroups-RB:
      type: object
      properties:
        restricted:
          type: boolean
        type:
          type: string
          enum:
          - group
        group:
          type: string
        nofailback:
          type: boolean
        nodes:
          type: string
        comment:
          maxLength: 4096
          type: string
    POST-NodesTermproxy-RB:
      type: object
      properties:
        cmd:
          type: string
          enum:
          - ceph_install
          - upgrade
          - login
        cmd-opts:
          type: string
    NodesQemuFirewallOptions:
      type: object
      properties:
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        dhcp:
          type: boolean
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ndp:
          type: boolean
        ipfilter:
          type: boolean
        radv:
          type: boolean
        macfilter:
          type: boolean
        enable:
          type: boolean
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    NodesLxcFirewallRefs:
      type: array
      items:
        type: object
        properties:
          ref:
            type: string
          comment:
            type: string
          name:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          scope:
            type: string
    ClusterFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
          nomatch:
            type: boolean
    GET-NodesFirewallLog-RB:
      type: object
      properties:
        limit:
          type: integer
        start:
          type: integer
        since:
          type: integer
        until:
          type: integer
    DELETE-ClusterFirewallIpset-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    NodesQemuAgentExecstatus:
      type: object
      properties:
        out-data:
          type: string
        exited:
          type: boolean
        err-data:
          type: string
        exitcode:
          type: integer
        err-truncated:
          type: boolean
        out-truncated:
          type: boolean
        signal:
          type: integer
    POST-ClusterNotificationsEndpointsGotify-RB:
      type: object
      properties:
        server:
          type: string
        comment:
          type: string
        disable:
          type: boolean
        name:
          type: string
        token:
          type: string
    NodesQemuSnapshot:
      type: array
      items:
        type: object
        properties:
          snaptime:
            type: integer
          vmstate:
            type: boolean
          name:
            type: string
          description:
            type: string
          parent:
            type: string
    NodesQemuCloudinit:
      type: array
      items:
        type: object
        properties:
          delete:
            type: integer
            maximum: 1
          pending:
            type: string
          value:
            type: string
          key:
            type: string
    ClusterNotificationsEndpoints:
      type: array
      items:
        type: object
        properties: {}
    POST-AccessOpenidLogin-RB:
      type: object
      properties:
        redirect-url:
          maxLength: 255
          type: string
        code:
          maxLength: 4096
          type: string
        state:
          maxLength: 1024
          type: string
    POST-NodesHosts-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        data:
          type: string
    GET-NodesDisksList-RB:
      type: object
      properties:
        skipsmart:
          type: boolean
        include-partitions:
          type: boolean
        type:
          type: string
          enum:
          - unused
          - journal_disks
    PUT-ClusterJobsRealmsync-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        enabled:
          type: boolean
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        enable-new:
          type: boolean
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        schedule:
          maxLength: 128
          type: string
        comment:
          maxLength: 512
          type: string
    PUT-ClusterCephFlags-RB:
      type: object
      properties:
        value:
          type: boolean
    GET-NodesStoragePrunebackups-RB:
      type: object
      properties:
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
        prune-backups:
          type: string
        type:
          type: string
          enum:
          - qemu
          - lxc
    NodesCephMgr:
      type: array
      items:
        type: object
        properties:
          host:
            type: string
          name:
            type: 
          state:
            type: string
          addr:
            type: string
    NodesQemuFirewallIpset:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          name:
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
            maxLength: 64
            type: string
    DELETE-NodesStorageContent-RB:
      type: object
      properties:
        delay:
          maximum: 30
          type: integer
          minimum: 1
    PUT-NodesLxcFirewallOptions-RB:
      type: object
      properties:
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        delete:
          type: string
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ndp:
          type: boolean
        ipfilter:
          type: boolean
        dhcp:
          type: boolean
        radv:
          type: boolean
        macfilter:
          type: boolean
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        digest:
          maxLength: 64
          type: string
        enable:
          type: boolean
    NodesDisksDirectory:
      type: array
      items:
        type: object
        properties:
          device:
            type: string
          options:
            type: string
          unitfile:
            type: string
          path:
            type: string
          type:
            type: string
    NodesQemuStatusCurrent:
      type: object
      properties:
        agent:
          type: boolean
        template:
          type: boolean
        status:
          type: string
          enum:
          - stopped
          - running
        cpu:
          type: number
        serial:
          type: boolean
        lock:
          type: string
        clipboard:
          type: string
          enum:
          - vnc
        name:
          type: string
        mem:
          type: integer
        running-qemu:
          type: string
        maxmem:
          type: integer
        spice:
          type: boolean
        maxdisk:
          type: integer
        pid:
          type: integer
        cpus:
          type: number
        qmpstatus:
          type: string
        tags:
          type: string
        uptime:
          type: integer
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
        running-machine:
          type: string
        diskwrite:
          type: integer
        diskread:
          type: integer
        ha:
          type: object
        netin:
          type: integer
        netout:
          type: integer
    POST-ClusterConfigNodes-RB:
      type: object
      properties:
        votes:
          type: integer
        apiversion:
          type: integer
        link[n]:
          type: string
        nodeid:
          type: integer
          minimum: 1
        new_node_ip:
          type: string
        force:
          type: boolean
    POST-ClusterSdnZones-RB:
      type: object
      properties:
        dnszone:
          type: string
        dhcp:
          type: string
          enum:
          - dnsmasq
        dns:
          type: string
        reversedns:
          type: string
        disable-arp-nd-suppression:
          type: boolean
        mtu:
          type: integer
        nodes:
          type: string
        advertise-subnets:
          type: boolean
        bridge:
          type: string
        vrf-vxlan:
          type: integer
        bridge-disable-mac-learning:
          type: boolean
        tag:
          type: integer
        exitnodes:
          type: string
        exitnodes-local-routing:
          type: boolean
        controller:
          type: string
        zone:
          type: string
        vxlan-port:
          maximum: 65536
          type: integer
          minimum: 1
        vlan-protocol:
          type: string
          enum:
          - 802.1q
          - 802.1ad
        type:
          type: string
          enum:
          - evpn
          - faucet
          - qinq
          - simple
          - vlan
          - vxlan
        dp-id:
          type: integer
        ipam:
          type: string
        rt-import:
          type: string
        peers:
          type: string
        mac:
          type: string
        exitnodes-primary:
          type: string
    ClusterAcmeAccount:
      type: object
      properties:
        directory:
          pattern: ^https?://.*
          type: string
        account:
          type: object
        tos:
          type: string
        location:
          type: string
    AccessTfa-GET:
      type: object
      properties:
        id:
          type: string
        enable:
          type: boolean
        description:
          type: string
        type:
          type: string
          enum:
          - totp
          - u2f
          - webauthn
          - recovery
          - yubico
        created:
          type: integer
    NodesQemuAgentFileread:
      type: object
      properties:
        truncated:
          type: boolean
        content:
          type: string
    NodesLxcFirewallRules:
      type: object
      properties:
        macro:
          type: string
        iface:
          type: string
        action:
          type: string
        pos:
          type: integer
        type:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        source:
          type: string
        ipversion:
          type: integer
        comment:
          type: string
    ClusterNotificationsEndpointsGotify-GET:
      type: array
      items:
        type: object
        properties:
          server:
            type: string
          comment:
            type: string
          disable:
            type: boolean
          name:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
    NodesLxcFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
          nomatch:
            type: boolean
    GET-NodesQemuAgentExecstatus-RB:
      type: object
      properties:
        pid:
          type: integer
    NodesLxcFirewallAliases:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          name:
            type: string
          cidr:
            type: string
    NodesQemuAgent:
      type: array
      items:
        type: object
        properties: {}
    NodesScanPbs:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          store:
            type: string
    GET-ClusterSdnDns-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - powerdns
    PUT-ClusterNotificationsEndpointsSendmail-RB:
      type: object
      properties:
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        comment:
          type: string
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        from-address:
          type: string
        author:
          type: string
        disable:
          type: boolean
        digest:
          maxLength: 64
          type: string
    NodesNetstat:
      type: array
      items:
        type: object
        properties: {}
    NodesReplicationLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    NodesCephPool-GET:
      type: array
      items:
        type: object
        properties: {}
    NodesScanLvm:
      type: array
      items:
        type: object
        properties:
          vg:
            type: string
    POST-NodesLxcRemotemigrate-RB:
      type: object
      properties:
        timeout:
          type: integer
        delete:
          type: boolean
        target-storage:
          type: string
        target-endpoint:
          type: string
        bwlimit:
          type: number
          minimum: "0"
        online:
          type: boolean
        restart:
          type: boolean
        target-bridge:
          type: string
        target-vmid:
          maximum: 999999999
          type: integer
          minimum: 100
    GET-NodesJournal-RB:
      type: object
      properties:
        lastentries:
          type: integer
        endcursor:
          type: string
        startcursor:
          type: string
        since:
          type: integer
        until:
          type: integer
    PUT-NodesAptRepositories-RB:
      type: object
      properties:
        digest:
          maxLength: 80
          type: string
        handle:
          type: string
    ClusterTasks:
      type: array
      items:
        type: object
        properties:
          upid:
            type: string
    NodesQemuFirewallAliases:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          name:
            type: string
          cidr:
            type: string
    PUT-AccessUsers-RB:
      type: object
      properties:
        expire:
          type: integer
        email:
          maxLength: 254
          type: string
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
        firstname:
          maxLength: 1024
          type: string
        groups:
          type: string
        comment:
          maxLength: 2048
          type: string
        append:
          type: boolean
        enable:
          type: boolean
        lastname:
          maxLength: 1024
          type: string
    PUT-ClusterMetricsServer-RB:
      type: object
      properties:
        path:
          type: string
        timeout:
          type: integer
        disable:
          type: boolean
        bucket:
          type: string
        mtu:
          maximum: 65536
          type: integer
          minimum: 512
        port:
          maximum: 65536
          type: integer
          minimum: 1
        server:
          type: string
        organization:
          type: string
        influxdbproto:
          type: string
          enum:
          - udp
          - http
          - https
        verify-certificate:
          type: boolean
        token:
          type: string
        delete:
          maxLength: 4096
          type: string
        max-body-size:
          type: integer
          minimum: 1
        proto:
          type: string
          enum:
          - udp
          - tcp
        digest:
          maxLength: 64
          type: string
        api-path-prefix:
          type: string
    POST-NodesFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        pos:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    GET-NodesScanCifs-RB:
      type: object
      properties:
        server:
          type: string
        password:
          type: string
        username:
          type: string
        domain:
          type: string
    DELETE-ClusterFirewallGroups-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    NodesTime:
      type: object
      properties:
        time:
          type: integer
          minimum: 1297163644
        timezone:
          type: string
        localtime:
          type: integer
          minimum: 1297163644
    POST-NodesQemuSnapshotRollback-RB:
      type: object
      properties:
        start:
          type: boolean
    NodesQemuFeature:
      type: object
      properties:
        hasFeature:
          type: boolean
        nodes:
          type: array
          items:
            type: string
    ClusterBackup:
      type: array
      items:
        type: object
        properties:
          id:
            pattern: '\S+'
            maxLength: 50
            type: string
    AccessTfa-GET-AV:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          enable:
            type: boolean
          description:
            type: string
          type:
            type: string
            enum:
            - totp
            - u2f
            - webauthn
            - recovery
            - yubico
          created:
            type: integer
    PUT-AccessDomains-RB:
      type: object
      properties:
        query-userinfo:
          type: boolean
        client-id:
          maxLength: 256
          type: string
        mode:
          type: string
          enum:
          - ldap
          - ldaps
          - ldap+starttls
        port:
          maximum: 65535
          type: integer
          minimum: 1
        groups-claim:
          pattern: (?^:[A-Za-z0-9\.\-_]+)
          maxLength: 256
          type: string
        group_filter:
          maxLength: 2048
          type: string
        groups-autocreate:
          type: boolean
        user_attr:
          pattern: '\S{2,}'
          maxLength: 256
          type: string
        group_dn:
          maxLength: 256
          type: string
        cert:
          type: string
        scopes:
          type: string
        check-connection:
          type: boolean
        bind_dn:
          maxLength: 256
          type: string
        sync_attributes:
          pattern: '\w+=[^,]+(,\s*\w+=[^,]+)*'
          type: string
        secure:
          type: boolean
        server1:
          maxLength: 256
          type: string
        default:
          type: boolean
        capath:
          type: string
        domain:
          pattern: '\S+'
          maxLength: 256
          type: string
        certkey:
          type: string
        password:
          type: string
        filter:
          maxLength: 2048
          type: string
        client-key:
          maxLength: 256
          type: string
        server2:
          maxLength: 256
          type: string
        autocreate:
          type: boolean
        sync-defaults-options:
          type: string
        acr-values:
          pattern: ^[^\x00-\x1F\x7F <>#"]*$
          type: string
        group_name_attr:
          maxLength: 256
          type: string
        issuer-url:
          maxLength: 256
          type: string
        groups-overwrite:
          type: boolean
        user_classes:
          type: string
        tfa:
          maxLength: 128
          type: string
        delete:
          maxLength: 4096
          type: string
        group_classes:
          type: string
        verify:
          type: boolean
        base_dn:
          maxLength: 256
          type: string
        sslversion:
          type: string
          enum:
          - tlsv1
          - tlsv1_1
          - tlsv1_2
          - tlsv1_3
        comment:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
        case-sensitive:
          type: boolean
        prompt:
          pattern: (?:none|login|consent|select_account|\S+)
          type: string
    GET-NodesScanIscsi-RB:
      type: object
      properties:
        portal:
          type: string
    ClusterFirewallIpset:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          name:
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
            maxLength: 64
            type: string
    NodesCephOsd:
      type: array
      items:
        type: object
        properties: {}
    NodesCeph:
      type: array
      items:
        type: object
        properties: {}
    ClusterNotificationsTargets:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          disable:
            type: boolean
          name:
            type: string
          type:
            type: string
            enum:
            - sendmail
            - gotify
            - smtp
            - webhook
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
    ClusterFirewallRules:
      type: object
      properties:
        macro:
          type: string
        iface:
          type: string
        action:
          type: string
        pos:
          type: integer
        type:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        source:
          type: string
        ipversion:
          type: integer
        comment:
          type: string
    NodesCertificates:
      type: array
      items:
        type: object
        properties: {}
    Storage-PUT:
      type: object
      properties:
        config:
          properties: 
          type: object
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        storage:
          type: string
    AccessGroups:
      type: object
      properties:
        comment:
          type: string
        members:
          type: array
          items:
            description: Full User ID, in the `name@realm` format.
            format: pve-userid
            maxLength: 64
            type: string
    POST-ClusterConfig-RB:
      type: object
      properties:
        link[n]:
          type: string
        clustername:
          maxLength: 15
          type: string
        votes:
          type: integer
          minimum: 1
        nodeid:
          type: integer
          minimum: 1
    PUT-Storage-RB:
      type: object
      properties:
        content-dirs:
          type: string
        server2:
          type: string
        namespace:
          type: string
        encryption-key:
          type: string
        username:
          type: string
        port:
          maximum: 65535
          type: integer
          minimum: 1
        sparse:
          type: boolean
        password:
          maxLength: 256
          type: string
        blocksize:
          type: string
        disable:
          type: boolean
        is_mountpoint:
          type: string
        transport:
          type: string
          enum:
          - tcp
          - rdma
          - unix
        master-pubkey:
          type: string
        options:
          type: string
        maxfiles:
          type: integer
        nodes:
          type: string
        monhost:
          type: string
        comstar_hg:
          type: string
        format:
          type: string
          enum:
          - raw
          - qcow2
          - subvol
          - vmdk
        data-pool:
          type: string
        skip-cert-verification:
          type: boolean
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        tagged_only:
          type: boolean
        nowritecache:
          type: boolean
        server:
          type: string
        comstar_tg:
          type: string
        mountpoint:
          type: string
        create-subdirs:
          type: boolean
        krbd:
          type: boolean
        fs-name:
          type: string
        bwlimit:
          type: string
        max-protected-backups:
          type: integer
          minimum: -1
        preallocation:
          type: string
          enum:
          - "off"
          - metadata
          - falloc
          - full
        saferemove:
          type: boolean
        saferemove_throughput:
          type: string
        pool:
          type: string
        shared:
          type: boolean
        prune-backups:
          type: string
        create-base-path:
          type: boolean
        delete:
          maxLength: 4096
          type: string
        mkdir:
          type: boolean
        content:
          type: string
        digest:
          maxLength: 64
          type: string
        fuse:
          type: boolean
        subdir:
          type: string
        domain:
          maxLength: 256
          type: string
        lio_tpg:
          type: string
        smbversion:
          type: string
          enum:
          - default
          - "2.0"
          - "2.1"
          - "3"
          - "3.0"
          - "3.11"
        nocow:
          type: boolean
        keyring:
          type: string
    DELETE-NodesQemuFirewallRules-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    POST-ClusterConfigJoin-RB:
      type: object
      properties:
        votes:
          type: integer
        password:
          maxLength: 128
          type: string
        link[n]:
          type: string
        nodeid:
          type: integer
          minimum: 1
        hostname:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        force:
          type: boolean
    POST-NodesVncshell-RB:
      type: object
      properties:
        cmd:
          type: string
          enum:
          - ceph_install
          - upgrade
          - login
        cmd-opts:
          type: string
        websocket:
          type: boolean
        width:
          maximum: 4096
          type: integer
          minimum: 16
        height:
          maximum: 2160
          type: integer
          minimum: 16
    POST-NodesLxcFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        pos:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    PUT-ClusterNotificationsMatchers-RB:
      type: object
      properties:
        mode:
          type: string
          enum:
          - all
          - any
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        match-field:
          type: array
          items:
            type: string
        target:
          type: array
          items:
            format: pve-configid
            type: string
        comment:
          type: string
        invert-match:
          type: boolean
        disable:
          type: boolean
        match-calendar:
          type: array
          items:
            type: string
        digest:
          maxLength: 64
          type: string
        match-severity:
          type: array
          items:
            type: string
    POST-NodesCephRestart-RB:
      type: object
      properties:
        service:
          pattern: (mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
    NodesStorageFilerestoreList:
      type: array
      items:
        type: object
        properties:
          size:
            type: integer
          text:
            type: string
          type:
            type: string
          filepath:
            type: string
          mtime:
            type: integer
          leaf:
            type: boolean
    GET-NodesTasksLog-RB:
      type: object
      properties:
        download:
          type: boolean
        start:
          type: integer
        limit:
          type: integer
    POST-ClusterAcmeAccount-RB:
      type: object
      properties:
        name:
          type: string
        eab-kid:
          type: string
        eab-hmac-key:
          type: string
        directory:
          pattern: ^https?://.*
          type: string
        tos_url:
          type: string
        contact:
          type: string
    POST-NodesQemuStatusSuspend-RB:
      type: object
      properties:
        skiplock:
          type: boolean
        todisk:
          type: boolean
        statestorage:
          type: string
    PUT-ClusterFirewallOptions-RB:
      type: object
      properties:
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        delete:
          type: string
        log_ratelimit:
          type: string
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        ebtables:
          type: boolean
        digest:
          maxLength: 64
          type: string
        enable:
          type: integer
    GET-NodesQemuRrddata-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    POST-NodesStorageContent-RB:
      type: object
      properties:
        target:
          type: string
        target_node:
          type: string
    GET-ClusterFirewallRefs-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - alias
          - ipset
    GET-NodesQemu-RB:
      type: object
      properties:
        full:
          type: boolean
    GET-NodesQemuConfig-RB:
      type: object
      properties:
        snapshot:
          maxLength: 40
          type: string
        current:
          type: boolean
    PUT-NodesQemuResize-RB:
      type: object
      properties:
        skiplock:
          type: boolean
        size:
          pattern: '\+?\d+(\.\d+)?[KMGT]?'
          type: string
        digest:
          maxLength: 40
          type: string
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
    AccessUsersToken-PUT:
      type: object
      properties:
        comment:
          type: string
        expire:
          type: integer
        privsep:
          type: boolean
    ClusterCephFlags-GET:
      type: integer
      minimum: 0
      maximum: 1
      description: 
    POST-ClusterAcmePlugins-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - dns
          - standalone
        api:
          type: string
          enum:
          - 1984hosting
          - acmedns
          - acmeproxy
          - active24
          - ad
          - ali
          - alviy
          - anx
          - artfiles
          - arvan
          - aurora
          - autodns
          - aws
          - azion
          - azure
          - bookmyname
          - bunny
          - cf
          - clouddns
          - cloudns
          - cn
          - conoha
          - constellix
          - cpanel
          - curanet
          - cyon
          - da
          - ddnss
          - desec
          - df
          - dgon
          - dnsexit
          - dnshome
          - dnsimple
          - dnsservices
          - doapi
          - domeneshop
          - dp
          - dpi
          - dreamhost
          - duckdns
          - durabledns
          - dyn
          - dynu
          - dynv6
          - easydns
          - edgedns
          - euserv
          - exoscale
          - fornex
          - freedns
          - gandi_livedns
          - gcloud
          - gcore
          - gd
          - geoscaling
          - googledomains
          - he
          - hetzner
          - hexonet
          - hostingde
          - huaweicloud
          - infoblox
          - infomaniak
          - internetbs
          - inwx
          - ionos
          - ionos_cloud
          - ipv64
          - ispconfig
          - jd
          - joker
          - kappernet
          - kas
          - kinghost
          - knot
          - la
          - leaseweb
          - lexicon
          - limacity
          - linode
          - linode_v4
          - loopia
          - lua
          - maradns
          - me
          - miab
          - misaka
          - myapi
          - mydevil
          - mydnsjp
          - mythic_beasts
          - namecheap
          - namecom
          - namesilo
          - nanelo
          - nederhost
          - neodigit
          - netcup
          - netlify
          - nic
          - njalla
          - nm
          - nsd
          - nsone
          - nsupdate
          - nw
          - oci
          - omglol
          - one
          - online
          - openprovider
          - openstack
          - opnsense
          - ovh
          - pdns
          - pleskxml
          - pointhq
          - porkbun
          - rackcorp
          - rackspace
          - rage4
          - rcode0
          - regru
          - scaleway
          - schlundtech
          - selectel
          - selfhost
          - servercow
          - simply
          - technitium
          - tele3
          - tencent
          - timeweb
          - transip
          - udr
          - ultra
          - unoeuro
          - variomedia
          - veesp
          - vercel
          - vscale
          - vultr
          - websupport
          - west_cn
          - world4you
          - yandex360
          - yc
          - zilore
          - zone
          - zoneedit
          - zonomi
        id:
          type: string
        nodes:
          type: string
        disable:
          type: boolean
        validation-delay:
          type: integer
          maximum: 172800
        data:
          type: string
    NodesHardwarePci:
      type: array
      items:
        type: object
        properties:
          mdev:
            type: boolean
          vendor:
            type: string
          device_name:
            type: string
          iommugroup:
            type: integer
          device:
            type: string
          id:
            type: string
          vendor_name:
            type: string
          subsystem_device:
            type: string
          class:
            type: string
          subsystem_vendor_name:
            type: string
          subsystem_device_name:
            type: string
          subsystem_vendor:
            type: string
    POST-NodesLxcMovevolume-RB:
      type: object
      properties:
        delete:
          type: boolean
        target-digest:
          maxLength: 40
          type: string
        bwlimit:
          type: number
          minimum: "0"
        storage:
          type: string
        volume:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        target-volume:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        digest:
          maxLength: 40
          type: string
        target-vmid:
          maximum: 999999999
          type: integer
          minimum: 100
    NodesStorageRrd:
      type: object
      properties:
        filename:
          type: string
    NodesLxcFeature:
      type: object
      properties:
        hasFeature:
          type: boolean
    NodesStorageRrddata:
      type: array
      items:
        type: object
        properties: {}
    POST-ClusterNotificationsEndpointsSmtp-RB:
      type: object
      properties:
        name:
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        port:
          type: integer
        username:
          type: string
        comment:
          type: string
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        from-address:
          type: string
        author:
          type: string
        disable:
          type: boolean
        server:
          type: string
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
        password:
          type: string
    PUT-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        rename:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 64
          type: string
        cidr:
          type: string
    ClusterSdn:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    POST-ClusterMappingPci-RB:
      type: object
      properties:
        live-migration-capable:
          type: boolean
        map:
          type: array
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. Used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              iommugroup:
                description: The IOMMU group in which the device is to be expected in. Used for detecting hardware changes.
                optional: 1
                type: integer
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the device. If the function is omitted, the whole device is mapped. In that case use the attributes of the first device. You can give multiple paths as a semicolon seperated list, the first available will then be chosen on guest start.
                pattern: (?:[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?;)*[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?
                type: string
              subsystem-id:
                description: The subsystem vendor and device ID that is expected. Used for detecting hardware changes.
                optional: 1
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
            type: string
        mdev:
          type: boolean
        description:
          maxLength: 4096
          type: string
        id:
          type: string
    POST-NodesQemuAgent-RB:
      type: object
      properties:
        command:
          type: string
          enum:
          - fsfreeze-freeze
          - fsfreeze-status
          - fsfreeze-thaw
          - fstrim
          - get-fsinfo
          - get-host-name
          - get-memory-block-info
          - get-memory-blocks
          - get-osinfo
          - get-time
          - get-timezone
          - get-users
          - get-vcpus
          - info
          - network-get-interfaces
          - ping
          - shutdown
          - suspend-disk
          - suspend-hybrid
          - suspend-ram
    ClusterNotifications:
      type: array
      items:
        type: object
        properties: {}
    NodesReplication:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    NodesScanGlusterfs:
      type: array
      items:
        type: object
        properties:
          volname:
            type: string
    PUT-NodesLxcSnapshotConfig-RB:
      type: object
      properties:
        description:
          type: string
    GET-NodesScanLvmthin-RB:
      type: object
      properties:
        vg:
          pattern: '[a-zA-Z0-9\.\+\_][a-zA-Z0-9\.\+\_\-]+'
          maxLength: 100
          type: string
    NodesLxcMtunnelwebsocket:
      type: object
      properties:
        port:
          type: string
        socket:
          type: string
    POST-NodesCephMon-RB:
      type: object
      properties:
        mon-address:
          type: string
    ClusterNotificationsEndpointsSendmail:
      type: object
      properties:
        name:
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        comment:
          type: string
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        from-address:
          type: string
        author:
          type: string
        disable:
          type: boolean
        digest:
          maxLength: 64
          type: string
    POST-ClusterNotificationsEndpointsWebhook-RB:
      type: object
      properties:
        header:
          type: array
          items:
            type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
        comment:
          type: string
        secret:
          type: array
          items:
            type: string
        disable:
          type: boolean
        name:
          type: string
        url:
          type: string
        body:
          type: string
    AccessUsersTfa:
      type: object
      properties:
        types:
          type: array
          items:
            description: A TFA type.
            enum:
            - totp
            - u2f
            - yubico
            - webauthn
            - recovedry
            type: string
        realm:
          type: string
          enum:
          - oath
          - yubico
        user:
          type: string
          enum:
          - oath
          - u2f
    POST-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        gateway:
          type: string
        type:
          type: string
          enum:
          - subnet
        dhcp-range:
          type: array
          items:
            format: pve-sdn-dhcp-range
            type: string
        dhcp-dns-server:
          type: string
        subnet:
          type: string
        dnszoneprefix:
          type: string
        snat:
          type: boolean
    ClusterAcmeChallengeschema:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          schema:
            type: object
          type:
            type: string
          id:
            type: string
    ClusterNotificationsMatchers:
      type: object
      properties:
        mode:
          type: string
          enum:
          - all
          - any
        match-field:
          type: array
          items:
            type: string
        target:
          type: array
          items:
            format: pve-configid
            type: string
        comment:
          type: string
        invert-match:
          type: boolean
        disable:
          type: boolean
        name:
          type: string
        match-calendar:
          type: array
          items:
            type: string
        digest:
          maxLength: 64
          type: string
        match-severity:
          type: array
          items:
            type: string
    PUT-ClusterSdnDns-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        ttl:
          type: integer
        key:
          type: string
        reversemaskv6:
          type: integer
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        digest:
          maxLength: 64
          type: string
        url:
          type: string
    AccessRoles:
      type: object
      properties:
        Realm.AllocateUser:
          type: boolean
        Mapping.Audit:
          type: boolean
        VM.Allocate:
          type: boolean
        VM.Config.Options:
          type: boolean
        SDN.Use:
          type: boolean
        Permissions.Modify:
          type: boolean
        Sys.AccessNetwork:
          type: boolean
        VM.Clone:
          type: boolean
        VM.Config.HWType:
          type: boolean
        Pool.Audit:
          type: boolean
        Sys.Incoming:
          type: boolean
        VM.Console:
          type: boolean
        VM.Snapshot.Rollback:
          type: boolean
        User.Modify:
          type: boolean
        Mapping.Modify:
          type: boolean
        Sys.Audit:
          type: boolean
        Realm.Allocate:
          type: boolean
        SDN.Allocate:
          type: boolean
        Sys.Syslog:
          type: boolean
        Sys.Modify:
          type: boolean
        VM.Migrate:
          type: boolean
        Mapping.Use:
          type: boolean
        Sys.PowerMgmt:
          type: boolean
        VM.Config.CPU:
          type: boolean
        VM.Config.CDROM:
          type: boolean
        Datastore.AllocateTemplate:
          type: boolean
        Datastore.Audit:
          type: boolean
        VM.PowerMgmt:
          type: boolean
        Datastore.AllocateSpace:
          type: boolean
        VM.Config.Memory:
          type: boolean
        VM.Config.Disk:
          type: boolean
        VM.Config.Cloudinit:
          type: boolean
        VM.Config.Network:
          type: boolean
        VM.Backup:
          type: boolean
        VM.Monitor:
          type: boolean
        VM.Audit:
          type: boolean
        Group.Allocate:
          type: boolean
        Datastore.Allocate:
          type: boolean
        Pool.Allocate:
          type: boolean
        VM.Snapshot:
          type: boolean
        Sys.Console:
          type: boolean
        SDN.Audit:
          type: boolean
    NodesQemuFirewallLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    GET-NodesLxcFirewallLog-RB:
      type: object
      properties:
        limit:
          type: integer
        start:
          type: integer
        since:
          type: integer
        until:
          type: integer
    GET-NodesScanGlusterfs-RB:
      type: object
      properties:
        server:
          type: string
    AccessTfa:
      type: object
      properties:
        recovery:
          type: array
          items:
            description: A recovery entry.
            type: string
        challenge:
          type: string
        id:
          type: string
    POST-NodesVzdump-RB:
      type: object
      properties:
        lockwait:
          type: integer
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        quiet:
          type: boolean
        mailnotification:
          type: string
          enum:
          - always
          - failure
        exclude-path:
          type: array
          items:
            type: string
        job-id:
          pattern: '\S+'
          maxLength: 50
          type: string
        tmpdir:
          type: string
        stdexcludes:
          type: boolean
        maxfiles:
          type: integer
          minimum: 1
        vmid:
          type: string
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        exclude:
          type: string
        fleecing:
          type: string
        pigz:
          type: integer
        storage:
          type: string
        notes-template:
          maxLength: 1024
          type: string
        performance:
          type: string
        notification-target:
          type: string
        remove:
          type: boolean
        bwlimit:
          type: integer
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        script:
          type: string
        dumpdir:
          type: string
        mailto:
          type: string
        pool:
          type: string
        stopwait:
          type: integer
        stdout:
          type: boolean
        prune-backups:
          type: string
        stop:
          type: boolean
        protected:
          type: boolean
        ionice:
          type: integer
          maximum: 8
        all:
          type: boolean
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        zstd:
          type: integer
    ClusterMappingDir:
      type: array
      items:
        type: object
        properties:
          checks:
            type: array
            items:
              properties:
                message:
                  description: The message of the error
                  type: string
                severity:
                  description: The severity of the error
                  enum:
                  - warning
                  - error
                  type: string
              type: object
          map:
            type: array
            items:
              description: A mapping for a node.
              type: string
          description:
            type: string
          id:
            type: string
    POST-NodesAptRepositories-RB:
      type: object
      properties:
        path:
          type: string
        digest:
          maxLength: 80
          type: string
        enabled:
          type: boolean
        index:
          type: integer
    NodesLxcFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    POST-NodesQemuStatusReboot-RB:
      type: object
      properties:
        timeout:
          type: integer
    POST-NodesQemuSpiceproxy-RB:
      type: object
      properties:
        proxy:
          type: string
    POST-ClusterNotificationsEndpointsSendmail-RB:
      type: object
      properties:
        name:
          type: string
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        comment:
          type: string
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        from-address:
          type: string
        author:
          type: string
        disable:
          type: boolean
    POST-NodesQemuStatusStop-RB:
      type: object
      properties:
        skiplock:
          type: boolean
        migratedfrom:
          type: string
        timeout:
          type: integer
        keepActive:
          type: boolean
        overrule-shutdown:
          type: boolean
    GET-NodesTasks-RB:
      type: object
      properties:
        start:
          type: integer
        userfilter:
          type: string
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
        typefilter:
          type: string
        errors:
          type: boolean
        source:
          type: string
          enum:
          - archive
          - active
          - all
        until:
          type: integer
        statusfilter:
          type: string
        limit:
          type: integer
        since:
          type: integer
    PUT-ClusterAcmePlugins-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        api:
          type: string
          enum:
          - 1984hosting
          - acmedns
          - acmeproxy
          - active24
          - ad
          - ali
          - alviy
          - anx
          - artfiles
          - arvan
          - aurora
          - autodns
          - aws
          - azion
          - azure
          - bookmyname
          - bunny
          - cf
          - clouddns
          - cloudns
          - cn
          - conoha
          - constellix
          - cpanel
          - curanet
          - cyon
          - da
          - ddnss
          - desec
          - df
          - dgon
          - dnsexit
          - dnshome
          - dnsimple
          - dnsservices
          - doapi
          - domeneshop
          - dp
          - dpi
          - dreamhost
          - duckdns
          - durabledns
          - dyn
          - dynu
          - dynv6
          - easydns
          - edgedns
          - euserv
          - exoscale
          - fornex
          - freedns
          - gandi_livedns
          - gcloud
          - gcore
          - gd
          - geoscaling
          - googledomains
          - he
          - hetzner
          - hexonet
          - hostingde
          - huaweicloud
          - infoblox
          - infomaniak
          - internetbs
          - inwx
          - ionos
          - ionos_cloud
          - ipv64
          - ispconfig
          - jd
          - joker
          - kappernet
          - kas
          - kinghost
          - knot
          - la
          - leaseweb
          - lexicon
          - limacity
          - linode
          - linode_v4
          - loopia
          - lua
          - maradns
          - me
          - miab
          - misaka
          - myapi
          - mydevil
          - mydnsjp
          - mythic_beasts
          - namecheap
          - namecom
          - namesilo
          - nanelo
          - nederhost
          - neodigit
          - netcup
          - netlify
          - nic
          - njalla
          - nm
          - nsd
          - nsone
          - nsupdate
          - nw
          - oci
          - omglol
          - one
          - online
          - openprovider
          - openstack
          - opnsense
          - ovh
          - pdns
          - pleskxml
          - pointhq
          - porkbun
          - rackcorp
          - rackspace
          - rage4
          - rcode0
          - regru
          - scaleway
          - schlundtech
          - selectel
          - selfhost
          - servercow
          - simply
          - technitium
          - tele3
          - tencent
          - timeweb
          - transip
          - udr
          - ultra
          - unoeuro
          - variomedia
          - veesp
          - vercel
          - vscale
          - vultr
          - websupport
          - west_cn
          - world4you
          - yandex360
          - yc
          - zilore
          - zone
          - zoneedit
          - zonomi
        nodes:
          type: string
        data:
          type: string
        disable:
          type: boolean
        validation-delay:
          type: integer
          maximum: 172800
        digest:
          maxLength: 64
          type: string
    POST-ClusterSdnDns-RB:
      type: object
      properties:
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        reversev6mask:
          type: integer
        type:
          type: string
          enum:
          - powerdns
        ttl:
          type: integer
        key:
          type: string
        reversemaskv6:
          type: integer
        dns:
          type: string
        url:
          type: string
    NodesCapabilitiesQemuCpu:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          custom:
            type: boolean
          vendor:
            type: string
    POST-NodesDisksLvm-RB:
      type: object
      properties:
        device:
          type: string
        name:
          type: string
        add_storage:
          type: boolean
    PUT-NodesQemuConfig-RB:
      type: object
      properties:
        spice_enhancements:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        onboot:
          type: boolean
        cdrom:
          type: string
        template:
          type: boolean
        ciupgrade:
          type: boolean
        hookscript:
          type: string
        digest:
          maxLength: 40
          type: string
        cpu:
          type: string
        rng0:
          type: string
        agent:
          type: string
        cpulimit:
          type: number
          maximum: 128
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        boot:
          type: string
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        net[n]:
          type: string
        smbios1:
          maxLength: 512
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        tpmstate0:
          type: string
        name:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        vga:
          type: string
        sshkeys:
          type: string
        nameserver:
          type: string
        memory:
          type: string
        ide[n]:
          type: string
        kvm:
          type: boolean
        efidisk0:
          type: string
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        cpuunits:
          maximum: 262144
          type: integer
          minimum: 1
        autostart:
          type: boolean
        localtime:
          type: boolean
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        keephugepages:
          type: boolean
        migrate_speed:
          type: integer
        hotplug:
          type: string
        cipassword:
          type: string
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        description:
          maxLength: 8192
          type: string
        vmstatestorage:
          type: string
        cicustom:
          type: string
        machine:
          type: string
        affinity:
          type: string
        sockets:
          type: integer
          minimum: 1
        smp:
          type: integer
          minimum: 1
        tablet:
          type: boolean
        ipconfig[n]:
          type: string
        numa:
          type: boolean
        delete:
          type: string
        startup:
          type: string
        amd-sev:
          type: string
        hostpci[n]:
          type: string
        cores:
          type: integer
          minimum: 1
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        tags:
          type: string
        shares:
          type: integer
          maximum: 50000
        vcpus:
          type: integer
          minimum: 1
        virtio[n]:
          type: string
        skiplock:
          type: boolean
        freeze:
          type: boolean
        scsi[n]:
          type: string
        force:
          type: boolean
        sata[n]:
          type: string
        ivshmem:
          type: string
        watchdog:
          type: string
        unused[n]:
          type: string
        protection:
          type: boolean
        migrate_downtime:
          type: number
        balloon:
          type: integer
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        args:
          type: string
        revert:
          type: string
        acpi:
          type: boolean
        numa[n]:
          type: string
        searchdomain:
          type: string
        tdf:
          type: boolean
        ciuser:
          type: string
        virtiofs[n]:
          type: string
        usb[n]:
          type: string
        reboot:
          type: boolean
        audio0:
          type: string
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
    NodesLxcFirewallIpset:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          name:
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
            maxLength: 64
            type: string
    ClusterFirewallMacros:
      type: array
      items:
        type: object
        properties:
          descr:
            type: string
          macro:
            type: string
    NodesStorageContent-GET:
      type: array
      items:
        type: object
        properties:
          size:
            type: integer
          vmid:
            type: integer
          parent:
            type: string
          encrypted:
            type: string
          protected:
            type: boolean
          format:
            type: string
          ctime:
            type: integer
          volid:
            type: string
          used:
            type: integer
          verification:
            type: object
            properties:
              state:
                description: Last backup verification state.
                type: string
              upid:
                description: Last backup verification UPID.
                type: string
          notes:
            type: string
    GET-NodesScanPbs-RB:
      type: object
      properties:
        server:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        password:
          type: string
        port:
          maximum: 65535
          type: integer
          minimum: 1
        username:
          type: string
    NodesQemuConfig:
      type: object
      properties:
        spice_enhancements:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        onboot:
          type: boolean
        cdrom:
          type: string
        template:
          type: boolean
        ciupgrade:
          type: boolean
        hookscript:
          type: string
        digest:
          type: string
        cpu:
          type: string
        rng0:
          type: string
        agent:
          type: string
        cpulimit:
          type: number
          maximum: 128
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        boot:
          type: string
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        net[n]:
          type: string
        smbios1:
          maxLength: 512
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        tpmstate0:
          type: string
        name:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        vga:
          type: string
        sshkeys:
          type: string
        nameserver:
          type: string
        memory:
          type: string
        ide[n]:
          type: string
        kvm:
          type: boolean
        efidisk0:
          type: string
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        smp:
          type: integer
          minimum: 1
        cpuunits:
          maximum: 262144
          type: integer
          minimum: 1
        autostart:
          type: boolean
        localtime:
          type: boolean
        startup:
          type: string
        keephugepages:
          type: boolean
        migrate_speed:
          type: integer
        hotplug:
          type: string
        cipassword:
          type: string
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        description:
          maxLength: 8192
          type: string
        vmstatestorage:
          type: string
        cicustom:
          type: string
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        affinity:
          type: string
        sockets:
          type: integer
          minimum: 1
        virtiofs[n]:
          type: string
        tablet:
          type: boolean
        ipconfig[n]:
          type: string
        numa:
          type: boolean
        amd-sev:
          type: string
        hostpci[n]:
          type: string
        cores:
          type: integer
          minimum: 1
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        tags:
          type: string
        shares:
          type: integer
          maximum: 50000
        vcpus:
          type: integer
          minimum: 1
        virtio[n]:
          type: string
        freeze:
          type: boolean
        scsi[n]:
          type: string
        sata[n]:
          type: string
        ivshmem:
          type: string
        watchdog:
          type: string
        unused[n]:
          type: string
        protection:
          type: boolean
        migrate_downtime:
          type: number
        balloon:
          type: integer
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        machine:
          type: string
        args:
          type: string
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        acpi:
          type: boolean
        numa[n]:
          type: string
        searchdomain:
          type: string
        tdf:
          type: boolean
        ciuser:
          type: string
        usb[n]:
          type: string
        reboot:
          type: boolean
        audio0:
          type: string
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
    DELETE-AccessTfa-RB:
      type: object
      properties:
        password:
          minLength: 5
          maxLength: 64
          type: string
    ClusterAcmePlugins:
      type: array
      items:
        type: object
        properties:
          plugin:
            type: string
    GET-NodesCephCfgValue-RB:
      type: object
      properties:
        config-keys:
          pattern: (?^:^(:?(?^i:[0-9a-z\-_\.]+:[0-9a-zA-Z\-_]+))(:?[;, ](?^i:[0-9a-z\-_\.]+:[0-9a-zA-Z\-_]+))*$)
          type: string
    POST-NodesCephFs-RB:
      type: object
      properties:
        pg_num:
          maximum: 32768
          type: integer
          minimum: 8
        add-storage:
          type: boolean
    Pools-GET:
      type: array
      items:
        type: object
        properties:
          poolid:
            type: string
          comment:
            type: string
          members:
            type: array
            items:
              additionalProperties: 1
              properties:
                id:
                  type: string
                node:
                  type: string
                storage:
                  optional: 1
                  type: string
                type:
                  enum:
                  - qemu
                  - lxc
                  - openvz
                  - storage
                  type: string
                vmid:
                  optional: 1
                  type: integer
              type: object
    POST-NodesLxcStatusShutdown-RB:
      type: object
      properties:
        forceStop:
          type: boolean
        timeout:
          type: integer
    Cluster:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesTime-RB:
      type: object
      properties:
        timezone:
          type: string
    GET-NodesDisksSmart-RB:
      type: object
      properties:
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
        healthonly:
          type: boolean
    PUT-AccessTfa-RB:
      type: object
      properties:
        description:
          maxLength: 255
          type: string
        password:
          minLength: 5
          maxLength: 64
          type: string
        enable:
          type: boolean
    AccessTicket:
      type: object
      properties:
        ticket:
          type: string
        clustername:
          type: string
        CSRFPreventionToken:
          type: string
        username:
          type: string
    PUT-AccessGroups-RB:
      type: object
      properties:
        comment:
          type: string
    NodesCephFs:
      type: array
      items:
        type: object
        properties:
          data_pool:
            type: string
          name:
            type: string
          metadata_pool:
            type: string
    POST-AccessUsers-RB:
      type: object
      properties:
        expire:
          type: integer
        email:
          maxLength: 254
          type: string
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
        userid:
          maxLength: 64
          type: string
        password:
          minLength: 8
          maxLength: 64
          type: string
        groups:
          type: string
        comment:
          maxLength: 2048
          type: string
        firstname:
          maxLength: 1024
          type: string
        enable:
          type: boolean
        lastname:
          maxLength: 1024
          type: string
    NodesDisksLvm:
      type: object
      properties:
        leaf:
          type: boolean
        children:
          type: array
          items:
            properties:
              children:
                description: The underlying physical volumes
                items:
                  properties:
                    free:
                      description: The free bytes in the physical volume
                      type: integer
                    leaf:
                      type: boolean
                    name:
                      description: The name of the physical volume
                      type: string
                    size:
                      description: The size of the physical volume in bytes
                      type: integer
                  type: object
                optional: 1
                type: array
              free:
                description: The free bytes in the volume group
                type: integer
              leaf:
                type: boolean
              name:
                description: The name of the volume group
                type: string
              size:
                description: The size of the volume group in bytes
                type: integer
            type: object
    NodesLxcSnapshot-GET:
      type: array
      items:
        type: object
        properties: {}
    POST-Storage-RB:
      type: object
      properties:
        content-dirs:
          type: string
        server2:
          type: string
        namespace:
          type: string
        username:
          type: string
        path:
          type: string
        password:
          maxLength: 256
          type: string
        blocksize:
          type: string
        disable:
          type: boolean
        is_mountpoint:
          type: string
        transport:
          type: string
          enum:
          - tcp
          - rdma
          - unix
        sparse:
          type: boolean
        master-pubkey:
          type: string
        saferemove:
          type: boolean
        options:
          type: string
        export:
          type: string
        iscsiprovider:
          type: string
        maxfiles:
          type: integer
        max-protected-backups:
          type: integer
          minimum: -1
        vgname:
          type: string
        nodes:
          type: string
        monhost:
          type: string
        comstar_hg:
          type: string
        data-pool:
          type: string
        volume:
          type: string
        skip-cert-verification:
          type: boolean
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        tagged_only:
          type: boolean
        nowritecache:
          type: boolean
        storage:
          type: string
        server:
          type: string
        comstar_tg:
          type: string
        share:
          type: string
        mountpoint:
          type: string
        portal:
          type: string
        create-subdirs:
          type: boolean
        krbd:
          type: boolean
        fs-name:
          type: string
        datastore:
          type: string
        bwlimit:
          type: string
        format:
          type: string
          enum:
          - raw
          - qcow2
          - subvol
          - vmdk
        preallocation:
          type: string
          enum:
          - "off"
          - metadata
          - falloc
          - full
        base:
          type: string
        saferemove_throughput:
          type: string
        pool:
          type: string
        shared:
          type: boolean
        prune-backups:
          type: string
        create-base-path:
          type: boolean
        thinpool:
          type: string
        encryption-key:
          type: string
        mkdir:
          type: boolean
        content:
          type: string
        target:
          type: string
        domain:
          maxLength: 256
          type: string
        port:
          maximum: 65535
          type: integer
          minimum: 1
        fuse:
          type: boolean
        subdir:
          type: string
        authsupported:
          type: string
        lio_tpg:
          type: string
        smbversion:
          type: string
          enum:
          - default
          - "2.0"
          - "2.1"
          - "3"
          - "3.0"
          - "3.11"
        nocow:
          type: boolean
        keyring:
          type: string
    NodesQemuFirewallIpset-GET:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          cidr:
            type: string
          nomatch:
            type: boolean
    GET-NodesQemuMtunnelwebsocket-RB:
      type: object
      properties:
        socket:
          type: string
        ticket:
          type: string
    ClusterSdnVnetsFirewall:
      type: array
      items:
        type: object
        properties: {}
    NodesLxcStatusCurrent:
      type: object
      properties:
        maxswap:
          type: integer
        status:
          type: string
          enum:
          - stopped
          - running
        cpu:
          type: number
        template:
          type: boolean
        lock:
          type: string
        name:
          type: string
        mem:
          type: integer
        uptime:
          type: integer
        maxmem:
          type: integer
        maxdisk:
          type: integer
        cpus:
          type: number
        tags:
          type: string
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
        netout:
          type: integer
        diskwrite:
          type: integer
        diskread:
          type: integer
        ha:
          type: object
        netin:
          type: integer
        disk:
          type: integer
    NodesAplinfo:
      type: array
      items:
        type: object
        properties: {}
    NodesScanZfs:
      type: array
      items:
        type: object
        properties:
          pool:
            type: string
    GET-NodesQemuCloudinitDump-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - user
          - network
          - meta
    ClusterAcmeDirectories:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          url:
            pattern: ^https?://.*
            type: string
    GET-ClusterSdnVnets-RB:
      type: object
      properties:
        running:
          type: boolean
        pending:
          type: boolean
    NodesCertificatesInfo:
      type: array
      items:
        type: object
        properties:
          filename:
            type: string
          san:
            type: array
            items:
              type: string
          public-key-type:
            type: string
          issuer:
            type: string
          subject:
            type: string
          public-key-bits:
            type: integer
          notafter:
            type: integer
          pem:
            type: string
          fingerprint:
            pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
            type: string
          notbefore:
            type: integer
    POST-NodesQemuVncproxy-RB:
      type: object
      properties:
        websocket:
          type: boolean
        generate-password:
          type: boolean
    NodesNetwork:
      type: object
      properties:
        type:
          type: string
        method:
          type: string
    PUT-NodesLxcFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        moveto:
          type: integer
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        proto:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        delete:
          type: string
        dport:
          type: string
        dest:
          maxLength: 512
          type: string
        icmp-type:
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    POST-NodesQemuAgentExec-RB:
      type: object
      properties:
        command:
          type: array
          items:
            description: A single part of the program + arguments.
            format: string
        input-data:
          maxLength: 65536
          type: string
    PUT-ClusterHaResources-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        group:
          type: string
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        max_relocate:
          type: integer
        comment:
          maxLength: 4096
          type: string
        max_restart:
          type: integer
        digest:
          maxLength: 64
          type: string
    NodesCephCfg:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesConfig-RB:
      type: object
      properties:
        acmedomain[n]:
          type: string
        delete:
          type: string
        description:
          maxLength: 65536
          type: string
        wakeonlan:
          type: string
        acme:
          type: string
        startall-onboot-delay:
          type: integer
          maximum: 300
        digest:
          maxLength: 40
          type: string
        ballooning-target:
          type: integer
          maximum: 100
    PUT-ClusterNotificationsEndpointsGotify-RB:
      type: object
      properties:
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        token:
          type: string
        comment:
          type: string
        disable:
          type: boolean
        server:
          type: string
        digest:
          maxLength: 64
          type: string
    POST-NodesSpiceshell-RB:
      type: object
      properties:
        cmd:
          type: string
          enum:
          - ceph_install
          - upgrade
          - login
        cmd-opts:
          type: string
        proxy:
          type: string
    NodesCephPool:
      type: array
      items:
        type: object
        properties:
          type:
            title: Type
            type: string
            enum:
            - replicated
            - erasure
            - unknown
          percent_used:
            title: '%-Used'
            type: number
          target_size_ratio:
            title: PG Autoscale Target Ratio
            type: number
          crush_rule_name:
            title: Crush Rule Name
            type: string
          bytes_used:
            title: Used
            type: integer
          pool:
            title: ID
            type: integer
          pg_num_min:
            title: min. PG Num
            type: integer
          application_metadata:
            title: Associated Applications
            type: object
          pg_autoscale_mode:
            title: PG Autoscale Mode
            type: string
          pool_name:
            title: Name
            type: string
          size:
            title: Size
            type: integer
          autoscale_status:
            title: Autoscale Status
            type: object
          pg_num:
            title: PG Num
            type: integer
          pg_num_final:
            title: Optimal PG Num
            type: integer
          min_size:
            title: Min Size
            type: integer
          crush_rule:
            title: Crush Rule
            type: integer
          target_size:
            title: PG Autoscale Target Size
            type: integer
    NodesCertificatesCustom:
      type: object
      properties:
        filename:
          type: string
        san:
          type: array
          items:
            type: string
        public-key-type:
          type: string
        issuer:
          type: string
        subject:
          type: string
        public-key-bits:
          type: integer
        notafter:
          type: integer
        pem:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        notbefore:
          type: integer
    GET-NodesVzdumpDefaults-RB:
      type: object
      properties:
        storage:
          type: string
    POST-AccessDomainsSync-RB:
      type: object
      properties:
        purge:
          type: boolean
        scope:
          type: string
          enum:
          - users
          - groups
          - both
        remove-vanished:
          pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
          type: string
        enable-new:
          type: boolean
        dry-run:
          type: boolean
        full:
          type: boolean
    ClusterReplication:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesLxcVncwebsocket-RB:
      type: object
      properties:
        port:
          maximum: 5999
          type: integer
          minimum: 5900
        vncticket:
          maxLength: 512
          type: string
    ClusterConfigApiversion:
      type: integer
      desciption: 
    POST-ClusterHaResourcesMigrate-RB:
      type: object
      properties:
        node:
          type: string
    NodesScanLvmthin:
      type: array
      items:
        type: object
        properties:
          lv:
            type: string
    POST-NodesLxcSnapshotRollback-RB:
      type: object
      properties:
        start:
          type: boolean
    DELETE-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    NodesAptVersions:
      type: array
      items:
        type: object
        properties: {}
    DELETE-NodesCephPool-RB:
      type: object
      properties:
        remove_storages:
          type: boolean
        remove_ecprofile:
          type: boolean
        force:
          type: boolean
    PUT-ClusterSdnIpams-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        token:
          type: string
        section:
          type: integer
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        digest:
          maxLength: 64
          type: string
        url:
          type: string
    GET-NodesConfig-RB:
      type: object
      properties:
        property:
          type: string
          enum:
          - acme
          - acmedomain0
          - acmedomain1
          - acmedomain2
          - acmedomain3
          - acmedomain4
          - acmedomain5
          - ballooning-target
          - description
          - startall-onboot-delay
          - wakeonlan
    NodesLxcVncwebsocket:
      type: object
      properties:
        port:
          type: string
    POST-ClusterSdnIpams-RB:
      type: object
      properties:
        section:
          type: integer
        type:
          type: string
          enum:
          - netbox
          - phpipam
          - pve
        token:
          type: string
        ipam:
          type: string
        fingerprint:
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
        url:
          type: string
    POST-NodesAptUpdate-RB:
      type: object
      properties:
        quiet:
          type: boolean
        notify:
          type: boolean
    PUT-ClusterSdnControllers-RB:
      type: object
      properties:
        peers:
          type: string
        delete:
          maxLength: 4096
          type: string
        loopback:
          type: string
        ebgp-multihop:
          type: integer
        ebgp:
          type: boolean
        isis-net:
          type: string
        isis-ifaces:
          type: string
        asn:
          type: integer
          maximum: 4294967296
        node:
          type: string
        bgp-multipath-as-path-relax:
          type: boolean
        isis-domain:
          type: string
        digest:
          maxLength: 64
          type: string
    NodesQemuPending:
      type: array
      items:
        type: object
        properties:
          delete:
            type: integer
            maximum: 2
          pending:
            type: string
          value:
            type: string
          key:
            type: string
    GET-ClusterJobsScheduleanalyze-RB:
      type: object
      properties:
        schedule:
          maxLength: 128
          type: string
        starttime:
          type: integer
        iterations:
          maximum: 100
          type: integer
          minimum: 1
    POST-AccessTicket-RB:
      type: object
      properties:
        username:
          maxLength: 64
          type: string
        path:
          maxLength: 64
          type: string
        tfa-challenge:
          type: string
        privs:
          maxLength: 64
          type: string
        realm:
          maxLength: 32
          type: string
        otp:
          type: string
        new-format:
          type: boolean
        password:
          type: string
    DELETE-Pools-RB:
      type: object
      properties:
        poolid:
          type: string
    NodesServices:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesStorageRrddata-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    POST-NodesQemuStatusReset-RB:
      type: object
      properties:
        skiplock:
          type: boolean
    PUT-AccessUsersToken-RB:
      type: object
      properties:
        comment:
          type: string
        expire:
          type: integer
        privsep:
          type: boolean
    ClusterFirewallOptions:
      type: object
      properties:
        log_ratelimit:
          type: string
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        ebtables:
          type: boolean
        enable:
          type: integer
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    GET-NodesVncwebsocket-RB:
      type: object
      properties:
        port:
          maximum: 5999
          type: integer
          minimum: 5900
        vncticket:
          maxLength: 512
          type: string
    NodesCephOsdLvinfo:
      type: object
      properties:
        vg_name:
          type: string
        lv_name:
          type: string
        lv_uuid:
          type: string
        lv_path:
          type: string
        creation_time:
          type: string
        lv_size:
          type: integer
    POST-NodesLxc-RB:
      type: object
      properties:
        cpulimit:
          type: number
          maximum: 8192
        timezone:
          type: string
        cpuunits:
          type: integer
          maximum: 500000
        protection:
          type: boolean
        mp[n]:
          type: string
        swap:
          type: integer
        password:
          type: string
          minLength: 5
        cores:
          maximum: 8192
          type: integer
          minimum: 1
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        hostname:
          maxLength: 255
          type: string
        ssh-public-keys:
          type: string
        debug:
          type: boolean
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
        start:
          type: boolean
        tags:
          type: string
        net[n]:
          type: string
        rootfs:
          type: string
        nameserver:
          type: string
        unique:
          type: boolean
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        console:
          type: boolean
        storage:
          type: string
        unprivileged:
          type: boolean
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        startup:
          type: string
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
        onboot:
          type: boolean
        bwlimit:
          type: number
          minimum: "0"
        dev[n]:
          type: string
        ostemplate:
          maxLength: 255
          type: string
        force:
          type: boolean
        pool:
          type: string
        description:
          maxLength: 8192
          type: string
        memory:
          type: integer
          minimum: 16
        restore:
          type: boolean
        template:
          type: boolean
        tty:
          type: integer
          maximum: 6
        searchdomain:
          type: string
        hookscript:
          type: string
        features:
          type: string
        ignore-unpack-errors:
          type: boolean
        unused[n]:
          type: string
    NodesHardwarePciMdev:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          type:
            type: string
          available:
            type: integer
    POST-NodesQemuStatusResume-RB:
      type: object
      properties:
        nocheck:
          type: boolean
        skiplock:
          type: boolean
    POST-ClusterFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        name:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 64
          type: string
        cidr:
          type: string
    DELETE-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    GET-ClusterNextid-RB:
      type: object
      properties:
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
    ClusterNotificationsEndpointsWebhook:
      type: object
      properties:
        header:
          type: array
          items:
            type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
        comment:
          type: string
        secret:
          type: array
          items:
            type: string
        disable:
          type: boolean
        name:
          type: string
        url:
          type: string
        digest:
          maxLength: 64
          type: string
        body:
          type: string
    POST-NodesLxcClone-RB:
      type: object
      properties:
        snapname:
          maxLength: 40
          type: string
        newid:
          maximum: 999999999
          type: integer
          minimum: 100
        description:
          type: string
        bwlimit:
          type: number
          minimum: "0"
        storage:
          type: string
        pool:
          type: string
        hostname:
          type: string
        target:
          type: string
        full:
          type: boolean
    POST-AccessOpenidAuthurl-RB:
      type: object
      properties:
        redirect-url:
          maxLength: 255
          type: string
        realm:
          maxLength: 32
          type: string
    POST-NodesCephStart-RB:
      type: object
      properties:
        service:
          pattern: (ceph|mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
    NodesLxcConfig:
      type: object
      properties:
        cpulimit:
          type: number
          maximum: 8192
        searchdomain:
          type: string
        cpuunits:
          type: integer
          maximum: 500000
        protection:
          type: boolean
        mp[n]:
          type: string
        swap:
          type: integer
        cores:
          maximum: 8192
          type: integer
          minimum: 1
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        hostname:
          maxLength: 255
          type: string
        debug:
          type: boolean
        tags:
          type: string
        net[n]:
          type: string
        rootfs:
          type: string
        onboot:
          type: boolean
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        lxc:
          type: array
          items:
            items:
              type: string
            type: array
        unprivileged:
          type: boolean
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        startup:
          type: string
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
        console:
          type: boolean
        timezone:
          type: string
        dev[n]:
          type: string
        description:
          maxLength: 8192
          type: string
        memory:
          type: integer
          minimum: 16
        template:
          type: boolean
        tty:
          type: integer
          maximum: 6
        digest:
          type: string
        hookscript:
          type: string
        features:
          type: string
        unused[n]:
          type: string
        nameserver:
          type: string
    POST-NodesStatus-RB:
      type: object
      properties:
        command:
          type: string
          enum:
          - reboot
          - shutdown
    AccessUsersToken:
      type: object
      properties:
        comment:
          type: string
        expire:
          type: integer
        privsep:
          type: boolean
    DELETE-NodesLxcFirewallRules-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    PUT-NodesDns-RB:
      type: object
      properties:
        dns2:
          type: string
        dns3:
          type: string
        search:
          type: string
        dns1:
          type: string
    GET-ClusterMetricsExport-RB:
      type: object
      properties:
        history:
          type: boolean
        local-only:
          type: boolean
        start-time:
          type: integer
    POST-NodesQemuSnapshot-RB:
      type: object
      properties:
        vmstate:
          type: boolean
        description:
          type: string
        snapname:
          maxLength: 40
          type: string
    NodesReplication-GET:
      type: array
      items:
        type: object
        properties: {}
    PUT-AccessAcl-RB:
      type: object
      properties:
        delete:
          type: boolean
        users:
          type: string
        propagate:
          type: boolean
        path:
          type: string
        tokens:
          type: string
        groups:
          type: string
        roles:
          type: string
    PUT-ClusterNotificationsEndpointsWebhook-RB:
      type: object
      properties:
        header:
          type: array
          items:
            type: string
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        method:
          type: string
          enum:
          - post
          - put
          - get
        comment:
          type: string
        secret:
          type: array
          items:
            type: string
        disable:
          type: boolean
        url:
          type: string
        digest:
          maxLength: 64
          type: string
        body:
          type: string
    ClusterNotificationsMatcherfields:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
    NodesHardwareUsb:
      type: array
      items:
        type: object
        properties:
          prodid:
            type: string
          level:
            type: integer
          vendid:
            type: string
          port:
            type: integer
          devnum:
            type: integer
          serial:
            type: string
          usbpath:
            type: string
          manufacturer:
            type: string
          class:
            type: integer
          busnum:
            type: integer
          speed:
            type: string
          product:
            type: string
    NodesCephMon:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          addr:
            type: string
          state:
            type: string
          rank:
            type: integer
          service:
            type: integer
          ceph_version_short:
            type: string
          direxists:
            type: string
          ceph_version:
            type: string
          host:
            type: boolean
          quorum:
            type: boolean
    ClusterNotificationsEndpointsGotify:
      type: object
      properties:
        server:
          type: string
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        disable:
          type: boolean
        name:
          type: string
    ClusterConfigJoin:
      type: object
      properties:
        nodelist:
          type: array
          items:
            additionalProperties: 1
            properties:
              name:
                description: The cluster node name.
                format: pve-node
                type: string
              nodeid:
                description: Node id for this node.
                minimum: 1
                optional: 1
                type: integer
              pve_addr:
                format: ip
                type: string
              pve_fp:
                description: Certificate SHA 256 fingerprint.
                pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                type: string
              quorum_votes:
                minimum: 0
                type: integer
              ring0_addr:
                description: Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)
                format:
                  address:
                    default_key: 1
                    description: Hostname (or IP) of this corosync link address.
                    format: address
                    format_description: IP
                    type: string
                  priority:
                    default: 0
                    description: The priority for the link when knet is used in 'passive' mode (default). Lower value means higher priority. Only valid for cluster create, ignored on node add.
                    maximum: 255
                    minimum: 0
                    optional: 1
                    type: integer
                optional: 1
                type: string
            type: object
        preferred_node:
          type: string
        totem:
          type: object
        config_digest:
          type: string
    AccessUsersToken-GET:
      type: array
      items:
        type: object
        properties:
          tokenid:
            pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
            type: string
          comment:
            type: string
          expire:
            type: integer
          privsep:
            type: boolean
    POST-NodesQemuStatusShutdown-RB:
      type: object
      properties:
        skiplock:
          type: boolean
        forceStop:
          type: boolean
        keepActive:
          type: boolean
        timeout:
          type: integer
    GET-NodesCephOsdLvinfo-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - block
          - db
          - wal
    PUT-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        moveto:
          type: integer
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        proto:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        delete:
          type: string
        dport:
          type: string
        dest:
          maxLength: 512
          type: string
        icmp-type:
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    POST-AccessGroups-RB:
      type: object
      properties:
        comment:
          type: string
        groupid:
          type: string
    DELETE-ClusterFirewallAliases-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    POST-NodesDisksInitgpt-RB:
      type: object
      properties:
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
        uuid:
          pattern: '[a-fA-F0-9\-]+'
          maxLength: 36
          type: string
    NodesRrd:
      type: object
      properties:
        filename:
          type: string
    GET-NodesLxcConfig-RB:
      type: object
      properties:
        snapshot:
          maxLength: 40
          type: string
        current:
          type: boolean
    NodesQemuAgentExec:
      type: object
      properties:
        pid:
          type: integer
    NodesExecute:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesLxcFeature-RB:
      type: object
      properties:
        feature:
          type: string
          enum:
          - snapshot
          - clone
          - copy
        snapname:
          maxLength: 40
          type: string
    DELETE-NodesDisksDirectory-RB:
      type: object
      properties:
        cleanup-config:
          type: boolean
        cleanup-disks:
          type: boolean
    POST-NodesLxcFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        name:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 64
          type: string
        cidr:
          type: string
    NodesDisksZfs:
      type: object
      properties:
        name:
          type: string
        state:
          type: string
        status:
          type: string
        errors:
          type: string
        children:
          type: array
          items:
            properties:
              cksum:
                optional: 1
                type: number
              msg:
                description: An optional message about the vdev.
                type: string
              name:
                description: The name of the vdev or section.
                type: string
              read:
                optional: 1
                type: number
              state:
                description: The state of the vdev.
                optional: 1
                type: string
              write:
                optional: 1
                type: number
            type: object
        scan:
          type: string
        action:
          type: string
    NodesQemuRrddata:
      type: array
      items:
        type: object
        properties: {}
    DELETE-NodesCephOsd-RB:
      type: object
      properties:
        cleanup:
          type: boolean
    GET-ClusterSdnIpams-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - netbox
          - phpipam
          - pve
    GET-ClusterLog-RB:
      type: object
      properties:
        max:
          type: integer
          minimum: 1
    Version:
      type: object
      properties:
        repoid:
          pattern: '[0-9a-fA-F]{8,64}'
          type: string
        console:
          type: string
          enum:
          - applet
          - vv
          - html5
          - xtermjs
        version:
          type: string
        release:
          type: string
    ClusterNotificationsMatchers-GET:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          match-field:
            type: array
            items:
              type: string
          target:
            type: array
            items:
              format: pve-configid
              type: string
          comment:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          invert-match:
            type: boolean
          disable:
            type: boolean
          match-calendar:
            type: array
            items:
              type: string
          mode:
            type: string
            enum:
            - all
            - any
          match-severity:
            type: array
            items:
              type: string
    POST-ClusterHaResourcesRelocate-RB:
      type: object
      properties:
        node:
          type: string
    NodesStoragePrunebackups:
      type: array
      items:
        type: object
        properties:
          volid:
            type: string
          vmid:
            type: integer
          ctime:
            type: integer
          mark:
            type: string
            enum:
            - keep
            - remove
            - protected
            - renamed
          type:
            type: string
    POST-NodesQemuMtunnel-RB:
      type: object
      properties:
        storages:
          type: string
        bridges:
          type: string
    POST-ClusterReplication-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - local
        rate:
          type: number
          minimum: 1
        remove_job:
          type: string
          enum:
          - local
          - full
        comment:
          maxLength: 4096
          type: string
        schedule:
          maxLength: 128
          type: string
        id:
          pattern: '[1-9][0-9]{2,8}-\d{1,9}'
          type: string
        source:
          type: string
        disable:
          type: boolean
        target:
          type: string
    PUT-ClusterNotificationsEndpointsSmtp-RB:
      type: object
      properties:
        mode:
          type: string
          enum:
          - insecure
          - starttls
          - tls
        mailto:
          type: array
          items:
            format: email-or-username
            type: string
        disable:
          type: boolean
        from-address:
          type: string
        port:
          type: integer
        server:
          type: string
        author:
          type: string
        mailto-user:
          type: array
          items:
            format: pve-userid
            type: string
        delete:
          type: array
          items:
            format: pve-configid
            type: string
        password:
          type: string
        digest:
          maxLength: 64
          type: string
        username:
          type: string
        comment:
          type: string
    GET-NodesSyslog-RB:
      type: object
      properties:
        service:
          maxLength: 128
          type: string
        start:
          type: integer
        since:
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
        limit:
          type: integer
        until:
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
    ClusterAcmeAccount-GET:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesStorageUpload-RB:
      type: object
      properties:
        checksum:
          type: string
        tmpfilename:
          pattern: /var/tmp/pveupload-[0-9a-f]+
          type: string
        content:
          type: string
          enum:
          - iso
          - vztmpl
          - import
        filename:
          maxLength: 255
          type: string
        checksum-algorithm:
          type: string
          enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
    GET-Pools-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - qemu
          - lxc
          - storage
    POST-NodesCephPool-RB:
      type: object
      properties:
        name:
          pattern: (?^:^[^:/\s]+$)
          type: string
          title: Name
        add_storages:
          type: boolean
        target_size_ratio:
          title: PG Autoscale Target Ratio
          type: number
        application:
          title: Application
          type: string
          enum:
          - rbd
          - cephfs
          - rgw
        crush_rule:
          title: Crush Rule Name
          type: string
        target_size:
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
          type: string
          title: PG Autoscale Target Size
        min_size:
          title: Min Size
          maximum: 7
          type: integer
          minimum: 1
        pg_autoscale_mode:
          title: PG Autoscale Mode
          type: string
          enum:
          - "on"
          - "off"
          - warn
        pg_num:
          title: PG Num
          maximum: 32768
          type: integer
          minimum: 1
        size:
          title: Size
          maximum: 7
          type: integer
          minimum: 1
        erasure-coding:
          type: string
        pg_num_min:
          title: min. PG Num
          maximum: 32768
          type: integer
    DELETE-ClusterReplication-RB:
      type: object
      properties:
        force:
          type: boolean
        keep:
          type: boolean
    POST-NodesAplinfo-RB:
      type: object
      properties:
        storage:
          type: string
        template:
          maxLength: 255
          type: string
    ClusterCephMetadata:
      type: object
      properties:
        osd:
          type: array
          items: 
        mds:
          type: object
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addr:
                  description: Bind addresses and ports.
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
        node:
          type: object
          properties:
            '{node}':
              properties:
                buildcommit:
                  description: GIT commit used for the build.
                  type: string
                version:
                  description: Version info.
                  properties:
                    parts:
                      description: major, minor & patch
                      type: array
                    str:
                      description: Version as single string.
                      type: string
                  type: object
              type: object
        mgr:
          type: object
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addr:
                  description: Bind address
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
        mon:
          type: object
          properties:
            '{id}':
              description: Useful properties are listed, but not the full list.
              properties:
                addrs:
                  description: Bind addresses and ports.
                  type: string
                ceph_release:
                  description: Ceph release codename currently used.
                  type: string
                ceph_version:
                  description: Version info currently used by the service.
                  type: string
                ceph_version_short:
                  description: Short version (numerical) info currently used by the service.
                  type: string
                hostname:
                  description: Hostname on which the service is running.
                  type: string
                mem_swap_kb:
                  description: Memory of the service currently in swap.
                  type: integer
                mem_total_kb:
                  description: Memory consumption of the service.
                  type: integer
                name:
                  description: Name of the service instance.
                  type: string
              type: object
    NodesLxcSnapshot:
      type: array
      items:
        type: object
        properties:
          snaptime:
            type: integer
          name:
            type: string
          description:
            type: string
          parent:
            type: string
    PUT-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        nomatch:
          type: boolean
    GET-NodesVzdumpExtractconfig-RB:
      type: object
      properties:
        volume:
          type: string
    AccessRoles-GET:
      type: array
      items:
        type: object
        properties:
          roleid:
            type: string
          privs:
            type: string
          special:
            type: boolean
    POST-NodesCephOsdScrub-RB:
      type: object
      properties:
        deep:
          type: boolean
    GET-NodesStorageFilerestoreList-RB:
      type: object
      properties:
        filepath:
          type: string
        volume:
          type: string
    GET-NodesQemuFirewallRefs-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - alias
          - ipset
    POST-NodesLxcMtunnel-RB:
      type: object
      properties:
        storages:
          type: string
        bridges:
          type: string
    NodesDisksLvmthin:
      type: array
      items:
        type: object
        properties:
          lv:
            type: string
          metadata_size:
            type: integer
          vg:
            type: string
          metadata_used:
            type: integer
          used:
            type: integer
          lv_size:
            type: integer
    ClusterLog:
      type: array
      items:
        type: object
        properties: {}
    ClusterConfigNodes:
      type: object
      properties:
        corosync_authkey:
          type: string
        corosync_conf:
          type: string
        warnings:
          type: array
          items:
            type: string
    ClusterFirewallAliases:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          name:
            type: string
          cidr:
            type: string
    ClusterCeph:
      type: array
      items:
        type: object
        properties: {}
    GET-NodesStorageFilerestoreDownload-RB:
      type: object
      properties:
        volume:
          type: string
        tar:
          type: boolean
        filepath:
          type: string
    ClusterNextid:
      type: integer
      desciption: 
    DELETE-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    NodesTasksStatus:
      type: object
      properties:
        upid:
          type: string
        node:
          type: string
        type:
          type: string
        pstart:
          type: integer
        user:
          type: string
        status:
          type: string
          enum:
          - running
          - stopped
        id:
          type: string
        pid:
          type: integer
        starttime:
          type: integer
        exitstatus:
          type: string
    GET-NodesLxcRrd-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        ds:
          type: string
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    POST-AccessTfa-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - totp
          - u2f
          - webauthn
          - recovery
          - yubico
        description:
          maxLength: 255
          type: string
        challenge:
          type: string
        totp:
          type: string
        value:
          type: string
        password:
          minLength: 5
          maxLength: 64
          type: string
    NodesLxcPending:
      type: array
      items:
        type: object
        properties:
          delete:
            type: integer
            maximum: 2
          pending:
            type: string
          value:
            type: string
          key:
            type: string
    POST-NodesQemu-RB:
      type: object
      properties:
        spice_enhancements:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        pool:
          type: string
        onboot:
          type: boolean
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
        cdrom:
          type: string
        template:
          type: boolean
        ciupgrade:
          type: boolean
        hookscript:
          type: string
        keephugepages:
          type: boolean
        cpu:
          type: string
        rng0:
          type: string
        agent:
          type: string
        cpulimit:
          type: number
          maximum: 128
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        boot:
          type: string
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        net[n]:
          type: string
        smbios1:
          maxLength: 512
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        tpmstate0:
          type: string
        archive:
          maxLength: 255
          type: string
        name:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        vga:
          type: string
        sshkeys:
          type: string
        nameserver:
          type: string
        memory:
          type: string
        ide[n]:
          type: string
        kvm:
          type: boolean
        efidisk0:
          type: string
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        cpuunits:
          maximum: 262144
          type: integer
          minimum: 1
        autostart:
          type: boolean
        localtime:
          type: boolean
        startup:
          type: string
        vcpus:
          type: integer
          minimum: 1
        migrate_speed:
          type: integer
        hotplug:
          type: string
        cipassword:
          type: string
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        description:
          maxLength: 8192
          type: string
        vmstatestorage:
          type: string
        cicustom:
          type: string
        machine:
          type: string
        affinity:
          type: string
        sockets:
          type: integer
          minimum: 1
        smp:
          type: integer
          minimum: 1
        bwlimit:
          type: integer
          minimum: "0"
        tablet:
          type: boolean
        ipconfig[n]:
          type: string
        numa:
          type: boolean
        unique:
          type: boolean
        amd-sev:
          type: string
        hostpci[n]:
          type: string
        cores:
          type: integer
          minimum: 1
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        tags:
          type: string
        shares:
          type: integer
          maximum: 50000
        start:
          type: boolean
        virtio[n]:
          type: string
        freeze:
          type: boolean
        scsi[n]:
          type: string
        force:
          type: boolean
        sata[n]:
          type: string
        ivshmem:
          type: string
        watchdog:
          type: string
        unused[n]:
          type: string
        protection:
          type: boolean
        migrate_downtime:
          type: number
        balloon:
          type: integer
        storage:
          type: string
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        args:
          type: string
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        acpi:
          type: boolean
        numa[n]:
          type: string
        searchdomain:
          type: string
        tdf:
          type: boolean
        ciuser:
          type: string
        virtiofs[n]:
          type: string
        import-working-storage:
          type: string
        usb[n]:
          type: string
        reboot:
          type: boolean
        audio0:
          type: string
        live-restore:
          type: boolean
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
    GET-ClusterResources-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - vm
          - storage
          - node
          - sdn
    DELETE-NodesLxc-RB:
      type: object
      properties:
        destroy-unreferenced-disks:
          type: boolean
        purge:
          type: boolean
        force:
          type: boolean
    NodesConfig:
      type: object
      properties:
        ballooning-target:
          type: integer
          maximum: 100
        acmedomain[n]:
          type: string
        startall-onboot-delay:
          type: integer
          maximum: 300
        description:
          maxLength: 65536
          type: string
        acme:
          type: string
        wakeonlan:
          type: string
        digest:
          maxLength: 40
          type: string
    NodesSubscription:
      type: object
      properties:
        level:
          type: string
        sockets:
          type: integer
        productname:
          type: string
        key:
          type: string
        regdate:
          type: string
        checktime:
          type: integer
        signature:
          type: string
        url:
          type: string
        message:
          type: string
        status:
          type: string
          enum:
          - new
          - notfound
          - active
          - invalid
          - expired
          - suspended
        serverid:
          type: string
        nextduedate:
          type: string
    POST-NodesNetwork-RB:
      type: object
      properties:
        gateway6:
          type: string
        comments6:
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        cidr:
          type: string
        cidr6:
          type: string
        autostart:
          type: boolean
        mtu:
          maximum: 65520
          type: integer
          minimum: 1280
        bond_mode:
          type: string
          enum:
          - balance-rr
          - active-backup
          - balance-xor
          - broadcast
          - 802.3ad
          - balance-tlb
          - balance-alb
          - balance-slb
          - lacp-balance-slb
          - lacp-balance-tcp
        slaves:
          type: string
        bridge_vids:
          type: string
        bridge_ports:
          type: string
        netmask6:
          type: integer
          maximum: 128
        ovs_options:
          maxLength: 1024
          type: string
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - vnet
          - unknown
        ovs_tag:
          maximum: 4094
          type: integer
          minimum: 1
        gateway:
          type: string
        netmask:
          type: string
        ovs_ports:
          type: string
        comments:
          type: string
        bond_xmit_hash_policy:
          type: string
          enum:
          - layer2
          - layer2+3
          - layer3+4
        address:
          type: string
        bridge_vlan_aware:
          type: boolean
        vlan-raw-device:
          type: string
        bond-primary:
          type: string
        address6:
          type: string
        vlan-id:
          maximum: 4094
          type: integer
          minimum: 1
        ovs_bonds:
          type: string
        ovs_bridge:
          type: string
    Storage-GET:
      type: array
      items:
        type: object
        properties:
          storage:
            type: string
    NodesFirewall:
      type: array
      items:
        type: object
        properties: {}
    AccessUsers:
      type: object
      properties:
        expire:
          type: integer
        email:
          maxLength: 254
          type: string
        keys:
          pattern: '[0-9a-zA-Z!=]{0,4096}'
          type: string
        tokens:
          type: object
          properties:
            comment:
              optional: 1
              type: string
            expire:
              description: API token expiration date (seconds since epoch). '0' means no expiration date.
              minimum: 0
              optional: 1
              type: integer
            privsep:
              default: 1
              description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
              optional: 1
              type: boolean
        groups:
          type: array
          items:
            format: pve-groupid
            type: string
        comment:
          maxLength: 2048
          type: string
        firstname:
          maxLength: 1024
          type: string
        enable:
          type: boolean
        lastname:
          maxLength: 1024
          type: string
    NodesFirewallRules:
      type: object
      properties:
        macro:
          type: string
        iface:
          type: string
        action:
          type: string
        pos:
          type: integer
        type:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        source:
          type: string
        ipversion:
          type: integer
        comment:
          type: string
    NodesAptRepositories:
      type: object
      properties:
        files:
          type: array
          items:
            properties:
              digest:
                description: Digest of the file as bytes.
                items:
                  type: integer
                type: array
              file-type:
                description: Format of the file.
                enum:
                - list
                - sources
                type: string
              path:
                description: Path to the problematic file.
                type: string
              repositories:
                description: The parsed repositories.
                items:
                  properties:
                    Comment:
                      description: Associated comment
                      optional: 1
                      type: string
                    Components:
                      description: List of repository components
                      items:
                        type: string
                      optional: 1
                      type: array
                    Enabled:
                      description: Whether the repository is enabled or not
                      type: boolean
                    FileType:
                      description: Format of the defining file.
                      enum:
                      - list
                      - sources
                      type: string
                    Options:
                      description: Additional options
                      items:
                        properties:
                          Key:
                            type: string
                          Values:
                            items:
                              type: string
                            type: array
                        type: object
                      optional: 1
                      type: array
                    Suites:
                      description: List of package distribuitions
                      items:
                        type: string
                      type: array
                    Types:
                      description: List of package types.
                      items:
                        enum:
                        - deb
                        - deb-src
                        type: string
                      type: array
                    URIs:
                      description: List of repository URIs.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            type: object
        digest:
          type: string
        infos:
          type: array
          items:
            properties:
              index:
                description: Index of the associated repository within the file.
                type: string
              kind:
                description: Kind of the information (e.g. warning).
                type: string
              message:
                description: Information message.
                type: string
              path:
                description: Path to the associated file.
                type: string
              property:
                description: Property from which the info originates.
                optional: 1
                type: string
            type: object
        standard-repos:
          type: array
          items:
            properties:
              handle:
                description: Handle to identify the repository.
                type: string
              name:
                description: Full name of the repository.
                type: string
              status:
                description: Indicating enabled/disabled status, if the repository is configured.
                optional: 1
                type: boolean
            type: object
        errors:
          type: array
          items:
            properties:
              error:
                description: The error message
                type: string
              path:
                description: Path to the problematic file.
                type: string
            type: object
    ClusterFirewallGroups:
      type: object
      properties:
        macro:
          type: string
        iface:
          type: string
        action:
          type: string
        pos:
          type: integer
        type:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        source:
          type: string
        ipversion:
          type: integer
        comment:
          type: string
    ClusterNotificationsEndpointsWebhook-GET:
      type: array
      items:
        type: object
        properties:
          header:
            type: array
            items:
              type: string
          method:
            type: string
            enum:
            - post
            - put
            - get
          comment:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          secret:
            type: array
            items:
              type: string
          disable:
            type: boolean
          name:
            type: string
          url:
            type: string
          body:
            type: string
    NodesDisksList:
      type: array
      items:
        type: object
        properties:
          osdid:
            type: integer
          model:
            type: string
          serial:
            type: string
          devpath:
            type: string
          gpt:
            type: boolean
          health:
            type: string
          parent:
            type: string
          size:
            type: integer
          mounted:
            type: boolean
          wwn:
            type: string
          osdid-list:
            type: array
            items:
              type: integer
          vendor:
            type: string
          used:
            type: string
    GET-ClusterMappingUsb-RB:
      type: object
      properties:
        check-node:
          type: string
    POST-AccessDomains-RB:
      type: object
      properties:
        query-userinfo:
          type: boolean
        client-id:
          maxLength: 256
          type: string
        mode:
          type: string
          enum:
          - ldap
          - ldaps
          - ldap+starttls
        groups-claim:
          pattern: (?^:[A-Za-z0-9\.\-_]+)
          maxLength: 256
          type: string
        group_filter:
          maxLength: 2048
          type: string
        groups-autocreate:
          type: boolean
        user_attr:
          pattern: '\S{2,}'
          maxLength: 256
          type: string
        group_dn:
          maxLength: 256
          type: string
        cert:
          type: string
        scopes:
          type: string
        check-connection:
          type: boolean
        sync_attributes:
          pattern: '\w+=[^,]+(,\s*\w+=[^,]+)*'
          type: string
        secure:
          type: boolean
        server1:
          maxLength: 256
          type: string
        default:
          type: boolean
        capath:
          type: string
        user_classes:
          type: string
        domain:
          pattern: '\S+'
          maxLength: 256
          type: string
        certkey:
          type: string
        password:
          type: string
        filter:
          maxLength: 2048
          type: string
        client-key:
          maxLength: 256
          type: string
        server2:
          maxLength: 256
          type: string
        autocreate:
          type: boolean
        sync-defaults-options:
          type: string
        acr-values:
          pattern: ^[^\x00-\x1F\x7F <>#"]*$
          type: string
        group_name_attr:
          maxLength: 256
          type: string
        issuer-url:
          maxLength: 256
          type: string
        groups-overwrite:
          type: boolean
        realm:
          maxLength: 32
          type: string
        tfa:
          maxLength: 128
          type: string
        bind_dn:
          maxLength: 256
          type: string
        group_classes:
          type: string
        verify:
          type: boolean
        base_dn:
          maxLength: 256
          type: string
        sslversion:
          type: string
          enum:
          - tlsv1
          - tlsv1_1
          - tlsv1_2
          - tlsv1_3
        username-claim:
          type: string
        comment:
          maxLength: 4096
          type: string
        port:
          maximum: 65535
          type: integer
          minimum: 1
        case-sensitive:
          type: boolean
        prompt:
          pattern: (?:none|login|consent|select_account|\S+)
          type: string
        type:
          type: string
          enum:
          - ad
          - ldap
          - openid
          - pam
          - pve
    POST-NodesQemuAgentSetuserpassword-RB:
      type: object
      properties:
        crypted:
          type: boolean
        password:
          minLength: 5
          maxLength: 1024
          type: string
        username:
          type: string
    NodesCephCfgDb:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          level:
            type: string
          mask:
            type: string
          can_update_at_runtime:
            type: boolean
          section:
            type: string
          value:
            type: string
    ClusterSdnVnetsFirewallRules:
      type: object
      properties:
        macro:
          type: string
        iface:
          type: string
        action:
          type: string
        pos:
          type: integer
        type:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        source:
          type: string
        ipversion:
          type: integer
        comment:
          type: string
    GET-NodesLxcRrddata-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    NodesLxcRrddata:
      type: array
      items:
        type: object
        properties: {}
    NodesStorage:
      type: array
      items:
        type: object
        properties:
          used_fraction:
            type: number
          type:
            type: string
          enabled:
            type: boolean
          content:
            type: string
          shared:
            type: boolean
          storage:
            type: string
          active:
            type: boolean
          used:
            type: integer
          total:
            type: integer
          avail:
            type: integer
    POST-ClusterSdnControllers-RB:
      type: object
      properties:
        peers:
          type: string
        type:
          type: string
          enum:
          - bgp
          - evpn
          - faucet
          - isis
        loopback:
          type: string
        ebgp-multihop:
          type: integer
        ebgp:
          type: boolean
        controller:
          type: string
        isis-net:
          type: string
        asn:
          type: integer
          maximum: 4294967296
        node:
          type: string
        bgp-multipath-as-path-relax:
          type: boolean
        isis-domain:
          type: string
        isis-ifaces:
          type: string
    GET-NodesQueryurlmetadata-RB:
      type: object
      properties:
        url:
          pattern: https?://.*
          type: string
        verify-certificates:
          type: boolean
    POST-NodesExecute-RB:
      type: object
      properties:
        commands:
          type: string
    POST-NodesQemuStatusStart-RB:
      type: object
      properties:
        machine:
          type: string
        stateuri:
          maxLength: 128
          type: string
        skiplock:
          type: boolean
        migration_type:
          type: string
          enum:
          - secure
          - insecure
        migration_network:
          type: string
        force-cpu:
          type: string
        timeout:
          type: integer
        migratedfrom:
          type: string
        targetstorage:
          type: string
    POST-NodesQemuMigrate-RB:
      type: object
      properties:
        with-local-disks:
          type: boolean
        bwlimit:
          type: integer
          minimum: "0"
        online:
          type: boolean
        migration_network:
          type: string
        migration_type:
          type: string
          enum:
          - secure
          - insecure
        target:
          type: string
        targetstorage:
          type: string
        force:
          type: boolean
    NodesApt:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    NodesCephCmdsafety:
      type: object
      properties:
        status:
          type: string
        safe:
          type: boolean
    GET-NodesQemuRrd-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        ds:
          type: string
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    NodesLxcRrd:
      type: object
      properties:
        filename:
          type: string
    DELETE-NodesQemuFirewallIpset-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    GET-ClusterCephMetadata-RB:
      type: object
      properties:
        scope:
          type: string
          enum:
          - all
          - versions
    ClusterHaGroups:
      type: array
      items:
        type: object
        properties:
          group:
            type: string
    NodesFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    NodesHosts:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
        data:
          type: string
    NodesCephRules:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
    POST-NodesQemuTermproxy-RB:
      type: object
      properties:
        serial:
          type: string
          enum:
          - serial0
          - serial1
          - serial2
          - serial3
    POST-NodesSubscription-RB:
      type: object
      properties:
        force:
          type: boolean
    NodesQemu:
      type: array
      items:
        type: object
        properties:
          qmpstatus:
            type: string
          template:
            type: boolean
          status:
            type: string
            enum:
            - stopped
            - running
          cpu:
            type: number
          serial:
            type: boolean
          lock:
            type: string
          name:
            type: string
          mem:
            type: integer
          running-qemu:
            type: string
          diskwrite:
            type: integer
          maxdisk:
            type: integer
          pid:
            type: integer
          cpus:
            type: number
          maxmem:
            type: integer
          tags:
            type: string
          uptime:
            type: integer
          vmid:
            maximum: 999999999
            type: integer
            minimum: 100
          running-machine:
            type: string
          diskread:
            type: integer
          netin:
            type: integer
          netout:
            type: integer
    NodesSdn:
      type: array
      items:
        type: object
        properties: {}
    NodesCephOsdMetadata:
      type: object
      properties:
        devices:
          type: array
          items:
            properties:
              dev_node:
                description: Device node
                type: string
              device:
                description: Kind of OSD device
                enum:
                - block
                - db
                - wal
                type: string
              devices:
                description: Physical disks used
                type: string
              size:
                description: Size in bytes
                type: integer
              support_discard:
                description: Discard support of the physical device
                type: boolean
              type:
                description: Type of device. For example, hdd or ssd
                type: string
            type: object
        osd:
          type: object
          properties:
            back_addr:
              description: Address and port used to talk to other OSDs.
              type: string
            front_addr:
              description: Address and port used to talk to clients and monitors.
              type: string
            hb_back_addr:
              description: Heartbeat address and port for other OSDs.
              type: string
            hb_front_addr:
              description: Heartbeat address and port for clients and monitors.
              type: string
            hostname:
              description: Name of the host containing the OSD.
              type: string
            id:
              description: ID of the OSD.
              type: integer
            mem_usage:
              description: Memory usage of the OSD service.
              type: integer
            osd_data:
              description: Path to the OSD's data directory.
              type: string
            osd_objectstore:
              description: The type of object store used.
              type: string
            pid:
              description: OSD process ID.
              type: integer
            version:
              description: Ceph version of the OSD service.
              type: string
    GET-ClusterAcmeMeta-RB:
      type: object
      properties:
        directory:
          pattern: ^https?://.*
          type: string
    PUT-NodesQemuFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        moveto:
          type: integer
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        proto:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        delete:
          type: string
        dport:
          type: string
        dest:
          maxLength: 512
          type: string
        icmp-type:
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    GET-ClusterMappingDir-RB:
      type: object
      properties:
        check-node:
          type: string
    NodesSyslog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    NodesQemuMtunnelwebsocket:
      type: object
      properties:
        port:
          type: string
        socket:
          type: string
    NodesStatus:
      type: object
      properties:
        cpu:
          type: number
        rootfs:
          type: object
          properties:
            avail:
              description: The available bytes in the root filesystem.
              type: integer
            free:
              description: The free bytes on the root filesystem.
              type: integer
            total:
              description: The total size of the root filesystem in bytes.
              type: integer
            used:
              description: The used bytes in the root filesystem.
              type: integer
        memory:
          type: object
          properties:
            free:
              description: The free memory in bytes.
              type: integer
            total:
              description: The total memory in bytes.
              type: integer
            used:
              description: The used memory in bytes.
              type: integer
        current-kernel:
          type: object
          properties:
            machine:
              description: Hardware (architecture) type
              type: string
            release:
              description: OS kernel release (e.g., "6.8.0")
              type: string
            sysname:
              description: OS kernel name (e.g., "Linux")
              type: string
            version:
              description: OS kernel version with build info
              type: string
        loadavg:
          type: array
          items:
            description: The value of the load.
            type: string
        cpuinfo:
          type: object
          properties:
            cores:
              description: The number of physical cores of the CPU.
              type: integer
            cpus:
              description: The number of logical threads of the CPU.
              type: integer
            model:
              description: The CPU model
              type: string
            sockets:
              description: The number of logical threads of the CPU.
              type: integer
        boot-info:
          type: object
          properties:
            mode:
              description: Through which firmware the system got booted.
              enum:
              - efi
              - legacy-bios
              type: string
            secureboot:
              description: System is booted in secure mode, only applicable for the "efi" mode.
              optional: 1
              type: boolean
        pveversion:
          type: string
    PUT-NodesLxcConfig-RB:
      type: object
      properties:
        cpulimit:
          type: number
          maximum: 8192
        searchdomain:
          type: string
        cpuunits:
          type: integer
          maximum: 500000
        protection:
          type: boolean
        mp[n]:
          type: string
        swap:
          type: integer
        cores:
          maximum: 8192
          type: integer
          minimum: 1
        arch:
          type: string
          enum:
          - amd64
          - i386
          - arm64
          - armhf
          - riscv32
          - riscv64
        hostname:
          maxLength: 255
          type: string
        revert:
          type: string
        debug:
          type: boolean
        tags:
          type: string
        net[n]:
          type: string
        rootfs:
          type: string
        onboot:
          type: boolean
        lock:
          type: string
          enum:
          - backup
          - create
          - destroyed
          - disk
          - fstrim
          - migrate
          - mounted
          - rollback
          - snapshot
          - snapshot-delete
        unprivileged:
          type: boolean
        ostype:
          type: string
          enum:
          - debian
          - devuan
          - ubuntu
          - centos
          - fedora
          - opensuse
          - archlinux
          - alpine
          - gentoo
          - nixos
          - unmanaged
        startup:
          type: string
        cmode:
          type: string
          enum:
          - shell
          - console
          - tty
        console:
          type: boolean
        timezone:
          type: string
        dev[n]:
          type: string
        description:
          maxLength: 8192
          type: string
        memory:
          type: integer
          minimum: 16
        delete:
          type: string
        template:
          type: boolean
        tty:
          type: integer
          maximum: 6
        digest:
          maxLength: 40
          type: string
        hookscript:
          type: string
        features:
          type: string
        unused[n]:
          type: string
        nameserver:
          type: string
    ClusterHaStatus:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesQemuUnlink-RB:
      type: object
      properties:
        idlist:
          type: string
        force:
          type: boolean
    GET-NodesCephCmdsafety-RB:
      type: object
      properties:
        action:
          type: string
          enum:
          - stop
          - destroy
        service:
          type: string
          enum:
          - osd
          - mon
          - mds
        id:
          type: string
    NodesSdnZones:
      type: array
      items:
        type: object
        properties:
          status:
            type: string
            enum:
            - available
            - pending
            - error
          zone:
            type: string
    GET-NodesQemuFeature-RB:
      type: object
      properties:
        feature:
          type: string
          enum:
          - snapshot
          - clone
          - copy
        snapname:
          maxLength: 40
          type: string
    PUT-NodesFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        moveto:
          type: integer
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        proto:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        delete:
          type: string
        dport:
          type: string
        dest:
          maxLength: 512
          type: string
        icmp-type:
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    DELETE-NodesDisksLvmthin-RB:
      type: object
      properties:
        volume-group:
          type: string
        cleanup-disks:
          type: boolean
        cleanup-config:
          type: boolean
    NodesTasks-GET:
      type: array
      items:
        type: object
        properties: {}
    ClusterSdnIpams:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          ipam:
            type: string
    NodesStorageFilerestoreDownload:
      type: string
      format: binary
    NodesFirewallLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    POST-ClusterHaResources-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - ct
          - vm
        max_restart:
          type: integer
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        group:
          type: string
        max_relocate:
          type: integer
        comment:
          maxLength: 4096
          type: string
        sid:
          type: string
    ClusterSdnZones:
      type: array
      items:
        type: object
        properties:
          mtu:
            type: integer
          dhcp:
            type: string
          type:
            type: string
          dnszone:
            type: string
          zone:
            type: string
          state:
            type: string
          ipam:
            type: string
          reversedns:
            type: string
          nodes:
            type: string
          dns:
            type: string
          pending:
            type: boolean
    PUT-NodesNetwork-RB:
      type: object
      properties:
        gateway6:
          type: string
        comments6:
          type: string
        cidr:
          type: string
        cidr6:
          type: string
        bond-primary:
          type: string
        autostart:
          type: boolean
        mtu:
          maximum: 65520
          type: integer
          minimum: 1280
        bond_mode:
          type: string
          enum:
          - balance-rr
          - active-backup
          - balance-xor
          - broadcast
          - 802.3ad
          - balance-tlb
          - balance-alb
          - balance-slb
          - lacp-balance-slb
          - lacp-balance-tcp
        slaves:
          type: string
        bridge_vids:
          type: string
        bridge_ports:
          type: string
        netmask6:
          type: integer
          maximum: 128
        ovs_options:
          maxLength: 1024
          type: string
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - vnet
          - unknown
        ovs_tag:
          maximum: 4094
          type: integer
          minimum: 1
        gateway:
          type: string
        netmask:
          type: string
        ovs_ports:
          type: string
        comments:
          type: string
        bond_xmit_hash_policy:
          type: string
          enum:
          - layer2
          - layer2+3
          - layer3+4
        address:
          type: string
        bridge_vlan_aware:
          type: boolean
        vlan-raw-device:
          type: string
        delete:
          type: string
        address6:
          type: string
        vlan-id:
          maximum: 4094
          type: integer
          minimum: 1
        ovs_bonds:
          type: string
        ovs_bridge:
          type: string
    PUT-ClusterMappingUsb-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        map:
          type: array
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. If a USB path is given, it is only used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the usb device.
                optional: 1
                pattern: (?^:^(\d+)\-(\d+(\.\d+)*)$)
                type: string
            type: string
        description:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
    POST-NodesStorageDownloadurl-RB:
      type: object
      properties:
        filename:
          maxLength: 255
          type: string
        checksum-algorithm:
          type: string
          enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
        compression:
          type: string
        checksum:
          type: string
        verify-certificates:
          type: boolean
        content:
          type: string
          enum:
          - iso
          - vztmpl
          - import
        url:
          pattern: https?://.*
          type: string
    ClusterFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    NodesCephMds:
      type: array
      items:
        type: object
        properties:
          name:
            type: 
          addr:
            type: string
          state:
            type: string
          rank:
            type: integer
          host:
            type: string
          standby_replay:
            type: boolean
    AccessDomains:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          type:
            type: string
          realm:
            type: string
          tfa:
            type: string
            enum:
            - yubico
            - oath
    ClusterMappingPci:
      type: array
      items:
        type: object
        properties:
          checks:
            type: array
            items:
              properties:
                message:
                  description: The message of the error
                  type: string
                severity:
                  description: The severity of the error
                  enum:
                  - warning
                  - error
                  type: string
              type: object
          map:
            type: array
            items:
              description: A mapping for a node.
              type: string
          description:
            type: string
          id:
            type: string
    NodesCephLog:
      type: array
      items:
        type: object
        properties:
          t:
            type: string
          "n":
            type: integer
    POST-ClusterMappingDir-RB:
      type: object
      properties:
        map:
          type: array
          items:
            format:
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: Absolute directory path that should be shared with the guest.
                format: pve-storage-path-in-property-string
                type: string
            type: string
        description:
          maxLength: 4096
          type: string
        id:
          type: string
    ClusterStatus:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          level:
            type: string
          type:
            type: string
            enum:
            - cluster
            - node
          quorate:
            type: boolean
          online:
            type: boolean
          id:
            type: string
          nodes:
            type: integer
          nodeid:
            type: integer
          local:
            type: boolean
          ip:
            type: string
          version:
            type: integer
    NodesLxcInterfaces:
      type: array
      items:
        type: object
        properties:
          inet:
            type: string
          hardware-address:
            type: string
          hwaddr:
            type: string
          inet6:
            type: string
          name:
            type: string
          ip-addresses:
            type: array
            items:
              properties:
                ip-address:
                  description: IP-Address
                  optional: 1
                  type: string
                ip-address-type:
                  description: IP-Family
                  optional: 1
                  type: string
                prefix:
                  description: IP-Prefix
                  optional: 1
                  type: integer
              type: object
    Storage:
      type: object
      properties:
        config:
          properties: 
          type: object
        type:
          type: string
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
        storage:
          type: string
    GET-NodesNetwork-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - vnet
          - any_bridge
          - any_local_bridge
    NodesDisksSmart:
      type: object
      properties:
        attributes:
          type: array
          items: 
        text:
          type: string
        type:
          type: string
        health:
          type: string
    POST-NodesCephStop-RB:
      type: object
      properties:
        service:
          pattern: (ceph|mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
          type: string
    ClusterAcme:
      type: array
      items:
        type: object
        properties: {}
    ClusterFirewallGroups-GET:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          digest:
            maxLength: 64
            type: string
          group:
            pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
            minLength: 2
            maxLength: 18
            type: string
    ClusterConfig:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesDisksWipedisk-RB:
      type: object
      properties:
        disk:
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
    ClusterHaResources:
      type: object
      properties:
        type:
          type: string
        max_restart:
          type: integer
        state:
          type: string
          enum:
          - started
          - stopped
          - enabled
          - disabled
          - ignored
        group:
          type: string
        max_relocate:
          type: integer
        comment:
          type: string
        sid:
          type: string
        digest:
          type: string
    POST-NodesDisksLvmthin-RB:
      type: object
      properties:
        device:
          type: string
        name:
          type: string
        add_storage:
          type: boolean
    ClusterCephFlags:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            enum:
            - nobackfill
            - nodeep-scrub
            - nodown
            - noin
            - noout
            - norebalance
            - norecover
            - noscrub
            - notieragent
            - noup
            - pause
          description:
            type: string
          value:
            type: boolean
    NodesDisksZfs-GET:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          dedup:
            type: number
          size:
            type: integer
          frag:
            type: integer
          free:
            type: integer
          health:
            type: string
          alloc:
            type: integer
    GET-ClusterSdnZones-RB:
      type: object
      properties:
        running:
          type: boolean
        pending:
          type: boolean
    NodesQueryurlmetadata:
      type: object
      properties:
        size:
          type: integer
        mimetype:
          type: string
        filename:
          type: string
    ClusterMetricsServer:
      type: array
      items:
        type: object
        properties:
          server:
            type: string
          disable:
            type: boolean
          port:
            type: integer
          type:
            type: string
          id:
            type: string
    DELETE-NodesDisksLvm-RB:
      type: object
      properties:
        cleanup-config:
          type: boolean
        cleanup-disks:
          type: boolean
    Nodes:
      type: array
      items:
        type: object
        properties:
          cpu:
            type: number
          level:
            type: string
          node:
            type: string
          ssl_fingerprint:
            type: string
          status:
            type: string
            enum:
            - unknown
            - online
            - offline
          mem:
            type: integer
          maxmem:
            type: integer
          uptime:
            type: integer
          maxcpu:
            type: integer
    AccessUsersToken-POST:
      type: object
      properties:
        full-tokenid:
          type: string
        value:
          type: string
        info:
          type: object
          properties:
            comment:
              optional: 1
              type: string
            expire:
              description: API token expiration date (seconds since epoch). '0' means no expiration date.
              minimum: 0
              optional: 1
              type: integer
            privsep:
              default: 1
              description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
              optional: 1
              type: boolean
    NodesQemuVncwebsocket:
      type: object
      properties:
        port:
          type: string
    NodesLxcFirewall:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesQemuSendkey-RB:
      type: object
      properties:
        key:
          type: string
        skiplock:
          type: boolean
    GET-NodesQemuVncwebsocket-RB:
      type: object
      properties:
        port:
          maximum: 5999
          type: integer
          minimum: 5900
        vncticket:
          maxLength: 512
          type: string
    POST-NodesLxcSnapshot-RB:
      type: object
      properties:
        description:
          type: string
        snapname:
          maxLength: 40
          type: string
    NodesCephPoolStatus:
      type: object
      properties:
        pg_num_min:
          title: min. PG Num
          maximum: 32768
          type: integer
        pg_num:
          title: PG Num
          maximum: 32768
          type: integer
          minimum: 1
        noscrub:
          title: noscrub
          type: boolean
        target_size_ratio:
          title: PG Autoscale Target Ratio
          type: number
        fast_read:
          title: Fast Read
          type: boolean
        nodelete:
          title: nodelete
          type: boolean
        hashpspool:
          title: hashpspool
          type: boolean
        nopgchange:
          title: nopgchange
          type: boolean
        name:
          pattern: (?^:^[^:/\s]+$)
          type: string
          title: Name
        statistics:
          title: Statistics
          type: object
        crush_rule:
          title: Crush Rule Name
          type: string
        pg_autoscale_mode:
          title: PG Autoscale Mode
          type: string
          enum:
          - "on"
          - "off"
          - warn
        application_list:
          items: 
          title: Application
          type: array
        size:
          title: Size
          maximum: 7
          type: integer
          minimum: 1
        autoscale_status:
          title: Autoscale Status
          type: object
        nodeep-scrub:
          title: nodeep-scrub
          type: boolean
        pgp_num:
          title: PGP num
          type: integer
        min_size:
          title: Min Size
          maximum: 7
          type: integer
          minimum: 1
        application:
          title: Application
          type: string
          enum:
          - rbd
          - cephfs
          - rgw
        use_gmt_hitset:
          title: use_gmt_hitset
          type: boolean
        id:
          title: ID
          type: integer
        nosizechange:
          title: nosizechange
          type: boolean
        write_fadvise_dontneed:
          title: write_fadvise_dontneed
          type: boolean
        target_size:
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
          type: string
          title: PG Autoscale Target Size
    GET-ClusterSdnControllers-RB:
      type: object
      properties:
        running:
          type: boolean
        pending:
          type: boolean
    PUT-ClusterAcmeAccount-RB:
      type: object
      properties:
        contact:
          type: string
    PUT-NodesFirewallOptions-RB:
      type: object
      properties:
        nf_conntrack_tcp_timeout_established:
          type: integer
          minimum: 7875
        nf_conntrack_tcp_timeout_syn_recv:
          maximum: 60
          type: integer
          minimum: 30
        nosmurfs:
          type: boolean
        delete:
          type: string
        protection_synflood_rate:
          type: integer
        smurf_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nf_conntrack_max:
          type: integer
          minimum: 32768
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        tcpflags:
          type: boolean
        nftables:
          type: boolean
        nf_conntrack_helpers:
          type: string
        protection_synflood:
          type: boolean
        enable:
          type: boolean
        tcp_flags_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ndp:
          type: boolean
        protection_synflood_burst:
          type: integer
        digest:
          maxLength: 64
          type: string
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nf_conntrack_allow_invalid:
          type: boolean
        log_nf_conntrack:
          type: boolean
    GET-NodesStorageImportmetadata-RB:
      type: object
      properties:
        volume:
          type: string
    NodesVzdumpDefaults:
      type: object
      properties:
        lockwait:
          type: integer
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        quiet:
          type: boolean
        mailnotification:
          type: string
          enum:
          - always
          - failure
        exclude-path:
          type: array
          items:
            type: string
        node:
          type: string
        tmpdir:
          type: string
        stdexcludes:
          type: boolean
        maxfiles:
          type: integer
          minimum: 1
        vmid:
          type: string
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        exclude:
          type: string
        fleecing:
          type: string
        pigz:
          type: integer
        storage:
          type: string
        notes-template:
          maxLength: 1024
          type: string
        performance:
          type: string
        notification-target:
          type: string
        remove:
          type: boolean
        bwlimit:
          type: integer
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        script:
          type: string
        dumpdir:
          type: string
        mailto:
          type: string
        pool:
          type: string
        stopwait:
          type: integer
        prune-backups:
          type: string
        stop:
          type: boolean
        protected:
          type: boolean
        ionice:
          type: integer
          maximum: 8
        all:
          type: boolean
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        zstd:
          type: integer
    GET-NodesLxcMtunnelwebsocket-RB:
      type: object
      properties:
        socket:
          type: string
        ticket:
          type: string
    ClusterBackupIncludedvolumes:
      type: object
      properties:
        children:
          type: array
          items:
            properties:
              children:
                description: The volumes of the guest with the information if they will be included in backups.
                items:
                  properties:
                    id:
                      description: Configuration key of the volume.
                      type: string
                    included:
                      description: Whether the volume is included in the backup or not.
                      type: boolean
                    name:
                      description: Name of the volume.
                      type: string
                    reason:
                      description: The reason why the volume is included (or excluded).
                      type: string
                  type: object
                optional: 1
                type: array
              id:
                description: VMID of the guest.
                type: integer
              name:
                description: Name of the guest
                optional: 1
                type: string
              type:
                description: Type of the guest, VM, CT or unknown for removed but not purged guests.
                enum:
                - qemu
                - lxc
                - unknown
                type: string
            type: object
    POST-NodesQemuRemotemigrate-RB:
      type: object
      properties:
        delete:
          type: boolean
        target-storage:
          type: string
        target-endpoint:
          type: string
        bwlimit:
          type: integer
          minimum: "0"
        online:
          type: boolean
        target-bridge:
          type: string
        target-vmid:
          maximum: 999999999
          type: integer
          minimum: 100
    ClusterSdnVnetsSubnets:
      type: array
      items:
        type: object
        properties: {}
    PUT-ClusterFirewallIpset-RB:
      type: object
      properties:
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        nomatch:
          type: boolean
    POST-ClusterSdnVnetsFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        pos:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    ClusterHaStatusCurrent:
      type: array
      items:
        type: object
        properties:
          timestamp:
            type: integer
          node:
            type: string
          type:
            type: 
            enum:
            - quorum
            - master
            - lrm
            - service
          crm_state:
            type: string
          max_restart:
            type: integer
          state:
            type: string
          status:
            type: string
          id:
            type: string
          sid:
            type: string
          max_relocate:
            type: integer
          quorate:
            type: boolean
          request_state:
            type: string
    PUT-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        dhcp-range:
          type: array
          items:
            format: pve-sdn-dhcp-range
            type: string
        dhcp-dns-server:
          type: string
        dnszoneprefix:
          type: string
        snat:
          type: boolean
        digest:
          maxLength: 64
          type: string
        gateway:
          type: string
    NodesDns:
      type: object
      properties:
        dns2:
          type: string
        dns3:
          type: string
        search:
          type: string
        dns1:
          type: string
    GET-AccessPermissions-RB:
      type: object
      properties:
        userid:
          pattern: (?^:^(?^:[^\s:/]+)\@(?^:[A-Za-z][A-Za-z0-9\.\-_]+)(?:!(?^:[A-Za-z][A-Za-z0-9\.\-_]+))?$)
          type: string
        path:
          type: string
    DELETE-NodesFirewallRules-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    DELETE-NodesStoragePrunebackups-RB:
      type: object
      properties:
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
        prune-backups:
          type: string
        type:
          type: string
          enum:
          - qemu
          - lxc
    ClusterSdnVnets:
      type: array
      items:
        type: object
        properties: {}
    PUT-ClusterSdnZones-RB:
      type: object
      properties:
        dnszone:
          type: string
        dhcp:
          type: string
          enum:
          - dnsmasq
        dns:
          type: string
        reversedns:
          type: string
        disable-arp-nd-suppression:
          type: boolean
        mtu:
          type: integer
        nodes:
          type: string
        advertise-subnets:
          type: boolean
        bridge:
          type: string
        vrf-vxlan:
          type: integer
        bridge-disable-mac-learning:
          type: boolean
        tag:
          type: integer
        exitnodes:
          type: string
        exitnodes-local-routing:
          type: boolean
        controller:
          type: string
        delete:
          maxLength: 4096
          type: string
        vxlan-port:
          maximum: 65536
          type: integer
          minimum: 1
        vlan-protocol:
          type: string
          enum:
          - 802.1q
          - 802.1ad
        digest:
          maxLength: 64
          type: string
        dp-id:
          type: integer
        ipam:
          type: string
        rt-import:
          type: string
        peers:
          type: string
        mac:
          type: string
        exitnodes-primary:
          type: string
    POST-NodesQemuTemplate-RB:
      type: object
      properties:
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
    DELETE-ClusterFirewallRules-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    POST-NodesQemuClone-RB:
      type: object
      properties:
        name:
          type: string
        newid:
          maximum: 999999999
          type: integer
          minimum: 100
        description:
          type: string
        bwlimit:
          type: integer
          minimum: "0"
        snapname:
          maxLength: 40
          type: string
        pool:
          type: string
        format:
          type: string
          enum:
          - raw
          - qcow2
          - vmdk
        target:
          type: string
        full:
          type: boolean
        storage:
          type: string
    PUT-ClusterFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        moveto:
          type: integer
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        proto:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        delete:
          type: string
        dport:
          type: string
        dest:
          maxLength: 512
          type: string
        icmp-type:
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    POST-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        name:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 64
          type: string
        cidr:
          type: string
    NodesDisks:
      type: array
      items:
        type: object
        properties: {}
    PUT-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        nomatch:
          type: boolean
    POST-NodesStopall-RB:
      type: object
      properties:
        vms:
          type: string
        timeout:
          type: integer
          maximum: 7200
        force-stop:
          type: boolean
    GET-ClusterAcmeTos-RB:
      type: object
      properties:
        directory:
          pattern: ^https?://.*
          type: string
    NodesQemuSnapshot-GET:
      type: array
      items:
        type: object
        properties: {}
    PUT-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        vmid:
          maximum: 999999999
          type: integer
          minimum: 100
        mac:
          type: string
        ip:
          type: string
    NodesFirewallOptions:
      type: object
      properties:
        nf_conntrack_tcp_timeout_established:
          type: integer
          minimum: 7875
        nf_conntrack_tcp_timeout_syn_recv:
          maximum: 60
          type: integer
          minimum: 30
        nosmurfs:
          type: boolean
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        protection_synflood_rate:
          type: integer
        smurf_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nf_conntrack_max:
          type: integer
          minimum: 32768
        tcpflags:
          type: boolean
        nftables:
          type: boolean
        nf_conntrack_helpers:
          type: string
        protection_synflood:
          type: boolean
        enable:
          type: boolean
        tcp_flags_log_level:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ndp:
          type: boolean
        protection_synflood_burst:
          type: integer
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        nf_conntrack_allow_invalid:
          type: boolean
        log_nf_conntrack:
          type: boolean
    ClusterHaResources-GET:
      type: array
      items:
        type: object
        properties:
          sid:
            type: string
    DELETE-NodesLxcSnapshot-RB:
      type: object
      properties:
        force:
          type: boolean
    AccessUsers-GET:
      type: array
      items:
        type: object
        properties:
          tfa-locked-until:
            type: integer
          realm-type:
            type: string
          lastname:
            maxLength: 1024
            type: string
          firstname:
            maxLength: 1024
            type: string
          tokens:
            type: array
            items:
              properties:
                comment:
                  optional: 1
                  type: string
                expire:
                  description: API token expiration date (seconds since epoch). '0' means no expiration date.
                  minimum: 0
                  optional: 1
                  type: integer
                privsep:
                  default: 1
                  description: Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.
                  optional: 1
                  type: boolean
                tokenid:
                  description: User-specific token identifier.
                  pattern: (?^:[A-Za-z][A-Za-z0-9\.\-_]+)
                  type: string
              type: object
          enable:
            type: boolean
          totp-locked:
            type: boolean
          groups:
            type: string
          keys:
            pattern: '[0-9a-zA-Z!=]{0,4096}'
            type: string
          expire:
            type: integer
          email:
            maxLength: 254
            type: string
          userid:
            maxLength: 64
            type: string
          comment:
            maxLength: 2048
            type: string
    ClusterMetrics:
      type: array
      items:
        type: object
        properties: {}
    NodesStorageContent:
      type: object
      properties:
        size:
          type: integer
        protected:
          type: boolean
        format:
          type: string
        used:
          type: integer
        path:
          type: string
        notes:
          type: string
    NodesCapabilitiesQemu:
      type: array
      items:
        type: object
        properties: {}
    ClusterResources:
      type: array
      items:
        type: object
        properties:
          disk:
            type: integer
          maxcpu:
            type: number
          maxdisk:
            type: integer
          hastate:
            type: string
          status:
            type: string
          cpu:
            type: number
          node:
            type: string
          mem:
            type: integer
          vmid:
            maximum: 999999999
            type: integer
            minimum: 100
          tags:
            type: string
          diskwrite:
            type: integer
          cgroup-mode:
            type: integer
          lock:
            type: string
          storage:
            type: string
          diskread:
            type: integer
          type:
            type: string
            enum:
            - node
            - storage
            - pool
            - qemu
            - lxc
            - openvz
            - sdn
          uptime:
            type: integer
          maxmem:
            type: integer
          netout:
            type: integer
          pool:
            type: string
          plugintype:
            type: string
          content:
            type: string
          level:
            type: string
          netin:
            type: integer
          name:
            type: string
          template:
            type: boolean
          id:
            type: string
    POST-AccessUsersToken-RB:
      type: object
      properties:
        comment:
          type: string
        expire:
          type: integer
        privsep:
          type: boolean
    ClusterConfigNodes-GET:
      type: array
      items:
        type: object
        properties:
          node:
            type: string
    POST-ClusterNotificationsMatchers-RB:
      type: object
      properties:
        name:
          type: string
        match-field:
          type: array
          items:
            type: string
        target:
          type: array
          items:
            format: pve-configid
            type: string
        comment:
          type: string
        invert-match:
          type: boolean
        disable:
          type: boolean
        match-calendar:
          type: array
          items:
            type: string
        mode:
          type: string
          enum:
          - all
          - any
        match-severity:
          type: array
          items:
            type: string
    PUT-NodesCephPool-RB:
      type: object
      properties:
        size:
          title: Size
          maximum: 7
          type: integer
          minimum: 1
        target_size_ratio:
          title: PG Autoscale Target Ratio
          type: number
        application:
          title: Application
          type: string
          enum:
          - rbd
          - cephfs
          - rgw
        crush_rule:
          title: Crush Rule Name
          type: string
        target_size:
          pattern: ^(\d+(\.\d+)?)([KMGT])?$
          type: string
          title: PG Autoscale Target Size
        min_size:
          title: Min Size
          maximum: 7
          type: integer
          minimum: 1
        pg_num_min:
          title: min. PG Num
          maximum: 32768
          type: integer
        pg_num:
          title: PG Num
          maximum: 32768
          type: integer
          minimum: 1
        pg_autoscale_mode:
          title: PG Autoscale Mode
          type: string
          enum:
          - "on"
          - "off"
          - warn
    GET-NodesHardwarePci-RB:
      type: object
      properties:
        verbose:
          type: boolean
        pci-class-blacklist:
          type: string
    POST-Pools-RB:
      type: object
      properties:
        comment:
          type: string
        poolid:
          type: string
    NodesSdnZonesContent:
      type: array
      items:
        type: object
        properties:
          statusmsg:
            type: string
          status:
            type: string
          vnet:
            type: string
    PUT-ClusterFirewallGroups-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        moveto:
          type: integer
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        proto:
          type: string
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        delete:
          type: string
        dport:
          type: string
        dest:
          maxLength: 512
          type: string
        icmp-type:
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    NodesRrddata:
      type: array
      items:
        type: object
        properties: {}
    DELETE-NodesCertificatesCustom-RB:
      type: object
      properties:
        restart:
          type: boolean
    NodesHardwarePci-GET:
      type: array
      items:
        type: object
        properties:
          method:
            type: string
    POST-NodesLxcSpiceproxy-RB:
      type: object
      properties:
        proxy:
          type: string
    POST-NodesQemuMovedisk-RB:
      type: object
      properties:
        delete:
          type: boolean
        target-digest:
          maxLength: 40
          type: string
        target-disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        bwlimit:
          type: integer
          minimum: "0"
        disk:
          type: string
          enum:
          - ide0
          - ide1
          - ide2
          - ide3
          - scsi0
          - scsi1
          - scsi2
          - scsi3
          - scsi4
          - scsi5
          - scsi6
          - scsi7
          - scsi8
          - scsi9
          - scsi10
          - scsi11
          - scsi12
          - scsi13
          - scsi14
          - scsi15
          - scsi16
          - scsi17
          - scsi18
          - scsi19
          - scsi20
          - scsi21
          - scsi22
          - scsi23
          - scsi24
          - scsi25
          - scsi26
          - scsi27
          - scsi28
          - scsi29
          - scsi30
          - virtio0
          - virtio1
          - virtio2
          - virtio3
          - virtio4
          - virtio5
          - virtio6
          - virtio7
          - virtio8
          - virtio9
          - virtio10
          - virtio11
          - virtio12
          - virtio13
          - virtio14
          - virtio15
          - sata0
          - sata1
          - sata2
          - sata3
          - sata4
          - sata5
          - efidisk0
          - tpmstate0
          - unused0
          - unused1
          - unused2
          - unused3
          - unused4
          - unused5
          - unused6
          - unused7
          - unused8
          - unused9
          - unused10
          - unused11
          - unused12
          - unused13
          - unused14
          - unused15
          - unused16
          - unused17
          - unused18
          - unused19
          - unused20
          - unused21
          - unused22
          - unused23
          - unused24
          - unused25
          - unused26
          - unused27
          - unused28
          - unused29
          - unused30
          - unused31
          - unused32
          - unused33
          - unused34
          - unused35
          - unused36
          - unused37
          - unused38
          - unused39
          - unused40
          - unused41
          - unused42
          - unused43
          - unused44
          - unused45
          - unused46
          - unused47
          - unused48
          - unused49
          - unused50
          - unused51
          - unused52
          - unused53
          - unused54
          - unused55
          - unused56
          - unused57
          - unused58
          - unused59
          - unused60
          - unused61
          - unused62
          - unused63
          - unused64
          - unused65
          - unused66
          - unused67
          - unused68
          - unused69
          - unused70
          - unused71
          - unused72
          - unused73
          - unused74
          - unused75
          - unused76
          - unused77
          - unused78
          - unused79
          - unused80
          - unused81
          - unused82
          - unused83
          - unused84
          - unused85
          - unused86
          - unused87
          - unused88
          - unused89
          - unused90
          - unused91
          - unused92
          - unused93
          - unused94
          - unused95
          - unused96
          - unused97
          - unused98
          - unused99
          - unused100
          - unused101
          - unused102
          - unused103
          - unused104
          - unused105
          - unused106
          - unused107
          - unused108
          - unused109
          - unused110
          - unused111
          - unused112
          - unused113
          - unused114
          - unused115
          - unused116
          - unused117
          - unused118
          - unused119
          - unused120
          - unused121
          - unused122
          - unused123
          - unused124
          - unused125
          - unused126
          - unused127
          - unused128
          - unused129
          - unused130
          - unused131
          - unused132
          - unused133
          - unused134
          - unused135
          - unused136
          - unused137
          - unused138
          - unused139
          - unused140
          - unused141
          - unused142
          - unused143
          - unused144
          - unused145
          - unused146
          - unused147
          - unused148
          - unused149
          - unused150
          - unused151
          - unused152
          - unused153
          - unused154
          - unused155
          - unused156
          - unused157
          - unused158
          - unused159
          - unused160
          - unused161
          - unused162
          - unused163
          - unused164
          - unused165
          - unused166
          - unused167
          - unused168
          - unused169
          - unused170
          - unused171
          - unused172
          - unused173
          - unused174
          - unused175
          - unused176
          - unused177
          - unused178
          - unused179
          - unused180
          - unused181
          - unused182
          - unused183
          - unused184
          - unused185
          - unused186
          - unused187
          - unused188
          - unused189
          - unused190
          - unused191
          - unused192
          - unused193
          - unused194
          - unused195
          - unused196
          - unused197
          - unused198
          - unused199
          - unused200
          - unused201
          - unused202
          - unused203
          - unused204
          - unused205
          - unused206
          - unused207
          - unused208
          - unused209
          - unused210
          - unused211
          - unused212
          - unused213
          - unused214
          - unused215
          - unused216
          - unused217
          - unused218
          - unused219
          - unused220
          - unused221
          - unused222
          - unused223
          - unused224
          - unused225
          - unused226
          - unused227
          - unused228
          - unused229
          - unused230
          - unused231
          - unused232
          - unused233
          - unused234
          - unused235
          - unused236
          - unused237
          - unused238
          - unused239
          - unused240
          - unused241
          - unused242
          - unused243
          - unused244
          - unused245
          - unused246
          - unused247
          - unused248
          - unused249
          - unused250
          - unused251
          - unused252
          - unused253
          - unused254
          - unused255
        storage:
          type: string
        format:
          type: string
          enum:
          - raw
          - qcow2
          - vmdk
        digest:
          maxLength: 40
          type: string
        target-vmid:
          maximum: 999999999
          type: integer
          minimum: 100
    GET-NodesQemuAgentFileread-RB:
      type: object
      properties:
        file:
          type: string
    Pools:
      type: object
      properties:
        comment:
          type: string
        members:
          type: array
          items:
            additionalProperties: 1
            properties:
              id:
                type: string
              node:
                type: string
              storage:
                optional: 1
                type: string
              type:
                enum:
                - qemu
                - lxc
                - openvz
                - storage
                type: string
              vmid:
                optional: 1
                type: integer
            type: object
    ClusterAcmeMeta:
      type: object
      properties:
        termsOfService:
          type: string
        externalAccountRequired:
          type: boolean
        website:
          type: string
        caaIdentities:
          type: array
          items:
            type: string
    POST-NodesLxcStatusStart-RB:
      type: object
      properties:
        debug:
          type: boolean
        skiplock:
          type: boolean
    GET-NodesReplication-RB:
      type: object
      properties:
        guest:
          maximum: 999999999
          type: integer
          minimum: 100
    NodesQemuFirewallRefs:
      type: array
      items:
        type: object
        properties:
          ref:
            type: string
          comment:
            type: string
          name:
            type: string
          type:
            type: string
            enum:
            - alias
            - ipset
          scope:
            type: string
    NodesLxcFirewallOptions:
      type: object
      properties:
        log_level_out:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        dhcp:
          type: boolean
        policy_out:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
        log_level_in:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        ndp:
          type: boolean
        ipfilter:
          type: boolean
        radv:
          type: boolean
        macfilter:
          type: boolean
        enable:
          type: boolean
        policy_in:
          type: string
          enum:
          - ACCEPT
          - REJECT
          - DROP
    AccessUsersUnlocktfa:
      type: integer
      minimum: 0
      maximum: 1
      description: 
    ClusterNotificationsMatcherfieldvalues:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          field:
            type: string
          value:
            type: string
    POST-ClusterMetricsServer-RB:
      type: object
      properties:
        path:
          type: string
        timeout:
          type: integer
        disable:
          type: boolean
        bucket:
          type: string
        mtu:
          maximum: 65536
          type: integer
          minimum: 512
        port:
          maximum: 65536
          type: integer
          minimum: 1
        server:
          type: string
        organization:
          type: string
        influxdbproto:
          type: string
          enum:
          - udp
          - http
          - https
        token:
          type: string
        verify-certificate:
          type: boolean
        max-body-size:
          type: integer
          minimum: 1
        proto:
          type: string
          enum:
          - udp
          - tcp
        api-path-prefix:
          type: string
        type:
          type: string
          enum:
          - graphite
          - influxdb
    POST-NodesDisksDirectory-RB:
      type: object
      properties:
        device:
          type: string
        name:
          type: string
        add_storage:
          type: boolean
        filesystem:
          type: string
          enum:
          - ext4
          - xfs
    NodesStorageImportmetadata:
      type: object
      properties:
        net:
          type: object
          properties: 
        type:
          type: string
          enum:
          - vm
        disks:
          type: object
          properties: 
        warnings:
          type: array
          items:
            additionalProperties: 1
            properties:
              key:
                description: Related subject (config) key of warning.
                optional: 1
                type: string
              type:
                description: What this warning is about.
                enum:
                - cdrom-image-ignored
                - efi-state-lost
                - guest-is-running
                - nvme-unsupported
                - ova-needs-extracting
                - ovmf-with-lsi-unsupported
                - serial-port-socket-only
                type: string
              value:
                description: Related subject (config) value of warning.
                optional: 1
                type: string
            type: object
        source:
          type: string
          enum:
          - esxi
        create-args:
          type: object
          properties: 
    GET-NodesStorageRrd-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        ds:
          type: string
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    ClusterSdnControllers:
      type: array
      items:
        type: object
        properties:
          controller:
            type: string
          pending:
            type: boolean
          type:
            type: string
          state:
            type: string
    AccessGroups-GET:
      type: array
      items:
        type: object
        properties:
          comment:
            type: string
          groupid:
            type: string
          users:
            type: string
    PUT-NodesSubscription-RB:
      type: object
      properties:
        key:
          pattern: '\s*pve([1248])([cbsp])-[0-9a-f]{10}\s*'
          maxLength: 32
          type: string
    NodesQemuFirewallRules:
      type: object
      properties:
        macro:
          type: string
        iface:
          type: string
        action:
          type: string
        pos:
          type: integer
        type:
          type: string
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          type: string
        sport:
          type: string
        source:
          type: string
        ipversion:
          type: integer
        comment:
          type: string
    PUT-ClusterSdnVnetsFirewallOptions-RB:
      type: object
      properties:
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        delete:
          type: string
        enable:
          type: boolean
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        digest:
          maxLength: 64
          type: string
    ClusterSdnDns:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          dns:
            type: string
    GET-AccessUsers-RB:
      type: object
      properties:
        full:
          type: boolean
        enabled:
          type: boolean
    ClusterNotificationsEndpointsSendmail-GET:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          mailto:
            type: array
            items:
              format: email-or-username
              type: string
          comment:
            type: string
          origin:
            type: string
            enum:
            - user-created
            - builtin
            - modified-builtin
          mailto-user:
            type: array
            items:
              format: pve-userid
              type: string
          from-address:
            type: string
          author:
            type: string
          disable:
            type: boolean
    NodesAptUpdate:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesCertificatesCustom-RB:
      type: object
      properties:
        restart:
          type: boolean
        force:
          type: boolean
        certificates:
          type: string
        key:
          type: string
    PUT-ClusterOptions-RB:
      type: object
      properties:
        tag-style:
          type: string
        max_workers:
          type: integer
          minimum: 1
        migration:
          type: string
        webauthn:
          type: string
        language:
          type: string
          enum:
          - ar
          - ca
          - da
          - de
          - en
          - es
          - eu
          - fa
          - fr
          - hr
          - he
          - it
          - ja
          - ka
          - kr
          - nb
          - nl
          - nn
          - pl
          - pt_BR
          - ru
          - sl
          - sv
          - tr
          - ukr
          - zh_CN
          - zh_TW
        http_proxy:
          pattern: http://.*
          type: string
        notify:
          type: string
        migration_unsecure:
          type: boolean
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        bwlimit:
          type: string
        crs:
          type: string
        mac_prefix:
          type: string
        user-tag-access:
          type: string
        ha:
          type: string
        description:
          maxLength: 65536
          type: string
        consent-text:
          maxLength: 65536
          type: string
        next-id:
          type: string
        delete:
          type: string
        console:
          type: string
          enum:
          - applet
          - vv
          - html5
          - xtermjs
        fencing:
          type: string
          enum:
          - watchdog
          - hardware
          - both
        u2f:
          type: string
        registered-tags:
          pattern: (?:(?^i:[a-z0-9_][a-z0-9_\-\+\.]*);)*(?^i:[a-z0-9_][a-z0-9_\-\+\.]*)
          type: string
        email_from:
          type: string
    GET-ClusterHaResources-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - ct
          - vm
    POST-NodesSuspendall-RB:
      type: object
      properties:
        vms:
          type: string
    ClusterFirewall:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesQemuAgentFilewrite-RB:
      type: object
      properties:
        encode:
          type: boolean
        file:
          type: string
        content:
          maxLength: 61440
          type: string
    GET-NodesStorage-RB:
      type: object
      properties:
        target:
          type: string
        content:
          type: string
        enabled:
          type: boolean
        format:
          type: boolean
        storage:
          type: string
    POST-ClusterMappingUsb-RB:
      type: object
      properties:
        map:
          type: array
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. If a USB path is given, it is only used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the usb device.
                optional: 1
                pattern: (?^:^(\d+)\-(\d+(\.\d+)*)$)
                type: string
            type: string
        description:
          maxLength: 4096
          type: string
        id:
          type: string
    NodesVersion:
      type: object
      properties:
        repoid:
          type: string
        version:
          type: string
        release:
          type: string
    ClusterFirewallGroups-GET-AV:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    POST-NodesCephOsd-RB:
      type: object
      properties:
        crush-device-class:
          type: string
        db_dev_size:
          type: number
          minimum: 1
        db_dev:
          type: string
        wal_dev_size:
          type: number
          minimum: 0.5
        encrypted:
          type: boolean
        osds-per-device:
          type: integer
          minimum: "1"
        wal_dev:
          type: string
        dev:
          type: string
    POST-NodesCephMds-RB:
      type: object
      properties:
        hotstandby:
          type: boolean
    POST-NodesLxcMigrate-RB:
      type: object
      properties:
        timeout:
          type: integer
        target-storage:
          type: string
        bwlimit:
          type: number
          minimum: "0"
        online:
          type: boolean
        restart:
          type: boolean
        target:
          type: string
    NodesNetwork-GET:
      type: array
      items:
        type: object
        properties:
          exists:
            type: boolean
          options6:
            type: array
            items:
              description: An interface property.
              type: string
          gateway6:
            type: string
          vxlan-id:
            type: integer
          comments6:
            type: string
          iface:
            minLength: 2
            maxLength: 20
            type: string
          method:
            type: string
            enum:
            - loopback
            - dhcp
            - manual
            - static
            - auto
          cidr:
            type: string
          cidr6:
            type: string
          options:
            type: array
            items:
              description: An interface property.
              type: string
          autostart:
            type: boolean
          mtu:
            maximum: 65520
            type: integer
            minimum: 1280
          vxlan-svcnodeip:
            type: string
          bridge-unicast-flood:
            type: boolean
          vxlan-physdev:
            type: string
          families:
            type: array
            items:
              description: A network family.
              enum:
              - inet
              - inet6
              type: string
          bond_mode:
            type: string
            enum:
            - balance-rr
            - active-backup
            - balance-xor
            - broadcast
            - 802.3ad
            - balance-tlb
            - balance-alb
            - balance-slb
            - lacp-balance-slb
            - lacp-balance-tcp
          slaves:
            type: string
          bridge_vids:
            type: string
          active:
            type: boolean
          bridge_ports:
            type: string
          netmask6:
            type: integer
            maximum: 128
          ovs_bridge:
            type: string
          vlan-protocol:
            type: string
            enum:
            - 802.1ad
            - 802.1q
          bridge-access:
            type: integer
          ovs_options:
            maxLength: 1024
            type: string
          type:
            type: string
            enum:
            - bridge
            - bond
            - eth
            - alias
            - vlan
            - OVSBridge
            - OVSBond
            - OVSPort
            - OVSIntPort
            - vnet
            - unknown
          ovs_tag:
            maximum: 4094
            type: integer
            minimum: 1
          gateway:
            type: string
          netmask:
            type: string
          ovs_ports:
            type: string
          comments:
            type: string
          uplink-id:
            type: string
          bond_xmit_hash_policy:
            type: string
            enum:
            - layer2
            - layer2+3
            - layer3+4
          address:
            type: string
          bridge-arp-nd-suppress:
            type: boolean
          vxlan-local-tunnelip:
            type: string
          bridge_vlan_aware:
            type: boolean
          vlan-raw-device:
            type: string
          bridge-learning:
            type: boolean
          method6:
            type: string
            enum:
            - loopback
            - dhcp
            - manual
            - static
            - auto
          link-type:
            type: string
          priority:
            type: integer
          bond-primary:
            type: string
          address6:
            type: string
          vlan-id:
            maximum: 4094
            type: integer
            minimum: 1
          ovs_bonds:
            type: string
          bridge-multicast-flood:
            type: boolean
    GET-NodesRrddata-RB:
      type: object
      properties:
        timeframe:
          type: string
          enum:
          - hour
          - day
          - week
          - month
          - year
        cf:
          type: string
          enum:
          - AVERAGE
          - MAX
    NodesScanIscsi:
      type: array
      items:
        type: object
        properties:
          portal:
            type: string
          target:
            type: string
    PUT-NodesLxcResize-RB:
      type: object
      properties:
        size:
          pattern: '\+?\d+(\.\d+)?[KMGT]?'
          type: string
        digest:
          maxLength: 40
          type: string
        disk:
          type: string
          enum:
          - rootfs
          - mp0
          - mp1
          - mp2
          - mp3
          - mp4
          - mp5
          - mp6
          - mp7
          - mp8
          - mp9
          - mp10
          - mp11
          - mp12
          - mp13
          - mp14
          - mp15
          - mp16
          - mp17
          - mp18
          - mp19
          - mp20
          - mp21
          - mp22
          - mp23
          - mp24
          - mp25
          - mp26
          - mp27
          - mp28
          - mp29
          - mp30
          - mp31
          - mp32
          - mp33
          - mp34
          - mp35
          - mp36
          - mp37
          - mp38
          - mp39
          - mp40
          - mp41
          - mp42
          - mp43
          - mp44
          - mp45
          - mp46
          - mp47
          - mp48
          - mp49
          - mp50
          - mp51
          - mp52
          - mp53
          - mp54
          - mp55
          - mp56
          - mp57
          - mp58
          - mp59
          - mp60
          - mp61
          - mp62
          - mp63
          - mp64
          - mp65
          - mp66
          - mp67
          - mp68
          - mp69
          - mp70
          - mp71
          - mp72
          - mp73
          - mp74
          - mp75
          - mp76
          - mp77
          - mp78
          - mp79
          - mp80
          - mp81
          - mp82
          - mp83
          - mp84
          - mp85
          - mp86
          - mp87
          - mp88
          - mp89
          - mp90
          - mp91
          - mp92
          - mp93
          - mp94
          - mp95
          - mp96
          - mp97
          - mp98
          - mp99
          - mp100
          - mp101
          - mp102
          - mp103
          - mp104
          - mp105
          - mp106
          - mp107
          - mp108
          - mp109
          - mp110
          - mp111
          - mp112
          - mp113
          - mp114
          - mp115
          - mp116
          - mp117
          - mp118
          - mp119
          - mp120
          - mp121
          - mp122
          - mp123
          - mp124
          - mp125
          - mp126
          - mp127
          - mp128
          - mp129
          - mp130
          - mp131
          - mp132
          - mp133
          - mp134
          - mp135
          - mp136
          - mp137
          - mp138
          - mp139
          - mp140
          - mp141
          - mp142
          - mp143
          - mp144
          - mp145
          - mp146
          - mp147
          - mp148
          - mp149
          - mp150
          - mp151
          - mp152
          - mp153
          - mp154
          - mp155
          - mp156
          - mp157
          - mp158
          - mp159
          - mp160
          - mp161
          - mp162
          - mp163
          - mp164
          - mp165
          - mp166
          - mp167
          - mp168
          - mp169
          - mp170
          - mp171
          - mp172
          - mp173
          - mp174
          - mp175
          - mp176
          - mp177
          - mp178
          - mp179
          - mp180
          - mp181
          - mp182
          - mp183
          - mp184
          - mp185
          - mp186
          - mp187
          - mp188
          - mp189
          - mp190
          - mp191
          - mp192
          - mp193
          - mp194
          - mp195
          - mp196
          - mp197
          - mp198
          - mp199
          - mp200
          - mp201
          - mp202
          - mp203
          - mp204
          - mp205
          - mp206
          - mp207
          - mp208
          - mp209
          - mp210
          - mp211
          - mp212
          - mp213
          - mp214
          - mp215
          - mp216
          - mp217
          - mp218
          - mp219
          - mp220
          - mp221
          - mp222
          - mp223
          - mp224
          - mp225
          - mp226
          - mp227
          - mp228
          - mp229
          - mp230
          - mp231
          - mp232
          - mp233
          - mp234
          - mp235
          - mp236
          - mp237
          - mp238
          - mp239
          - mp240
          - mp241
          - mp242
          - mp243
          - mp244
          - mp245
          - mp246
          - mp247
          - mp248
          - mp249
          - mp250
          - mp251
          - mp252
          - mp253
          - mp254
          - mp255
    GET-ClusterSdnVnetsSubnets-RB:
      type: object
      properties:
        running:
          type: boolean
        pending:
          type: boolean
    NodesScanNfs:
      type: array
      items:
        type: object
        properties:
          options:
            type: string
          path:
            type: string
    POST-ClusterSdnVnetsIps-RB:
      type: object
      properties:
        zone:
          type: string
        mac:
          type: string
        ip:
          type: string
    GET-NodesCephPoolStatus-RB:
      type: object
      properties:
        verbose:
          type: boolean
    POST-NodesQemuConfig-RB:
      type: object
      properties:
        spice_enhancements:
          type: string
        lock:
          type: string
          enum:
          - backup
          - clone
          - create
          - migrate
          - rollback
          - snapshot
          - snapshot-delete
          - suspending
          - suspended
        onboot:
          type: boolean
        cdrom:
          type: string
        migrate_downtime:
          type: number
        ciupgrade:
          type: boolean
        hookscript:
          type: string
        digest:
          maxLength: 40
          type: string
        cpu:
          type: string
        rng0:
          type: string
        agent:
          type: string
        cpulimit:
          type: number
          maximum: 128
        scsihw:
          type: string
          enum:
          - lsi
          - lsi53c810
          - virtio-scsi-pci
          - virtio-scsi-single
          - megasas
          - pvscsi
        boot:
          type: string
        vmgenid:
          pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
          type: string
        parallel[n]:
          pattern: /dev/parport\d+|/dev/usb/lp\d+
          type: string
        net[n]:
          type: string
        smbios1:
          maxLength: 512
          type: string
        serial[n]:
          pattern: (/dev/.+|socket)
          type: string
        tpmstate0:
          type: string
        name:
          type: string
        bios:
          type: string
          enum:
          - seabios
          - ovmf
        vga:
          type: string
        sshkeys:
          type: string
        nameserver:
          type: string
        memory:
          type: string
        ide[n]:
          type: string
        kvm:
          type: boolean
        efidisk0:
          type: string
        startdate:
          pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
          type: string
        vmstatestorage:
          type: string
        arch:
          type: string
          enum:
          - x86_64
          - aarch64
        cpuunits:
          maximum: 262144
          type: integer
          minimum: 1
        autostart:
          type: boolean
        localtime:
          type: boolean
        keyboard:
          type: string
          enum:
          - de
          - de-ch
          - da
          - en-gb
          - en-us
          - es
          - fi
          - fr
          - fr-be
          - fr-ca
          - fr-ch
          - hu
          - is
          - it
          - ja
          - lt
          - mk
          - nl
          - "no"
          - pl
          - pt
          - pt-br
          - sv
          - sl
          - tr
        keephugepages:
          type: boolean
        migrate_speed:
          type: integer
        hotplug:
          type: string
        cipassword:
          type: string
        bootdisk:
          pattern: (ide|sata|scsi|virtio)\d+
          type: string
        description:
          maxLength: 8192
          type: string
        template:
          type: boolean
        cicustom:
          type: string
        machine:
          type: string
        affinity:
          type: string
        sockets:
          type: integer
          minimum: 1
        smp:
          type: integer
          minimum: 1
        tablet:
          type: boolean
        ipconfig[n]:
          type: string
        numa:
          type: boolean
        delete:
          type: string
        startup:
          type: string
        amd-sev:
          type: string
        hostpci[n]:
          type: string
        cores:
          type: integer
          minimum: 1
        ostype:
          type: string
          enum:
          - other
          - wxp
          - w2k
          - w2k3
          - w2k8
          - wvista
          - win7
          - win8
          - win10
          - win11
          - l24
          - l26
          - solaris
        tags:
          type: string
        shares:
          type: integer
          maximum: 50000
        vcpus:
          type: integer
          minimum: 1
        virtio[n]:
          type: string
        skiplock:
          type: boolean
        freeze:
          type: boolean
        scsi[n]:
          type: string
        force:
          type: boolean
        sata[n]:
          type: string
        ivshmem:
          type: string
        watchdog:
          type: string
        unused[n]:
          type: string
        protection:
          type: boolean
        background_delay:
          maximum: 30
          type: integer
          minimum: 1
        balloon:
          type: integer
        hugepages:
          type: string
          enum:
          - any
          - "2"
          - "1024"
        args:
          type: string
        revert:
          type: string
        acpi:
          type: boolean
        numa[n]:
          type: string
        searchdomain:
          type: string
        tdf:
          type: boolean
        ciuser:
          type: string
        virtiofs[n]:
          type: string
        import-working-storage:
          type: string
        usb[n]:
          type: string
        reboot:
          type: boolean
        audio0:
          type: string
        citype:
          type: string
          enum:
          - configdrive2
          - nocloud
          - opennebula
    NodesCapabilities:
      type: array
      items:
        type: object
        properties: {}
    GET-ClusterAcmePlugins-RB:
      type: object
      properties:
        type:
          type: string
          enum:
          - dns
          - standalone
    NodesScan:
      type: array
      items:
        type: object
        properties:
          method:
            type: string
    ClusterSdnVnetsFirewallOptions:
      type: object
      properties:
        policy_forward:
          type: string
          enum:
          - ACCEPT
          - DROP
        enable:
          type: boolean
        log_level_forward:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
    DELETE-NodesDisksZfs-RB:
      type: object
      properties:
        cleanup-config:
          type: boolean
        cleanup-disks:
          type: boolean
    POST-ClusterFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        pos:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    POST-NodesCephInit-RB:
      type: object
      properties:
        size:
          maximum: 7
          type: integer
          minimum: 1
        pg_bits:
          maximum: 14
          type: integer
          minimum: 6
        min_size:
          maximum: 7
          type: integer
          minimum: 1
        network:
          maxLength: 128
          type: string
        cluster-network:
          maxLength: 128
          type: string
        disable_cephx:
          type: boolean
    PUT-ClusterSdnVnets-RB:
      type: object
      properties:
        zone:
          type: string
        delete:
          maxLength: 4096
          type: string
        vlanaware:
          type: boolean
        tag:
          type: integer
        alias:
          pattern: (?^i:[\(\)-_.\w\d\s]{0,256})
          maxLength: 256
          type: string
        digest:
          maxLength: 64
          type: string
        isolate-ports:
          type: boolean
    POST-NodesStartall-RB:
      type: object
      properties:
        force:
          type: boolean
        vms:
          type: string
    PUT-ClusterMappingPci-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        map:
          type: array
          items:
            format:
              description:
                description: Description of the node specific device.
                maxLength: 4096
                optional: 1
                type: string
              id:
                description: The vendor and device ID that is expected. Used for detecting hardware changes
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
              iommugroup:
                description: The IOMMU group in which the device is to be expected in. Used for detecting hardware changes.
                optional: 1
                type: integer
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: The path to the device. If the function is omitted, the whole device is mapped. In that case use the attributes of the first device. You can give multiple paths as a semicolon seperated list, the first available will then be chosen on guest start.
                pattern: (?:[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?;)*[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?
                type: string
              subsystem-id:
                description: The subsystem vendor and device ID that is expected. Used for detecting hardware changes.
                optional: 1
                pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                type: string
            type: string
        live-migration-capable:
          type: boolean
        description:
          maxLength: 4096
          type: string
        mdev:
          type: boolean
        digest:
          maxLength: 64
          type: string
    POST-NodesLxcStatusStop-RB:
      type: object
      properties:
        overrule-shutdown:
          type: boolean
        skiplock:
          type: boolean
    PUT-NodesCertificatesAcmeCertificate-RB:
      type: object
      properties:
        force:
          type: boolean
    PUT-NodesStorageContent-RB:
      type: object
      properties:
        notes:
          type: string
        protected:
          type: boolean
    DELETE-NodesLxcFirewallIpset-RB:
      type: object
      properties:
        digest:
          maxLength: 64
          type: string
    PUT-ClusterMappingDir-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        map:
          type: array
          items:
            format:
              node:
                description: The cluster node name.
                format: pve-node
                type: string
              path:
                description: Absolute directory path that should be shared with the guest.
                format: pve-storage-path-in-property-string
                type: string
            type: string
        description:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
    NodesQemuFirewall:
      type: array
      items:
        type: object
        properties: {}
    POST-NodesQemuMonitor-RB:
      type: object
      properties:
        command:
          type: string
    NodesQemuFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    Nodes-GET:
      type: array
      items:
        type: object
        properties: {}
    PUT-ClusterReplication-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        remove_job:
          type: string
          enum:
          - local
          - full
        comment:
          maxLength: 4096
          type: string
        schedule:
          maxLength: 128
          type: string
        rate:
          type: number
          minimum: 1
        source:
          type: string
        disable:
          type: boolean
        digest:
          maxLength: 64
          type: string
    POST-ClusterBackup-RB:
      type: object
      properties:
        enabled:
          type: boolean
        lockwait:
          type: integer
        starttime:
          pattern: '\d{1,2}:\d{1,2}'
          type: string
        mode:
          type: string
          enum:
          - snapshot
          - suspend
          - stop
        quiet:
          type: boolean
        mailnotification:
          type: string
          enum:
          - always
          - failure
        exclude-path:
          type: array
          items:
            type: string
        dow:
          type: string
        node:
          type: string
        tmpdir:
          type: string
        stdexcludes:
          type: boolean
        maxfiles:
          type: integer
          minimum: 1
        vmid:
          type: string
        notification-mode:
          type: string
          enum:
          - auto
          - legacy-sendmail
          - notification-system
        exclude:
          type: string
        fleecing:
          type: string
        repeat-missed:
          type: boolean
        storage:
          type: string
        notes-template:
          maxLength: 1024
          type: string
        performance:
          type: string
        notification-target:
          type: string
        remove:
          type: boolean
        bwlimit:
          type: integer
        compress:
          type: string
          enum:
          - "0"
          - "1"
          - gzip
          - lzo
          - zstd
        script:
          type: string
        dumpdir:
          type: string
        mailto:
          type: string
        pool:
          type: string
        prune-backups:
          type: string
        stopwait:
          type: integer
        schedule:
          maxLength: 128
          type: string
        pigz:
          type: integer
        stop:
          type: boolean
        protected:
          type: boolean
        comment:
          maxLength: 512
          type: string
        all:
          type: boolean
        pbs-change-detection-mode:
          type: string
          enum:
          - legacy
          - data
          - metadata
        notification-policy:
          type: string
          enum:
          - always
          - failure
          - never
        zstd:
          type: integer
        id:
          type: string
        ionice:
          type: integer
          maximum: 8
    POST-NodesDisksZfs-RB:
      type: object
      properties:
        name:
          type: string
        add_storage:
          type: boolean
        compression:
          type: string
          enum:
          - "on"
          - "off"
          - gzip
          - lz4
          - lzjb
          - zle
          - zstd
        draid-config:
          type: string
        devices:
          type: string
        raidlevel:
          type: string
          enum:
          - single
          - mirror
          - raid10
          - raidz
          - raidz2
          - raidz3
          - draid
          - draid2
          - draid3
        ashift:
          maximum: 16
          type: integer
          minimum: 9
    GET-NodesQemuFirewallLog-RB:
      type: object
      properties:
        limit:
          type: integer
        start:
          type: integer
        since:
          type: integer
        until:
          type: integer
    ClusterJobsRealmsync:
      type: array
      items:
        type: object
        properties:
          last-run:
            type: integer
          enabled:
            type: boolean
          scope:
            type: string
            enum:
            - users
            - groups
            - both
          remove-vanished:
            pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
            type: string
          schedule:
            type: string
          id:
            type: string
          realm:
            maxLength: 32
            type: string
          comment:
            type: string
          next-run:
            type: integer
    ClusterHa:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
    GET-NodesScanNfs-RB:
      type: object
      properties:
        server:
          type: string
    POST-NodesQemuFirewallRules-RB:
      type: object
      properties:
        macro:
          maxLength: 128
          type: string
        iface:
          minLength: 2
          maxLength: 20
          type: string
        action:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 20
          type: string
        pos:
          type: integer
        type:
          type: string
          enum:
          - in
          - out
          - forward
          - group
        log:
          type: string
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          - nolog
        enable:
          type: integer
        icmp-type:
          type: string
        dport:
          type: string
        proto:
          type: string
        dest:
          maxLength: 512
          type: string
        digest:
          maxLength: 64
          type: string
        sport:
          type: string
        source:
          maxLength: 512
          type: string
        comment:
          type: string
    PUT-ClusterHaGroups-RB:
      type: object
      properties:
        delete:
          maxLength: 4096
          type: string
        restricted:
          type: boolean
        nofailback:
          type: boolean
        nodes:
          type: string
        comment:
          maxLength: 4096
          type: string
        digest:
          maxLength: 64
          type: string
    ClusterMappingUsb:
      type: array
      items:
        type: object
        properties:
          error:
            type: 
            items:
              properties:
                message:
                  description: The message of the error
                  type: string
                severity:
                  description: The severity of the error
                  type: string
              type: object
          map:
            type: array
            items:
              description: A mapping for a node.
              type: string
          description:
            type: string
          id:
            type: string
    GET-NodesReplicationLog-RB:
      type: object
      properties:
        limit:
          type: integer
        start:
          type: integer
    GET-NodesQemuMigrate-RB:
      type: object
      properties:
        target:
          type: string
    PUT-Pools-RB:
      type: object
      properties:
        comment:
          type: string
        delete:
          type: boolean
        vms:
          type: string
        allow-move:
          type: boolean
        storage:
          type: string
    PUT-AccessPassword-RB:
      type: object
      properties:
        password:
          minLength: 8
          maxLength: 64
          type: string
        userid:
          maxLength: 64
          type: string
        confirmation-password:
          minLength: 5
          maxLength: 64
          type: string
    POST-NodesLxcStatusReboot-RB:
      type: object
      properties:
        timeout:
          type: integer
    PUT-NodesQemuFirewallAliases-RB:
      type: object
      properties:
        comment:
          type: string
        digest:
          maxLength: 64
          type: string
        rename:
          pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
          minLength: 2
          maxLength: 64
          type: string
        cidr:
          type: string
    NodesQemuMigrate:
      type: object
      properties:
        local_disks:
          type: array
          items:
            properties:
              cdrom:
                description: True if the disk is a cdrom.
                type: boolean
              is_unused:
                description: True if the disk is unused.
                type: boolean
              size:
                description: The size of the disk in bytes.
                type: integer
              volid:
                description: The volid of the disk.
                type: string
            type: object
        allowed_nodes:
          type: array
          items:
            description: An allowed node
            type: string
        mapped-resources:
          type: array
          items:
            description: A mapped resource
            type: string
        local_resources:
          type: array
          items:
            description: A local resource
            type: string
        running:
          type: boolean
        not_allowed_nodes:
          type: object
          properties:
            unavailable_storages:
              description: A list of not available storages.
              items:
                description: A storage
                type: string
              optional: 1
              type: array
        mapped-resource-info:
          type: object
    ClusterSdnVnetsFirewallRules-GET:
      type: array
      items:
        type: object
        properties:
          pos:
            type: integer
    DELETE-NodesQemu-RB:
      type: object
      properties:
        destroy-unreferenced-disks:
          type: boolean
        skiplock:
          type: boolean
        purge:
          type: boolean

